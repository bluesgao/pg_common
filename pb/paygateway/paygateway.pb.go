// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: paygateway.proto

package paygateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayChannelStatus int32

const (
	PayChannelStatus_PayChannelStatusInit     PayChannelStatus = 0 // 初始化
	PayChannelStatus_PayChannelStatusActive   PayChannelStatus = 1 // 激活
	PayChannelStatus_PayChannelStatusInactive PayChannelStatus = 2 // 禁用
)

// Enum value maps for PayChannelStatus.
var (
	PayChannelStatus_name = map[int32]string{
		0: "PayChannelStatusInit",
		1: "PayChannelStatusActive",
		2: "PayChannelStatusInactive",
	}
	PayChannelStatus_value = map[string]int32{
		"PayChannelStatusInit":     0,
		"PayChannelStatusActive":   1,
		"PayChannelStatusInactive": 2,
	}
)

func (x PayChannelStatus) Enum() *PayChannelStatus {
	p := new(PayChannelStatus)
	*p = x
	return p
}

func (x PayChannelStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[0].Descriptor()
}

func (PayChannelStatus) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[0]
}

func (x PayChannelStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelStatus.Descriptor instead.
func (PayChannelStatus) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{0}
}

type PayChannelBizType int32

const (
	PayChannelBizType_PayChannelBizTypeDeposit  PayChannelBizType = 0 // 充值
	PayChannelBizType_PayChannelBizTypeWithdraw PayChannelBizType = 1 // 提款
)

// Enum value maps for PayChannelBizType.
var (
	PayChannelBizType_name = map[int32]string{
		0: "PayChannelBizTypeDeposit",
		1: "PayChannelBizTypeWithdraw",
	}
	PayChannelBizType_value = map[string]int32{
		"PayChannelBizTypeDeposit":  0,
		"PayChannelBizTypeWithdraw": 1,
	}
)

func (x PayChannelBizType) Enum() *PayChannelBizType {
	p := new(PayChannelBizType)
	*p = x
	return p
}

func (x PayChannelBizType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelBizType) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[1].Descriptor()
}

func (PayChannelBizType) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[1]
}

func (x PayChannelBizType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelBizType.Descriptor instead.
func (PayChannelBizType) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{1}
}

type PayChannelQuotaType int32

const (
	PayChannelQuotaType_PayChannelQuotaTypeAmount PayChannelQuotaType = 0 // 金额
	PayChannelQuotaType_PayChannelQuotaTypeCount  PayChannelQuotaType = 1 // 笔数
)

// Enum value maps for PayChannelQuotaType.
var (
	PayChannelQuotaType_name = map[int32]string{
		0: "PayChannelQuotaTypeAmount",
		1: "PayChannelQuotaTypeCount",
	}
	PayChannelQuotaType_value = map[string]int32{
		"PayChannelQuotaTypeAmount": 0,
		"PayChannelQuotaTypeCount":  1,
	}
)

func (x PayChannelQuotaType) Enum() *PayChannelQuotaType {
	p := new(PayChannelQuotaType)
	*p = x
	return p
}

func (x PayChannelQuotaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelQuotaType) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[2].Descriptor()
}

func (PayChannelQuotaType) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[2]
}

func (x PayChannelQuotaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelQuotaType.Descriptor instead.
func (PayChannelQuotaType) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{2}
}

type PayChannelQuotaCycle int32

const (
	PayChannelQuotaCycle_PayChannelQuotaCycleDay   PayChannelQuotaCycle = 0 // 日
	PayChannelQuotaCycle_PayChannelQuotaCycleMonth PayChannelQuotaCycle = 1 // 月
	PayChannelQuotaCycle_PayChannelQuotaCycleYear  PayChannelQuotaCycle = 2 // 年
)

// Enum value maps for PayChannelQuotaCycle.
var (
	PayChannelQuotaCycle_name = map[int32]string{
		0: "PayChannelQuotaCycleDay",
		1: "PayChannelQuotaCycleMonth",
		2: "PayChannelQuotaCycleYear",
	}
	PayChannelQuotaCycle_value = map[string]int32{
		"PayChannelQuotaCycleDay":   0,
		"PayChannelQuotaCycleMonth": 1,
		"PayChannelQuotaCycleYear":  2,
	}
)

func (x PayChannelQuotaCycle) Enum() *PayChannelQuotaCycle {
	p := new(PayChannelQuotaCycle)
	*p = x
	return p
}

func (x PayChannelQuotaCycle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelQuotaCycle) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[3].Descriptor()
}

func (PayChannelQuotaCycle) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[3]
}

func (x PayChannelQuotaCycle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelQuotaCycle.Descriptor instead.
func (PayChannelQuotaCycle) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{3}
}

type PayChannelQuotaStatus int32

const (
	PayChannelQuotaStatus_PayChannelQuotaStatusInit     PayChannelQuotaStatus = 0 // 初始化
	PayChannelQuotaStatus_PayChannelQuotaStatusActive   PayChannelQuotaStatus = 1 // 激活
	PayChannelQuotaStatus_PayChannelQuotaStatusInactive PayChannelQuotaStatus = 2 // 禁用
)

// Enum value maps for PayChannelQuotaStatus.
var (
	PayChannelQuotaStatus_name = map[int32]string{
		0: "PayChannelQuotaStatusInit",
		1: "PayChannelQuotaStatusActive",
		2: "PayChannelQuotaStatusInactive",
	}
	PayChannelQuotaStatus_value = map[string]int32{
		"PayChannelQuotaStatusInit":     0,
		"PayChannelQuotaStatusActive":   1,
		"PayChannelQuotaStatusInactive": 2,
	}
)

func (x PayChannelQuotaStatus) Enum() *PayChannelQuotaStatus {
	p := new(PayChannelQuotaStatus)
	*p = x
	return p
}

func (x PayChannelQuotaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelQuotaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[4].Descriptor()
}

func (PayChannelQuotaStatus) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[4]
}

func (x PayChannelQuotaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelQuotaStatus.Descriptor instead.
func (PayChannelQuotaStatus) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{4}
}

type PayChannelFeeMode int32

const (
	PayChannelFeeMode_PayChannelFeeModeFixed   PayChannelFeeMode = 0 // 每笔固定金额
	PayChannelFeeMode_PayChannelFeeModePercent PayChannelFeeMode = 1 // 每笔百分比
	PayChannelFeeMode_PayChannelFeeModeTierd   PayChannelFeeMode = 2 // 阶梯费率
)

// Enum value maps for PayChannelFeeMode.
var (
	PayChannelFeeMode_name = map[int32]string{
		0: "PayChannelFeeModeFixed",
		1: "PayChannelFeeModePercent",
		2: "PayChannelFeeModeTierd",
	}
	PayChannelFeeMode_value = map[string]int32{
		"PayChannelFeeModeFixed":   0,
		"PayChannelFeeModePercent": 1,
		"PayChannelFeeModeTierd":   2,
	}
)

func (x PayChannelFeeMode) Enum() *PayChannelFeeMode {
	p := new(PayChannelFeeMode)
	*p = x
	return p
}

func (x PayChannelFeeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelFeeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[5].Descriptor()
}

func (PayChannelFeeMode) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[5]
}

func (x PayChannelFeeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelFeeMode.Descriptor instead.
func (PayChannelFeeMode) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{5}
}

type PayChannelPayMode int32

const (
	PayChannelPayMode_PayChannelPayModeDebitCard  PayChannelPayMode = 0 // 储蓄卡
	PayChannelPayMode_PayChannelPayModeCreditCard PayChannelPayMode = 1 // 信用卡
	PayChannelPayMode_PayChannelPayModeQRCode     PayChannelPayMode = 2 // 收款码
	PayChannelPayMode_PayChannelPayModeAlipay     PayChannelPayMode = 3 // 支付宝
	PayChannelPayMode_PayChannelPayModeWechat     PayChannelPayMode = 4 // 微信
	PayChannelPayMode_PayChannelPayModePaypal     PayChannelPayMode = 5 // Paypal
	PayChannelPayMode_PayChannelPayModeTRC32      PayChannelPayMode = 6 // TRC32
)

// Enum value maps for PayChannelPayMode.
var (
	PayChannelPayMode_name = map[int32]string{
		0: "PayChannelPayModeDebitCard",
		1: "PayChannelPayModeCreditCard",
		2: "PayChannelPayModeQRCode",
		3: "PayChannelPayModeAlipay",
		4: "PayChannelPayModeWechat",
		5: "PayChannelPayModePaypal",
		6: "PayChannelPayModeTRC32",
	}
	PayChannelPayMode_value = map[string]int32{
		"PayChannelPayModeDebitCard":  0,
		"PayChannelPayModeCreditCard": 1,
		"PayChannelPayModeQRCode":     2,
		"PayChannelPayModeAlipay":     3,
		"PayChannelPayModeWechat":     4,
		"PayChannelPayModePaypal":     5,
		"PayChannelPayModeTRC32":      6,
	}
)

func (x PayChannelPayMode) Enum() *PayChannelPayMode {
	p := new(PayChannelPayMode)
	*p = x
	return p
}

func (x PayChannelPayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelPayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[6].Descriptor()
}

func (PayChannelPayMode) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[6]
}

func (x PayChannelPayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelPayMode.Descriptor instead.
func (PayChannelPayMode) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{6}
}

type PayChannelOrderBizType int32

const (
	PayChannelOrderBizType_PayChannelOrderBizTypeDeposit  PayChannelOrderBizType = 0 // 充值
	PayChannelOrderBizType_PayChannelOrderBizTypeWithdraw PayChannelOrderBizType = 1 // 提款
	PayChannelOrderBizType_PayChannelOrderBizTypeRefund   PayChannelOrderBizType = 2 // 退款
)

// Enum value maps for PayChannelOrderBizType.
var (
	PayChannelOrderBizType_name = map[int32]string{
		0: "PayChannelOrderBizTypeDeposit",
		1: "PayChannelOrderBizTypeWithdraw",
		2: "PayChannelOrderBizTypeRefund",
	}
	PayChannelOrderBizType_value = map[string]int32{
		"PayChannelOrderBizTypeDeposit":  0,
		"PayChannelOrderBizTypeWithdraw": 1,
		"PayChannelOrderBizTypeRefund":   2,
	}
)

func (x PayChannelOrderBizType) Enum() *PayChannelOrderBizType {
	p := new(PayChannelOrderBizType)
	*p = x
	return p
}

func (x PayChannelOrderBizType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelOrderBizType) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[7].Descriptor()
}

func (PayChannelOrderBizType) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[7]
}

func (x PayChannelOrderBizType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelOrderBizType.Descriptor instead.
func (PayChannelOrderBizType) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{7}
}

type PayChannelOrderStatus int32

const (
	PayChannelOrderStatus_PayChannelOrderStatusInit    PayChannelOrderStatus = 0 // 初始化
	PayChannelOrderStatus_PayChannelOrderStatusSuccess PayChannelOrderStatus = 1 // 成功
	PayChannelOrderStatus_PayChannelOrderStatusFailed  PayChannelOrderStatus = 2 // 失败
)

// Enum value maps for PayChannelOrderStatus.
var (
	PayChannelOrderStatus_name = map[int32]string{
		0: "PayChannelOrderStatusInit",
		1: "PayChannelOrderStatusSuccess",
		2: "PayChannelOrderStatusFailed",
	}
	PayChannelOrderStatus_value = map[string]int32{
		"PayChannelOrderStatusInit":    0,
		"PayChannelOrderStatusSuccess": 1,
		"PayChannelOrderStatusFailed":  2,
	}
)

func (x PayChannelOrderStatus) Enum() *PayChannelOrderStatus {
	p := new(PayChannelOrderStatus)
	*p = x
	return p
}

func (x PayChannelOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannelOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_paygateway_proto_enumTypes[8].Descriptor()
}

func (PayChannelOrderStatus) Type() protoreflect.EnumType {
	return &file_paygateway_proto_enumTypes[8]
}

func (x PayChannelOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannelOrderStatus.Descriptor instead.
func (PayChannelOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{8}
}

type BaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BaseResult) Reset() {
	*x = BaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResult) ProtoMessage() {}

func (x *BaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResult.ProtoReflect.Descriptor instead.
func (*BaseResult) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BaseResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// 分页请求
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         // 当前页
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 每页大小
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`       // 总数
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PayChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  string           `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`                             // 渠道ID
	Name       string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       // 渠道名称
	Avatar     string           `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                   // 渠道头像
	Phone      string           `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                     // 渠道手机号
	Email      string           `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                                     // 渠道邮箱
	Status     PayChannelStatus `protobuf:"varint,6,opt,name=status,proto3,enum=paygateway.PayChannelStatus" json:"status,omitempty"` // 渠道状态
	Remark     string           `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                                   // 备注
	CreateBy   string           `protobuf:"bytes,8,opt,name=createBy,proto3" json:"createBy,omitempty"`                               // 创建者
	CreateTime string           `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`                           // 创建时间
	UpdateBy   string           `protobuf:"bytes,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`                              // 更新者
	UpdateTime string           `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                          // 更新时间
}

func (x *PayChannel) Reset() {
	*x = PayChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannel) ProtoMessage() {}

func (x *PayChannel) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannel.ProtoReflect.Descriptor instead.
func (*PayChannel) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{2}
}

func (x *PayChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PayChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayChannel) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayChannel) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PayChannel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PayChannel) GetStatus() PayChannelStatus {
	if x != nil {
		return x.Status
	}
	return PayChannelStatus_PayChannelStatusInit
}

func (x *PayChannel) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayChannel) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PayChannel) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PayChannel) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PayChannel) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type PayChannelParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId     string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`         // 渠道ID
	MchId         string `protobuf:"bytes,2,opt,name=mchId,proto3" json:"mchId,omitempty"`                 // 商户ID
	AppId         string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`                 // 应用ID
	AppSecret     string `protobuf:"bytes,4,opt,name=appSecret,proto3" json:"appSecret,omitempty"`         // 应用密钥
	ApiPublicKey  string `protobuf:"bytes,5,opt,name=apiPublicKey,proto3" json:"apiPublicKey,omitempty"`   // API公钥
	ApiPrivateKey string `protobuf:"bytes,6,opt,name=apiPrivateKey,proto3" json:"apiPrivateKey,omitempty"` // API私钥
	PayUrl        string `protobuf:"bytes,7,opt,name=payUrl,proto3" json:"payUrl,omitempty"`               // 支付URL
	CallbackUrl   string `protobuf:"bytes,8,opt,name=callbackUrl,proto3" json:"callbackUrl,omitempty"`     // 回调URL
	Remark        string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`               // 备注
	CreateBy      string `protobuf:"bytes,10,opt,name=createBy,proto3" json:"createBy,omitempty"`          // 创建者
	CreateTime    string `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`      // 创建时间
	UpdateBy      string `protobuf:"bytes,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`          // 更新者
	UpdateTime    string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`      // 更新时间
}

func (x *PayChannelParams) Reset() {
	*x = PayChannelParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelParams) ProtoMessage() {}

func (x *PayChannelParams) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelParams.ProtoReflect.Descriptor instead.
func (*PayChannelParams) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{3}
}

func (x *PayChannelParams) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PayChannelParams) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *PayChannelParams) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PayChannelParams) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *PayChannelParams) GetApiPublicKey() string {
	if x != nil {
		return x.ApiPublicKey
	}
	return ""
}

func (x *PayChannelParams) GetApiPrivateKey() string {
	if x != nil {
		return x.ApiPrivateKey
	}
	return ""
}

func (x *PayChannelParams) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *PayChannelParams) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *PayChannelParams) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayChannelParams) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PayChannelParams) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PayChannelParams) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PayChannelParams) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type PayChannelQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId                 string                `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`                                         // 渠道ID
	BizType                   PayChannelBizType     `protobuf:"varint,2,opt,name=bizType,proto3,enum=paygateway.PayChannelBizType" json:"bizType,omitempty"`          // 业务类型
	PayMode                   PayChannelPayMode     `protobuf:"varint,3,opt,name=payMode,proto3,enum=paygateway.PayChannelPayMode" json:"payMode,omitempty"`          // 支付方式
	Currency                  string                `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                                           // 币种
	QuotaType                 PayChannelQuotaType   `protobuf:"varint,5,opt,name=quotaType,proto3,enum=paygateway.PayChannelQuotaType" json:"quotaType,omitempty"`    // 配额类型
	QuotaCycle                PayChannelQuotaCycle  `protobuf:"varint,6,opt,name=quotaCycle,proto3,enum=paygateway.PayChannelQuotaCycle" json:"quotaCycle,omitempty"` // 配额周期
	AmountLimit               string                `protobuf:"bytes,7,opt,name=amountLimit,proto3" json:"amountLimit,omitempty"`                                     // 金额限额
	FeeFreeAmountLimit        string                `protobuf:"bytes,8,opt,name=feeFreeAmountLimit,proto3" json:"feeFreeAmountLimit,omitempty"`                       // 免手续费金额限额
	UsedAmount                string                `protobuf:"bytes,9,opt,name=usedAmount,proto3" json:"usedAmount,omitempty"`                                       // 已用金额
	CountLimit                string                `protobuf:"bytes,10,opt,name=countLimit,proto3" json:"countLimit,omitempty"`                                      // 笔数限额
	FeeFreeCountLimit         string                `protobuf:"bytes,11,opt,name=feeFreeCountLimit,proto3" json:"feeFreeCountLimit,omitempty"`                        // 免手续费笔数限额
	UsedCount                 string                `protobuf:"bytes,12,opt,name=usedCount,proto3" json:"usedCount,omitempty"`                                        // 已用笔数
	PerTransactionAmountLimit string                `protobuf:"bytes,13,opt,name=perTransactionAmountLimit,proto3" json:"perTransactionAmountLimit,omitempty"`        // 单笔限额
	LatestUsedAt              string                `protobuf:"bytes,14,opt,name=latestUsedAt,proto3" json:"latestUsedAt,omitempty"`                                  // 最后使用时间
	Remark                    string                `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`                                              // 备注
	Status                    PayChannelQuotaStatus `protobuf:"varint,16,opt,name=status,proto3,enum=paygateway.PayChannelQuotaStatus" json:"status,omitempty"`       // 状态
	CreateBy                  string                `protobuf:"bytes,17,opt,name=createBy,proto3" json:"createBy,omitempty"`                                          // 创建者
	CreateTime                string                `protobuf:"bytes,18,opt,name=createTime,proto3" json:"createTime,omitempty"`                                      // 创建时间
	UpdateBy                  string                `protobuf:"bytes,19,opt,name=updateBy,proto3" json:"updateBy,omitempty"`                                          // 更新者
	UpdateTime                string                `protobuf:"bytes,20,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                                      // 更新时间
}

func (x *PayChannelQuota) Reset() {
	*x = PayChannelQuota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelQuota) ProtoMessage() {}

func (x *PayChannelQuota) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelQuota.ProtoReflect.Descriptor instead.
func (*PayChannelQuota) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{4}
}

func (x *PayChannelQuota) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PayChannelQuota) GetBizType() PayChannelBizType {
	if x != nil {
		return x.BizType
	}
	return PayChannelBizType_PayChannelBizTypeDeposit
}

func (x *PayChannelQuota) GetPayMode() PayChannelPayMode {
	if x != nil {
		return x.PayMode
	}
	return PayChannelPayMode_PayChannelPayModeDebitCard
}

func (x *PayChannelQuota) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayChannelQuota) GetQuotaType() PayChannelQuotaType {
	if x != nil {
		return x.QuotaType
	}
	return PayChannelQuotaType_PayChannelQuotaTypeAmount
}

func (x *PayChannelQuota) GetQuotaCycle() PayChannelQuotaCycle {
	if x != nil {
		return x.QuotaCycle
	}
	return PayChannelQuotaCycle_PayChannelQuotaCycleDay
}

func (x *PayChannelQuota) GetAmountLimit() string {
	if x != nil {
		return x.AmountLimit
	}
	return ""
}

func (x *PayChannelQuota) GetFeeFreeAmountLimit() string {
	if x != nil {
		return x.FeeFreeAmountLimit
	}
	return ""
}

func (x *PayChannelQuota) GetUsedAmount() string {
	if x != nil {
		return x.UsedAmount
	}
	return ""
}

func (x *PayChannelQuota) GetCountLimit() string {
	if x != nil {
		return x.CountLimit
	}
	return ""
}

func (x *PayChannelQuota) GetFeeFreeCountLimit() string {
	if x != nil {
		return x.FeeFreeCountLimit
	}
	return ""
}

func (x *PayChannelQuota) GetUsedCount() string {
	if x != nil {
		return x.UsedCount
	}
	return ""
}

func (x *PayChannelQuota) GetPerTransactionAmountLimit() string {
	if x != nil {
		return x.PerTransactionAmountLimit
	}
	return ""
}

func (x *PayChannelQuota) GetLatestUsedAt() string {
	if x != nil {
		return x.LatestUsedAt
	}
	return ""
}

func (x *PayChannelQuota) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayChannelQuota) GetStatus() PayChannelQuotaStatus {
	if x != nil {
		return x.Status
	}
	return PayChannelQuotaStatus_PayChannelQuotaStatusInit
}

func (x *PayChannelQuota) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PayChannelQuota) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PayChannelQuota) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *PayChannelQuota) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type GetPayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *GetPayChannelRequest) Reset() {
	*x = GetPayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelRequest) ProtoMessage() {}

func (x *GetPayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelRequest.ProtoReflect.Descriptor instead.
func (*GetPayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{5}
}

func (x *GetPayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetPayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	PayChannel *PayChannel `protobuf:"bytes,2,opt,name=payChannel,proto3" json:"payChannel,omitempty"`
}

func (x *GetPayChannelResponse) Reset() {
	*x = GetPayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelResponse) ProtoMessage() {}

func (x *GetPayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelResponse.ProtoReflect.Descriptor instead.
func (*GetPayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{6}
}

func (x *GetPayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayChannelResponse) GetPayChannel() *PayChannel {
	if x != nil {
		return x.PayChannel
	}
	return nil
}

type CreatePayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	PayUrl    string `protobuf:"bytes,4,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	NotifyUrl string `protobuf:"bytes,5,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Remark    string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreatePayChannelRequest) Reset() {
	*x = CreatePayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelRequest) ProtoMessage() {}

func (x *CreatePayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePayChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePayChannelRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreatePayChannelRequest) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *CreatePayChannelRequest) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CreatePayChannelRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreatePayChannelRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreatePayChannelRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreatePayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreatePayChannelResponse) Reset() {
	*x = CreatePayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelResponse) ProtoMessage() {}

func (x *CreatePayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type UpdatePayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Remark    string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdatePayChannelRequest) Reset() {
	*x = UpdatePayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelRequest) ProtoMessage() {}

func (x *UpdatePayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatePayChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePayChannelRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdatePayChannelRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdatePayChannelRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdatePayChannelRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdatePayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *UpdatePayChannelResponse) Reset() {
	*x = UpdatePayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelResponse) ProtoMessage() {}

func (x *UpdatePayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{10}
}

func (x *UpdatePayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type ListPayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListPayChannelRequest) Reset() {
	*x = ListPayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPayChannelRequest) ProtoMessage() {}

func (x *ListPayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPayChannelRequest.ProtoReflect.Descriptor instead.
func (*ListPayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{11}
}

func (x *ListPayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ListPayChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListPayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult  *BaseResult   `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	PayChannels []*PayChannel `protobuf:"bytes,2,rep,name=payChannels,proto3" json:"payChannels,omitempty"`
}

func (x *ListPayChannelResponse) Reset() {
	*x = ListPayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPayChannelResponse) ProtoMessage() {}

func (x *ListPayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPayChannelResponse.ProtoReflect.Descriptor instead.
func (*ListPayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{12}
}

func (x *ListPayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListPayChannelResponse) GetPayChannels() []*PayChannel {
	if x != nil {
		return x.PayChannels
	}
	return nil
}

type ActivatePayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *ActivatePayChannelRequest) Reset() {
	*x = ActivatePayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivatePayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePayChannelRequest) ProtoMessage() {}

func (x *ActivatePayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePayChannelRequest.ProtoReflect.Descriptor instead.
func (*ActivatePayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{13}
}

func (x *ActivatePayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ActivatePayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *ActivatePayChannelResponse) Reset() {
	*x = ActivatePayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivatePayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePayChannelResponse) ProtoMessage() {}

func (x *ActivatePayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePayChannelResponse.ProtoReflect.Descriptor instead.
func (*ActivatePayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{14}
}

func (x *ActivatePayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type InactivatePayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *InactivatePayChannelRequest) Reset() {
	*x = InactivatePayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivatePayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivatePayChannelRequest) ProtoMessage() {}

func (x *InactivatePayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivatePayChannelRequest.ProtoReflect.Descriptor instead.
func (*InactivatePayChannelRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{15}
}

func (x *InactivatePayChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type InactivatePayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *InactivatePayChannelResponse) Reset() {
	*x = InactivatePayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivatePayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivatePayChannelResponse) ProtoMessage() {}

func (x *InactivatePayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivatePayChannelResponse.ProtoReflect.Descriptor instead.
func (*InactivatePayChannelResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{16}
}

func (x *InactivatePayChannelResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type CreatePayChannelParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId     string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	MchId         string `protobuf:"bytes,2,opt,name=mchId,proto3" json:"mchId,omitempty"`
	AppId         string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	AppSecretKey  string `protobuf:"bytes,4,opt,name=appSecretKey,proto3" json:"appSecretKey,omitempty"`
	ApiPublicKey  string `protobuf:"bytes,5,opt,name=apiPublicKey,proto3" json:"apiPublicKey,omitempty"`
	ApiPrivateKey string `protobuf:"bytes,6,opt,name=apiPrivateKey,proto3" json:"apiPrivateKey,omitempty"`
	PayUrl        string `protobuf:"bytes,7,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	CallbackUrl   string `protobuf:"bytes,8,opt,name=callbackUrl,proto3" json:"callbackUrl,omitempty"`
	Remark        string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreatePayChannelParamsRequest) Reset() {
	*x = CreatePayChannelParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelParamsRequest) ProtoMessage() {}

func (x *CreatePayChannelParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelParamsRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelParamsRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePayChannelParamsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetAppSecretKey() string {
	if x != nil {
		return x.AppSecretKey
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetApiPublicKey() string {
	if x != nil {
		return x.ApiPublicKey
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetApiPrivateKey() string {
	if x != nil {
		return x.ApiPrivateKey
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *CreatePayChannelParamsRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreatePayChannelParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreatePayChannelParamsResponse) Reset() {
	*x = CreatePayChannelParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelParamsResponse) ProtoMessage() {}

func (x *CreatePayChannelParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelParamsResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelParamsResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{18}
}

func (x *CreatePayChannelParamsResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetPayChannelParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *GetPayChannelParamsRequest) Reset() {
	*x = GetPayChannelParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelParamsRequest) ProtoMessage() {}

func (x *GetPayChannelParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelParamsRequest.ProtoReflect.Descriptor instead.
func (*GetPayChannelParamsRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{19}
}

func (x *GetPayChannelParamsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetPayChannelParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult       *BaseResult       `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	PayChannelParams *PayChannelParams `protobuf:"bytes,2,opt,name=payChannelParams,proto3" json:"payChannelParams,omitempty"`
}

func (x *GetPayChannelParamsResponse) Reset() {
	*x = GetPayChannelParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelParamsResponse) ProtoMessage() {}

func (x *GetPayChannelParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelParamsResponse.ProtoReflect.Descriptor instead.
func (*GetPayChannelParamsResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{20}
}

func (x *GetPayChannelParamsResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayChannelParamsResponse) GetPayChannelParams() *PayChannelParams {
	if x != nil {
		return x.PayChannelParams
	}
	return nil
}

type UpdatePayChannelParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId     string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ChannelParams string `protobuf:"bytes,2,opt,name=channelParams,proto3" json:"channelParams,omitempty"`
}

func (x *UpdatePayChannelParamsRequest) Reset() {
	*x = UpdatePayChannelParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelParamsRequest) ProtoMessage() {}

func (x *UpdatePayChannelParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelParamsRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelParamsRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{21}
}

func (x *UpdatePayChannelParamsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatePayChannelParamsRequest) GetChannelParams() string {
	if x != nil {
		return x.ChannelParams
	}
	return ""
}

type UpdatePayChannelParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *UpdatePayChannelParamsResponse) Reset() {
	*x = UpdatePayChannelParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelParamsResponse) ProtoMessage() {}

func (x *UpdatePayChannelParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelParamsResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelParamsResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{22}
}

func (x *UpdatePayChannelParamsResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type CreatePayChannelQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string           `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	PayChannelQuota *PayChannelQuota `protobuf:"bytes,2,opt,name=payChannelQuota,proto3" json:"payChannelQuota,omitempty"`
}

func (x *CreatePayChannelQuotaRequest) Reset() {
	*x = CreatePayChannelQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelQuotaRequest) ProtoMessage() {}

func (x *CreatePayChannelQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelQuotaRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelQuotaRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{23}
}

func (x *CreatePayChannelQuotaRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePayChannelQuotaRequest) GetPayChannelQuota() *PayChannelQuota {
	if x != nil {
		return x.PayChannelQuota
	}
	return nil
}

type CreatePayChannelQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreatePayChannelQuotaResponse) Reset() {
	*x = CreatePayChannelQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelQuotaResponse) ProtoMessage() {}

func (x *CreatePayChannelQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelQuotaResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelQuotaResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePayChannelQuotaResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetPayChannelQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *GetPayChannelQuotaRequest) Reset() {
	*x = GetPayChannelQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelQuotaRequest) ProtoMessage() {}

func (x *GetPayChannelQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelQuotaRequest.ProtoReflect.Descriptor instead.
func (*GetPayChannelQuotaRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{25}
}

func (x *GetPayChannelQuotaRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetPayChannelQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult       *BaseResult        `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	PayChannelQuotas []*PayChannelQuota `protobuf:"bytes,2,rep,name=payChannelQuotas,proto3" json:"payChannelQuotas,omitempty"`
}

func (x *GetPayChannelQuotaResponse) Reset() {
	*x = GetPayChannelQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelQuotaResponse) ProtoMessage() {}

func (x *GetPayChannelQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelQuotaResponse.ProtoReflect.Descriptor instead.
func (*GetPayChannelQuotaResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{26}
}

func (x *GetPayChannelQuotaResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayChannelQuotaResponse) GetPayChannelQuotas() []*PayChannelQuota {
	if x != nil {
		return x.PayChannelQuotas
	}
	return nil
}

type UpdatePayChannelQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string           `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	PayChannelQuota *PayChannelQuota `protobuf:"bytes,2,opt,name=payChannelQuota,proto3" json:"payChannelQuota,omitempty"`
}

func (x *UpdatePayChannelQuotaRequest) Reset() {
	*x = UpdatePayChannelQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelQuotaRequest) ProtoMessage() {}

func (x *UpdatePayChannelQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelQuotaRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelQuotaRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePayChannelQuotaRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatePayChannelQuotaRequest) GetPayChannelQuota() *PayChannelQuota {
	if x != nil {
		return x.PayChannelQuota
	}
	return nil
}

type UpdatePayChannelQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *UpdatePayChannelQuotaResponse) Reset() {
	*x = UpdatePayChannelQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelQuotaResponse) ProtoMessage() {}

func (x *UpdatePayChannelQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelQuotaResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelQuotaResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{28}
}

func (x *UpdatePayChannelQuotaResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

// //////////////////////////////////////////////////////////
type CreatePayChannelFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ChannelFee string `protobuf:"bytes,2,opt,name=channelFee,proto3" json:"channelFee,omitempty"`
}

func (x *CreatePayChannelFeeRequest) Reset() {
	*x = CreatePayChannelFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelFeeRequest) ProtoMessage() {}

func (x *CreatePayChannelFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelFeeRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelFeeRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{29}
}

func (x *CreatePayChannelFeeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePayChannelFeeRequest) GetChannelFee() string {
	if x != nil {
		return x.ChannelFee
	}
	return ""
}

type CreatePayChannelFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreatePayChannelFeeResponse) Reset() {
	*x = CreatePayChannelFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelFeeResponse) ProtoMessage() {}

func (x *CreatePayChannelFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelFeeResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelFeeResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePayChannelFeeResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetPayChannelFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *GetPayChannelFeeRequest) Reset() {
	*x = GetPayChannelFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelFeeRequest) ProtoMessage() {}

func (x *GetPayChannelFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelFeeRequest.ProtoReflect.Descriptor instead.
func (*GetPayChannelFeeRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{31}
}

func (x *GetPayChannelFeeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetPayChannelFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	ChannelFee string      `protobuf:"bytes,2,opt,name=channelFee,proto3" json:"channelFee,omitempty"`
}

func (x *GetPayChannelFeeResponse) Reset() {
	*x = GetPayChannelFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelFeeResponse) ProtoMessage() {}

func (x *GetPayChannelFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelFeeResponse.ProtoReflect.Descriptor instead.
func (*GetPayChannelFeeResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{32}
}

func (x *GetPayChannelFeeResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayChannelFeeResponse) GetChannelFee() string {
	if x != nil {
		return x.ChannelFee
	}
	return ""
}

type UpdatePayChannelFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ChannelFee string `protobuf:"bytes,2,opt,name=channelFee,proto3" json:"channelFee,omitempty"`
}

func (x *UpdatePayChannelFeeRequest) Reset() {
	*x = UpdatePayChannelFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelFeeRequest) ProtoMessage() {}

func (x *UpdatePayChannelFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelFeeRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{33}
}

func (x *UpdatePayChannelFeeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatePayChannelFeeRequest) GetChannelFee() string {
	if x != nil {
		return x.ChannelFee
	}
	return ""
}

type UpdatePayChannelFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *UpdatePayChannelFeeResponse) Reset() {
	*x = UpdatePayChannelFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelFeeResponse) ProtoMessage() {}

func (x *UpdatePayChannelFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelFeeResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{34}
}

func (x *UpdatePayChannelFeeResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type PayChannelOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId                  string                 `protobuf:"bytes,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	MerchantId                 string                 `protobuf:"bytes,3,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	OrderId                    string                 `protobuf:"bytes,4,opt,name=orderId,proto3" json:"orderId,omitempty"`
	TxOrderId                  string                 `protobuf:"bytes,5,opt,name=txOrderId,proto3" json:"txOrderId,omitempty"`
	BizType                    PayChannelOrderBizType `protobuf:"varint,6,opt,name=bizType,proto3,enum=paygateway.PayChannelOrderBizType" json:"bizType,omitempty"`
	TxAmount                   string                 `protobuf:"bytes,7,opt,name=txAmount,proto3" json:"txAmount,omitempty"`
	TxFeeAmount                string                 `protobuf:"bytes,8,opt,name=txFeeAmount,proto3" json:"txFeeAmount,omitempty"`
	TxCurrency                 string                 `protobuf:"bytes,9,opt,name=txCurrency,proto3" json:"txCurrency,omitempty"`
	TxTime                     int64                  `protobuf:"varint,10,opt,name=txTime,proto3" json:"txTime,omitempty"`
	TxDetail                   string                 `protobuf:"bytes,11,opt,name=txDetail,proto3" json:"txDetail,omitempty"`
	Status                     PayChannelOrderStatus  `protobuf:"varint,12,opt,name=status,proto3,enum=paygateway.PayChannelOrderStatus" json:"status,omitempty"`
	ThirdPartySettlementAmount string                 `protobuf:"bytes,13,opt,name=thirdPartySettlementAmount,proto3" json:"thirdPartySettlementAmount,omitempty"`
	ThirdPartyFeeAmount        string                 `protobuf:"bytes,14,opt,name=thirdPartyFeeAmount,proto3" json:"thirdPartyFeeAmount,omitempty"`
	ThirdPartyOrderId          string                 `protobuf:"bytes,15,opt,name=thirdPartyOrderId,proto3" json:"thirdPartyOrderId,omitempty"`
	PayUrl                     string                 `protobuf:"bytes,16,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	PayRequest                 string                 `protobuf:"bytes,17,opt,name=payRequest,proto3" json:"payRequest,omitempty"`
	PayResponse                string                 `protobuf:"bytes,18,opt,name=payResponse,proto3" json:"payResponse,omitempty"`
	CallbackTime               string                 `protobuf:"bytes,19,opt,name=callbackTime,proto3" json:"callbackTime,omitempty"`
	CallbackUrl                string                 `protobuf:"bytes,20,opt,name=callbackUrl,proto3" json:"callbackUrl,omitempty"`
	CallbackResponse           string                 `protobuf:"bytes,21,opt,name=callbackResponse,proto3" json:"callbackResponse,omitempty"`
	Remark                     string                 `protobuf:"bytes,22,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *PayChannelOrder) Reset() {
	*x = PayChannelOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelOrder) ProtoMessage() {}

func (x *PayChannelOrder) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelOrder.ProtoReflect.Descriptor instead.
func (*PayChannelOrder) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{35}
}

func (x *PayChannelOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PayChannelOrder) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PayChannelOrder) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *PayChannelOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayChannelOrder) GetTxOrderId() string {
	if x != nil {
		return x.TxOrderId
	}
	return ""
}

func (x *PayChannelOrder) GetBizType() PayChannelOrderBizType {
	if x != nil {
		return x.BizType
	}
	return PayChannelOrderBizType_PayChannelOrderBizTypeDeposit
}

func (x *PayChannelOrder) GetTxAmount() string {
	if x != nil {
		return x.TxAmount
	}
	return ""
}

func (x *PayChannelOrder) GetTxFeeAmount() string {
	if x != nil {
		return x.TxFeeAmount
	}
	return ""
}

func (x *PayChannelOrder) GetTxCurrency() string {
	if x != nil {
		return x.TxCurrency
	}
	return ""
}

func (x *PayChannelOrder) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *PayChannelOrder) GetTxDetail() string {
	if x != nil {
		return x.TxDetail
	}
	return ""
}

func (x *PayChannelOrder) GetStatus() PayChannelOrderStatus {
	if x != nil {
		return x.Status
	}
	return PayChannelOrderStatus_PayChannelOrderStatusInit
}

func (x *PayChannelOrder) GetThirdPartySettlementAmount() string {
	if x != nil {
		return x.ThirdPartySettlementAmount
	}
	return ""
}

func (x *PayChannelOrder) GetThirdPartyFeeAmount() string {
	if x != nil {
		return x.ThirdPartyFeeAmount
	}
	return ""
}

func (x *PayChannelOrder) GetThirdPartyOrderId() string {
	if x != nil {
		return x.ThirdPartyOrderId
	}
	return ""
}

func (x *PayChannelOrder) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *PayChannelOrder) GetPayRequest() string {
	if x != nil {
		return x.PayRequest
	}
	return ""
}

func (x *PayChannelOrder) GetPayResponse() string {
	if x != nil {
		return x.PayResponse
	}
	return ""
}

func (x *PayChannelOrder) GetCallbackTime() string {
	if x != nil {
		return x.CallbackTime
	}
	return ""
}

func (x *PayChannelOrder) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *PayChannelOrder) GetCallbackResponse() string {
	if x != nil {
		return x.CallbackResponse
	}
	return ""
}

func (x *PayChannelOrder) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreatePayChannelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId   string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	MerchantId  string                 `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	BizType     PayChannelOrderBizType `protobuf:"varint,3,opt,name=bizType,proto3,enum=paygateway.PayChannelOrderBizType" json:"bizType,omitempty"`
	TxOrderId   string                 `protobuf:"bytes,4,opt,name=txOrderId,proto3" json:"txOrderId,omitempty"`
	TxAmount    string                 `protobuf:"bytes,5,opt,name=txAmount,proto3" json:"txAmount,omitempty"`
	TxFeeAmount string                 `protobuf:"bytes,6,opt,name=txFeeAmount,proto3" json:"txFeeAmount,omitempty"`
	TxCurrency  string                 `protobuf:"bytes,7,opt,name=txCurrency,proto3" json:"txCurrency,omitempty"`
	TxTime      int64                  `protobuf:"varint,8,opt,name=txTime,proto3" json:"txTime,omitempty"`
	TxDetail    string                 `protobuf:"bytes,9,opt,name=txDetail,proto3" json:"txDetail,omitempty"`
}

func (x *CreatePayChannelOrderRequest) Reset() {
	*x = CreatePayChannelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelOrderRequest) ProtoMessage() {}

func (x *CreatePayChannelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelOrderRequest.ProtoReflect.Descriptor instead.
func (*CreatePayChannelOrderRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{36}
}

func (x *CreatePayChannelOrderRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetBizType() PayChannelOrderBizType {
	if x != nil {
		return x.BizType
	}
	return PayChannelOrderBizType_PayChannelOrderBizTypeDeposit
}

func (x *CreatePayChannelOrderRequest) GetTxOrderId() string {
	if x != nil {
		return x.TxOrderId
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetTxAmount() string {
	if x != nil {
		return x.TxAmount
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetTxFeeAmount() string {
	if x != nil {
		return x.TxFeeAmount
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetTxCurrency() string {
	if x != nil {
		return x.TxCurrency
	}
	return ""
}

func (x *CreatePayChannelOrderRequest) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *CreatePayChannelOrderRequest) GetTxDetail() string {
	if x != nil {
		return x.TxDetail
	}
	return ""
}

type CreatePayChannelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreatePayChannelOrderResponse) Reset() {
	*x = CreatePayChannelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayChannelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayChannelOrderResponse) ProtoMessage() {}

func (x *CreatePayChannelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayChannelOrderResponse.ProtoReflect.Descriptor instead.
func (*CreatePayChannelOrderResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{37}
}

func (x *CreatePayChannelOrderResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetPayChannelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	OrderId   string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *GetPayChannelOrderRequest) Reset() {
	*x = GetPayChannelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelOrderRequest) ProtoMessage() {}

func (x *GetPayChannelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelOrderRequest.ProtoReflect.Descriptor instead.
func (*GetPayChannelOrderRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{38}
}

func (x *GetPayChannelOrderRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetPayChannelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetPayChannelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult      *BaseResult      `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	PayChannelOrder *PayChannelOrder `protobuf:"bytes,2,opt,name=payChannelOrder,proto3" json:"payChannelOrder,omitempty"`
}

func (x *GetPayChannelOrderResponse) Reset() {
	*x = GetPayChannelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayChannelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayChannelOrderResponse) ProtoMessage() {}

func (x *GetPayChannelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayChannelOrderResponse.ProtoReflect.Descriptor instead.
func (*GetPayChannelOrderResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{39}
}

func (x *GetPayChannelOrderResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayChannelOrderResponse) GetPayChannelOrder() *PayChannelOrder {
	if x != nil {
		return x.PayChannelOrder
	}
	return nil
}

type UpdatePayChannelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId                  string                `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	OrderId                    string                `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Status                     PayChannelOrderStatus `protobuf:"varint,3,opt,name=status,proto3,enum=paygateway.PayChannelOrderStatus" json:"status,omitempty"`
	ThirdPartySettlementAmount string                `protobuf:"bytes,4,opt,name=thirdPartySettlementAmount,proto3" json:"thirdPartySettlementAmount,omitempty"`
	ThirdPartyFeeAmount        string                `protobuf:"bytes,5,opt,name=thirdPartyFeeAmount,proto3" json:"thirdPartyFeeAmount,omitempty"`
	ThirdPartyOrderId          string                `protobuf:"bytes,6,opt,name=thirdPartyOrderId,proto3" json:"thirdPartyOrderId,omitempty"`
	PayResponse                string                `protobuf:"bytes,7,opt,name=payResponse,proto3" json:"payResponse,omitempty"`
	CallbackTime               string                `protobuf:"bytes,8,opt,name=callbackTime,proto3" json:"callbackTime,omitempty"`
	CallbackResponse           string                `protobuf:"bytes,9,opt,name=callbackResponse,proto3" json:"callbackResponse,omitempty"`
}

func (x *UpdatePayChannelOrderRequest) Reset() {
	*x = UpdatePayChannelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelOrderRequest) ProtoMessage() {}

func (x *UpdatePayChannelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelOrderRequest) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{40}
}

func (x *UpdatePayChannelOrderRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetStatus() PayChannelOrderStatus {
	if x != nil {
		return x.Status
	}
	return PayChannelOrderStatus_PayChannelOrderStatusInit
}

func (x *UpdatePayChannelOrderRequest) GetThirdPartySettlementAmount() string {
	if x != nil {
		return x.ThirdPartySettlementAmount
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetThirdPartyFeeAmount() string {
	if x != nil {
		return x.ThirdPartyFeeAmount
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetThirdPartyOrderId() string {
	if x != nil {
		return x.ThirdPartyOrderId
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetPayResponse() string {
	if x != nil {
		return x.PayResponse
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetCallbackTime() string {
	if x != nil {
		return x.CallbackTime
	}
	return ""
}

func (x *UpdatePayChannelOrderRequest) GetCallbackResponse() string {
	if x != nil {
		return x.CallbackResponse
	}
	return ""
}

type UpdatePayChannelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *UpdatePayChannelOrderResponse) Reset() {
	*x = UpdatePayChannelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paygateway_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayChannelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayChannelOrderResponse) ProtoMessage() {}

func (x *UpdatePayChannelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paygateway_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayChannelOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayChannelOrderResponse) Descriptor() ([]byte, []int) {
	return file_paygateway_proto_rawDescGZIP(), []int{41}
}

func (x *UpdatePayChannelOrderResponse) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

var File_paygateway_proto protoreflect.FileDescriptor

var file_paygateway_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x4c,
	0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x10,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x69, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x70, 0x69, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc9, 0x06, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x66, 0x65, 0x65, 0x46, 0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x65, 0x65,
	0x46, 0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x66, 0x65, 0x65, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x65, 0x46,
	0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x70,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19,
	0x70, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x87,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0a, 0x70, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xdd, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa7, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x22, 0x39, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a, 0x1b, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x56, 0x0a, 0x1c, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x69, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x70, 0x69, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x58, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x70, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x58, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x0f, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x22, 0x57, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x39, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x10,
	0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x10, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65,
	0x22, 0x55, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x72, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x46, 0x65, 0x65, 0x22, 0x5a, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65,
	0x22, 0x55, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6, 0x06, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x78, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x78, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x1a,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0xca, 0x02, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x7a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x78, 0x46, 0x65, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x78,
	0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x78, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x57, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61,
	0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xa3, 0x03, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a,
	0x1a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x46, 0x65, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x57, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x66, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02,
	0x2a, 0x50, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x69,
	0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x10, 0x01, 0x2a, 0x52, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x10, 0x01, 0x2a, 0x70, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x59, 0x65, 0x61, 0x72, 0x10, 0x02, 0x2a, 0x7a, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00,
	0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x01, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x02, 0x2a, 0x69, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x65, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x46, 0x65, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x69, 0x65, 0x72, 0x64, 0x10, 0x02, 0x2a,
	0xe4, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x62, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x10, 0x03,
	0x12, 0x1b, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x10, 0x04, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x50, 0x61, 0x79, 0x70, 0x61, 0x6c, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x54,
	0x52, 0x43, 0x33, 0x32, 0x10, 0x06, 0x2a, 0x81, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x7a, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x15, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x69, 0x74,
	0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0x02, 0x32, 0xcb, 0x0e, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x23, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x2e, 0x70, 0x61,
	0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x14, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x49, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x26, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x61,
	0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x70, 0x61,
	0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x70,
	0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12,
	0x28, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x79, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x61,
	0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65,
	0x12, 0x23, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46,
	0x65, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x79,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x61, 0x79, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paygateway_proto_rawDescOnce sync.Once
	file_paygateway_proto_rawDescData = file_paygateway_proto_rawDesc
)

func file_paygateway_proto_rawDescGZIP() []byte {
	file_paygateway_proto_rawDescOnce.Do(func() {
		file_paygateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_paygateway_proto_rawDescData)
	})
	return file_paygateway_proto_rawDescData
}

var file_paygateway_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_paygateway_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_paygateway_proto_goTypes = []any{
	(PayChannelStatus)(0),                  // 0: paygateway.PayChannelStatus
	(PayChannelBizType)(0),                 // 1: paygateway.PayChannelBizType
	(PayChannelQuotaType)(0),               // 2: paygateway.PayChannelQuotaType
	(PayChannelQuotaCycle)(0),              // 3: paygateway.PayChannelQuotaCycle
	(PayChannelQuotaStatus)(0),             // 4: paygateway.PayChannelQuotaStatus
	(PayChannelFeeMode)(0),                 // 5: paygateway.PayChannelFeeMode
	(PayChannelPayMode)(0),                 // 6: paygateway.PayChannelPayMode
	(PayChannelOrderBizType)(0),            // 7: paygateway.PayChannelOrderBizType
	(PayChannelOrderStatus)(0),             // 8: paygateway.PayChannelOrderStatus
	(*BaseResult)(nil),                     // 9: paygateway.BaseResult
	(*Pagination)(nil),                     // 10: paygateway.Pagination
	(*PayChannel)(nil),                     // 11: paygateway.PayChannel
	(*PayChannelParams)(nil),               // 12: paygateway.PayChannelParams
	(*PayChannelQuota)(nil),                // 13: paygateway.PayChannelQuota
	(*GetPayChannelRequest)(nil),           // 14: paygateway.GetPayChannelRequest
	(*GetPayChannelResponse)(nil),          // 15: paygateway.GetPayChannelResponse
	(*CreatePayChannelRequest)(nil),        // 16: paygateway.CreatePayChannelRequest
	(*CreatePayChannelResponse)(nil),       // 17: paygateway.CreatePayChannelResponse
	(*UpdatePayChannelRequest)(nil),        // 18: paygateway.UpdatePayChannelRequest
	(*UpdatePayChannelResponse)(nil),       // 19: paygateway.UpdatePayChannelResponse
	(*ListPayChannelRequest)(nil),          // 20: paygateway.ListPayChannelRequest
	(*ListPayChannelResponse)(nil),         // 21: paygateway.ListPayChannelResponse
	(*ActivatePayChannelRequest)(nil),      // 22: paygateway.ActivatePayChannelRequest
	(*ActivatePayChannelResponse)(nil),     // 23: paygateway.ActivatePayChannelResponse
	(*InactivatePayChannelRequest)(nil),    // 24: paygateway.InactivatePayChannelRequest
	(*InactivatePayChannelResponse)(nil),   // 25: paygateway.InactivatePayChannelResponse
	(*CreatePayChannelParamsRequest)(nil),  // 26: paygateway.CreatePayChannelParamsRequest
	(*CreatePayChannelParamsResponse)(nil), // 27: paygateway.CreatePayChannelParamsResponse
	(*GetPayChannelParamsRequest)(nil),     // 28: paygateway.GetPayChannelParamsRequest
	(*GetPayChannelParamsResponse)(nil),    // 29: paygateway.GetPayChannelParamsResponse
	(*UpdatePayChannelParamsRequest)(nil),  // 30: paygateway.UpdatePayChannelParamsRequest
	(*UpdatePayChannelParamsResponse)(nil), // 31: paygateway.UpdatePayChannelParamsResponse
	(*CreatePayChannelQuotaRequest)(nil),   // 32: paygateway.CreatePayChannelQuotaRequest
	(*CreatePayChannelQuotaResponse)(nil),  // 33: paygateway.CreatePayChannelQuotaResponse
	(*GetPayChannelQuotaRequest)(nil),      // 34: paygateway.GetPayChannelQuotaRequest
	(*GetPayChannelQuotaResponse)(nil),     // 35: paygateway.GetPayChannelQuotaResponse
	(*UpdatePayChannelQuotaRequest)(nil),   // 36: paygateway.UpdatePayChannelQuotaRequest
	(*UpdatePayChannelQuotaResponse)(nil),  // 37: paygateway.UpdatePayChannelQuotaResponse
	(*CreatePayChannelFeeRequest)(nil),     // 38: paygateway.CreatePayChannelFeeRequest
	(*CreatePayChannelFeeResponse)(nil),    // 39: paygateway.CreatePayChannelFeeResponse
	(*GetPayChannelFeeRequest)(nil),        // 40: paygateway.GetPayChannelFeeRequest
	(*GetPayChannelFeeResponse)(nil),       // 41: paygateway.GetPayChannelFeeResponse
	(*UpdatePayChannelFeeRequest)(nil),     // 42: paygateway.UpdatePayChannelFeeRequest
	(*UpdatePayChannelFeeResponse)(nil),    // 43: paygateway.UpdatePayChannelFeeResponse
	(*PayChannelOrder)(nil),                // 44: paygateway.PayChannelOrder
	(*CreatePayChannelOrderRequest)(nil),   // 45: paygateway.CreatePayChannelOrderRequest
	(*CreatePayChannelOrderResponse)(nil),  // 46: paygateway.CreatePayChannelOrderResponse
	(*GetPayChannelOrderRequest)(nil),      // 47: paygateway.GetPayChannelOrderRequest
	(*GetPayChannelOrderResponse)(nil),     // 48: paygateway.GetPayChannelOrderResponse
	(*UpdatePayChannelOrderRequest)(nil),   // 49: paygateway.UpdatePayChannelOrderRequest
	(*UpdatePayChannelOrderResponse)(nil),  // 50: paygateway.UpdatePayChannelOrderResponse
}
var file_paygateway_proto_depIdxs = []int32{
	0,  // 0: paygateway.PayChannel.status:type_name -> paygateway.PayChannelStatus
	1,  // 1: paygateway.PayChannelQuota.bizType:type_name -> paygateway.PayChannelBizType
	6,  // 2: paygateway.PayChannelQuota.payMode:type_name -> paygateway.PayChannelPayMode
	2,  // 3: paygateway.PayChannelQuota.quotaType:type_name -> paygateway.PayChannelQuotaType
	3,  // 4: paygateway.PayChannelQuota.quotaCycle:type_name -> paygateway.PayChannelQuotaCycle
	4,  // 5: paygateway.PayChannelQuota.status:type_name -> paygateway.PayChannelQuotaStatus
	9,  // 6: paygateway.GetPayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	11, // 7: paygateway.GetPayChannelResponse.payChannel:type_name -> paygateway.PayChannel
	9,  // 8: paygateway.CreatePayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 9: paygateway.UpdatePayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 10: paygateway.ListPayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	11, // 11: paygateway.ListPayChannelResponse.payChannels:type_name -> paygateway.PayChannel
	9,  // 12: paygateway.ActivatePayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 13: paygateway.InactivatePayChannelResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 14: paygateway.CreatePayChannelParamsResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 15: paygateway.GetPayChannelParamsResponse.baseResult:type_name -> paygateway.BaseResult
	12, // 16: paygateway.GetPayChannelParamsResponse.payChannelParams:type_name -> paygateway.PayChannelParams
	9,  // 17: paygateway.UpdatePayChannelParamsResponse.baseResult:type_name -> paygateway.BaseResult
	13, // 18: paygateway.CreatePayChannelQuotaRequest.payChannelQuota:type_name -> paygateway.PayChannelQuota
	9,  // 19: paygateway.CreatePayChannelQuotaResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 20: paygateway.GetPayChannelQuotaResponse.baseResult:type_name -> paygateway.BaseResult
	13, // 21: paygateway.GetPayChannelQuotaResponse.payChannelQuotas:type_name -> paygateway.PayChannelQuota
	13, // 22: paygateway.UpdatePayChannelQuotaRequest.payChannelQuota:type_name -> paygateway.PayChannelQuota
	9,  // 23: paygateway.UpdatePayChannelQuotaResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 24: paygateway.CreatePayChannelFeeResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 25: paygateway.GetPayChannelFeeResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 26: paygateway.UpdatePayChannelFeeResponse.baseResult:type_name -> paygateway.BaseResult
	7,  // 27: paygateway.PayChannelOrder.bizType:type_name -> paygateway.PayChannelOrderBizType
	8,  // 28: paygateway.PayChannelOrder.status:type_name -> paygateway.PayChannelOrderStatus
	7,  // 29: paygateway.CreatePayChannelOrderRequest.bizType:type_name -> paygateway.PayChannelOrderBizType
	9,  // 30: paygateway.CreatePayChannelOrderResponse.baseResult:type_name -> paygateway.BaseResult
	9,  // 31: paygateway.GetPayChannelOrderResponse.baseResult:type_name -> paygateway.BaseResult
	44, // 32: paygateway.GetPayChannelOrderResponse.payChannelOrder:type_name -> paygateway.PayChannelOrder
	8,  // 33: paygateway.UpdatePayChannelOrderRequest.status:type_name -> paygateway.PayChannelOrderStatus
	9,  // 34: paygateway.UpdatePayChannelOrderResponse.baseResult:type_name -> paygateway.BaseResult
	16, // 35: paygateway.PayGatewayService.CreatePayChannel:input_type -> paygateway.CreatePayChannelRequest
	14, // 36: paygateway.PayGatewayService.GetPayChannel:input_type -> paygateway.GetPayChannelRequest
	18, // 37: paygateway.PayGatewayService.UpdatePayChannel:input_type -> paygateway.UpdatePayChannelRequest
	20, // 38: paygateway.PayGatewayService.ListPayChannel:input_type -> paygateway.ListPayChannelRequest
	22, // 39: paygateway.PayGatewayService.ActivatePayChannel:input_type -> paygateway.ActivatePayChannelRequest
	24, // 40: paygateway.PayGatewayService.InactivatePayChannel:input_type -> paygateway.InactivatePayChannelRequest
	26, // 41: paygateway.PayGatewayService.CreatePayChannelParams:input_type -> paygateway.CreatePayChannelParamsRequest
	28, // 42: paygateway.PayGatewayService.GetPayChannelParams:input_type -> paygateway.GetPayChannelParamsRequest
	30, // 43: paygateway.PayGatewayService.UpdatePayChannelParams:input_type -> paygateway.UpdatePayChannelParamsRequest
	45, // 44: paygateway.PayGatewayService.CreatePayChannelOrder:input_type -> paygateway.CreatePayChannelOrderRequest
	47, // 45: paygateway.PayGatewayService.GetPayChannelOrder:input_type -> paygateway.GetPayChannelOrderRequest
	49, // 46: paygateway.PayGatewayService.UpdatePayChannelOrder:input_type -> paygateway.UpdatePayChannelOrderRequest
	32, // 47: paygateway.PayGatewayService.CreatePayChannelQuota:input_type -> paygateway.CreatePayChannelQuotaRequest
	34, // 48: paygateway.PayGatewayService.GetPayChannelQuota:input_type -> paygateway.GetPayChannelQuotaRequest
	36, // 49: paygateway.PayGatewayService.UpdatePayChannelQuota:input_type -> paygateway.UpdatePayChannelQuotaRequest
	38, // 50: paygateway.PayGatewayService.CreatePayChannelFee:input_type -> paygateway.CreatePayChannelFeeRequest
	40, // 51: paygateway.PayGatewayService.GetPayChannelFee:input_type -> paygateway.GetPayChannelFeeRequest
	42, // 52: paygateway.PayGatewayService.UpdatePayChannelFee:input_type -> paygateway.UpdatePayChannelFeeRequest
	17, // 53: paygateway.PayGatewayService.CreatePayChannel:output_type -> paygateway.CreatePayChannelResponse
	15, // 54: paygateway.PayGatewayService.GetPayChannel:output_type -> paygateway.GetPayChannelResponse
	19, // 55: paygateway.PayGatewayService.UpdatePayChannel:output_type -> paygateway.UpdatePayChannelResponse
	21, // 56: paygateway.PayGatewayService.ListPayChannel:output_type -> paygateway.ListPayChannelResponse
	23, // 57: paygateway.PayGatewayService.ActivatePayChannel:output_type -> paygateway.ActivatePayChannelResponse
	25, // 58: paygateway.PayGatewayService.InactivatePayChannel:output_type -> paygateway.InactivatePayChannelResponse
	27, // 59: paygateway.PayGatewayService.CreatePayChannelParams:output_type -> paygateway.CreatePayChannelParamsResponse
	29, // 60: paygateway.PayGatewayService.GetPayChannelParams:output_type -> paygateway.GetPayChannelParamsResponse
	31, // 61: paygateway.PayGatewayService.UpdatePayChannelParams:output_type -> paygateway.UpdatePayChannelParamsResponse
	46, // 62: paygateway.PayGatewayService.CreatePayChannelOrder:output_type -> paygateway.CreatePayChannelOrderResponse
	48, // 63: paygateway.PayGatewayService.GetPayChannelOrder:output_type -> paygateway.GetPayChannelOrderResponse
	50, // 64: paygateway.PayGatewayService.UpdatePayChannelOrder:output_type -> paygateway.UpdatePayChannelOrderResponse
	33, // 65: paygateway.PayGatewayService.CreatePayChannelQuota:output_type -> paygateway.CreatePayChannelQuotaResponse
	35, // 66: paygateway.PayGatewayService.GetPayChannelQuota:output_type -> paygateway.GetPayChannelQuotaResponse
	37, // 67: paygateway.PayGatewayService.UpdatePayChannelQuota:output_type -> paygateway.UpdatePayChannelQuotaResponse
	39, // 68: paygateway.PayGatewayService.CreatePayChannelFee:output_type -> paygateway.CreatePayChannelFeeResponse
	41, // 69: paygateway.PayGatewayService.GetPayChannelFee:output_type -> paygateway.GetPayChannelFeeResponse
	43, // 70: paygateway.PayGatewayService.UpdatePayChannelFee:output_type -> paygateway.UpdatePayChannelFeeResponse
	53, // [53:71] is the sub-list for method output_type
	35, // [35:53] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_paygateway_proto_init() }
func file_paygateway_proto_init() {
	if File_paygateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paygateway_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PayChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PayChannelParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PayChannelQuota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListPayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListPayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ActivatePayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ActivatePayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*InactivatePayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*InactivatePayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*PayChannelOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePayChannelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetPayChannelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paygateway_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePayChannelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paygateway_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paygateway_proto_goTypes,
		DependencyIndexes: file_paygateway_proto_depIdxs,
		EnumInfos:         file_paygateway_proto_enumTypes,
		MessageInfos:      file_paygateway_proto_msgTypes,
	}.Build()
	File_paygateway_proto = out.File
	file_paygateway_proto_rawDesc = nil
	file_paygateway_proto_goTypes = nil
	file_paygateway_proto_depIdxs = nil
}
