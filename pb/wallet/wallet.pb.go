// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WalletType int32

const (
	WalletType_WALLET_TYPE_UNKNOWN WalletType = 0 // 未知
	WalletType_WALLET_TYPE_SAVING  WalletType = 1 // 储蓄钱包
	WalletType_WALLET_TYPE_CREDIT  WalletType = 2 // 信用钱包
	WalletType_WALLET_TYPE_COLLECT WalletType = 3 // 归集钱包
	WalletType_WALLET_TYPE_SERVICE WalletType = 4 // 服务钱包
)

// Enum value maps for WalletType.
var (
	WalletType_name = map[int32]string{
		0: "WALLET_TYPE_UNKNOWN",
		1: "WALLET_TYPE_SAVING",
		2: "WALLET_TYPE_CREDIT",
		3: "WALLET_TYPE_COLLECT",
		4: "WALLET_TYPE_SERVICE",
	}
	WalletType_value = map[string]int32{
		"WALLET_TYPE_UNKNOWN": 0,
		"WALLET_TYPE_SAVING":  1,
		"WALLET_TYPE_CREDIT":  2,
		"WALLET_TYPE_COLLECT": 3,
		"WALLET_TYPE_SERVICE": 4,
	}
)

func (x WalletType) Enum() *WalletType {
	p := new(WalletType)
	*p = x
	return p
}

func (x WalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[0].Descriptor()
}

func (WalletType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[0]
}

func (x WalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletType.Descriptor instead.
func (WalletType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

type WalletStatus int32

const (
	WalletStatus_WALLET_STATUS_INIT      WalletStatus = 0 // 初始化
	WalletStatus_WALLET_STATUS_ACTIVE    WalletStatus = 1 // 正常
	WalletStatus_WALLET_STATUS_EXCEPTION WalletStatus = 2 // 异常
	WalletStatus_WALLET_STATUS_CLOSED    WalletStatus = 3 // 关闭
)

// Enum value maps for WalletStatus.
var (
	WalletStatus_name = map[int32]string{
		0: "WALLET_STATUS_INIT",
		1: "WALLET_STATUS_ACTIVE",
		2: "WALLET_STATUS_EXCEPTION",
		3: "WALLET_STATUS_CLOSED",
	}
	WalletStatus_value = map[string]int32{
		"WALLET_STATUS_INIT":      0,
		"WALLET_STATUS_ACTIVE":    1,
		"WALLET_STATUS_EXCEPTION": 2,
		"WALLET_STATUS_CLOSED":    3,
	}
)

func (x WalletStatus) Enum() *WalletStatus {
	p := new(WalletStatus)
	*p = x
	return p
}

func (x WalletStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[1].Descriptor()
}

func (WalletStatus) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[1]
}

func (x WalletStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletStatus.Descriptor instead.
func (WalletStatus) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

type WalletOwnerType int32

const (
	WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN  WalletOwnerType = 0 // 未知
	WalletOwnerType_WALLET_OWNER_TYPE_PLATFORM WalletOwnerType = 1 // 平台
	WalletOwnerType_WALLET_OWNER_TYPE_MERCHANT WalletOwnerType = 2 // 商家
	WalletOwnerType_WALLET_OWNER_TYPE_AGENT    WalletOwnerType = 3 // 代理
	WalletOwnerType_WALLET_OWNER_TYPE_MEMBER   WalletOwnerType = 4 // 会员
)

// Enum value maps for WalletOwnerType.
var (
	WalletOwnerType_name = map[int32]string{
		0: "WALLET_OWNER_TYPE_UNKNOWN",
		1: "WALLET_OWNER_TYPE_PLATFORM",
		2: "WALLET_OWNER_TYPE_MERCHANT",
		3: "WALLET_OWNER_TYPE_AGENT",
		4: "WALLET_OWNER_TYPE_MEMBER",
	}
	WalletOwnerType_value = map[string]int32{
		"WALLET_OWNER_TYPE_UNKNOWN":  0,
		"WALLET_OWNER_TYPE_PLATFORM": 1,
		"WALLET_OWNER_TYPE_MERCHANT": 2,
		"WALLET_OWNER_TYPE_AGENT":    3,
		"WALLET_OWNER_TYPE_MEMBER":   4,
	}
)

func (x WalletOwnerType) Enum() *WalletOwnerType {
	p := new(WalletOwnerType)
	*p = x
	return p
}

func (x WalletOwnerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletOwnerType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[2].Descriptor()
}

func (WalletOwnerType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[2]
}

func (x WalletOwnerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletOwnerType.Descriptor instead.
func (WalletOwnerType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

type WalletTxType int32

const (
	WalletTxType_WALLET_TX_TYPE_UNKNOWN        WalletTxType = 0  // 未知
	WalletTxType_WALLET_TX_TYPE_DEPOSIT        WalletTxType = 1  // 充值
	WalletTxType_WALLET_TX_TYPE_WITHDRAW       WalletTxType = 2  // 提现
	WalletTxType_WALLET_TX_TYPE_TRANSFER       WalletTxType = 3  // 转账
	WalletTxType_WALLET_TX_TYPE_FROZEN         WalletTxType = 4  // 冻结
	WalletTxType_WALLET_TX_TYPE_UNFROZEN       WalletTxType = 5  // 解冻
	WalletTxType_WALLET_TX_TYPE_REFUND         WalletTxType = 6  // 退款
	WalletTxType_WALLET_TX_TYPE_ADJUST         WalletTxType = 7  // 调账
	WalletTxType_WALLET_TX_TYPE_EXPENSE        WalletTxType = 8  // 消费支出(业务主支付，订单支付)
	WalletTxType_WALLET_TX_TYPE_INCOME         WalletTxType = 9  // 收入(业务主收入)
	WalletTxType_WALLET_TX_TYPE_INCOME_FEE     WalletTxType = 10 // 手续费收入
	WalletTxType_WALLET_TX_TYPE_EXPENSE_FEE    WalletTxType = 11 // 手续费支出
	WalletTxType_WALLET_TX_TYPE_INCOME_REWARD  WalletTxType = 12 // 奖励收入
	WalletTxType_WALLET_TX_TYPE_EXPENSE_REWARD WalletTxType = 13 // 奖励支出
)

// Enum value maps for WalletTxType.
var (
	WalletTxType_name = map[int32]string{
		0:  "WALLET_TX_TYPE_UNKNOWN",
		1:  "WALLET_TX_TYPE_DEPOSIT",
		2:  "WALLET_TX_TYPE_WITHDRAW",
		3:  "WALLET_TX_TYPE_TRANSFER",
		4:  "WALLET_TX_TYPE_FROZEN",
		5:  "WALLET_TX_TYPE_UNFROZEN",
		6:  "WALLET_TX_TYPE_REFUND",
		7:  "WALLET_TX_TYPE_ADJUST",
		8:  "WALLET_TX_TYPE_EXPENSE",
		9:  "WALLET_TX_TYPE_INCOME",
		10: "WALLET_TX_TYPE_INCOME_FEE",
		11: "WALLET_TX_TYPE_EXPENSE_FEE",
		12: "WALLET_TX_TYPE_INCOME_REWARD",
		13: "WALLET_TX_TYPE_EXPENSE_REWARD",
	}
	WalletTxType_value = map[string]int32{
		"WALLET_TX_TYPE_UNKNOWN":        0,
		"WALLET_TX_TYPE_DEPOSIT":        1,
		"WALLET_TX_TYPE_WITHDRAW":       2,
		"WALLET_TX_TYPE_TRANSFER":       3,
		"WALLET_TX_TYPE_FROZEN":         4,
		"WALLET_TX_TYPE_UNFROZEN":       5,
		"WALLET_TX_TYPE_REFUND":         6,
		"WALLET_TX_TYPE_ADJUST":         7,
		"WALLET_TX_TYPE_EXPENSE":        8,
		"WALLET_TX_TYPE_INCOME":         9,
		"WALLET_TX_TYPE_INCOME_FEE":     10,
		"WALLET_TX_TYPE_EXPENSE_FEE":    11,
		"WALLET_TX_TYPE_INCOME_REWARD":  12,
		"WALLET_TX_TYPE_EXPENSE_REWARD": 13,
	}
)

func (x WalletTxType) Enum() *WalletTxType {
	p := new(WalletTxType)
	*p = x
	return p
}

func (x WalletTxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletTxType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[3].Descriptor()
}

func (WalletTxType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[3]
}

func (x WalletTxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletTxType.Descriptor instead.
func (WalletTxType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{3}
}

type PayeeType int32

const (
	PayeeType_PAYEE_TYPE_BANK_CARD PayeeType = 0 // 银行卡
	PayeeType_PAYEE_TYPE_USDT      PayeeType = 1 // USDT
)

// Enum value maps for PayeeType.
var (
	PayeeType_name = map[int32]string{
		0: "PAYEE_TYPE_BANK_CARD",
		1: "PAYEE_TYPE_USDT",
	}
	PayeeType_value = map[string]int32{
		"PAYEE_TYPE_BANK_CARD": 0,
		"PAYEE_TYPE_USDT":      1,
	}
)

func (x PayeeType) Enum() *PayeeType {
	p := new(PayeeType)
	*p = x
	return p
}

func (x PayeeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayeeType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[4].Descriptor()
}

func (PayeeType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[4]
}

func (x PayeeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayeeType.Descriptor instead.
func (PayeeType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{4}
}

type BaseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResult) Reset() {
	*x = BaseResult{}
	mi := &file_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResult) ProtoMessage() {}

func (x *BaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResult.ProtoReflect.Descriptor instead.
func (*BaseResult) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BaseResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// 分页请求
type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         // 当前页
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 每页大小
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`       // 总数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateWalletReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,3,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletReq) Reset() {
	*x = CreateWalletReq{}
	mi := &file_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletReq) ProtoMessage() {}

func (x *CreateWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletReq.ProtoReflect.Descriptor instead.
func (*CreateWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWalletReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateWalletReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *CreateWalletReq) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *CreateWalletReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type CreateWalletResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	WalletId      string                 `protobuf:"bytes,2,opt,name=walletId,proto3" json:"walletId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResp) Reset() {
	*x = CreateWalletResp{}
	mi := &file_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResp) ProtoMessage() {}

func (x *CreateWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResp.ProtoReflect.Descriptor instead.
func (*CreateWalletResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *CreateWalletResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreateWalletResp) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type Wallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,3,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,4,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Balance       string                 `protobuf:"bytes,6,opt,name=balance,proto3" json:"balance,omitempty"`
	FrozenBalance string                 `protobuf:"bytes,7,opt,name=frozenBalance,proto3" json:"frozenBalance,omitempty"`
	Status        WalletStatus           `protobuf:"varint,8,opt,name=status,proto3,enum=wallet.WalletStatus" json:"status,omitempty"`
	Version       int64                  `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	mi := &file_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *Wallet) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *Wallet) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Wallet) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *Wallet) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Wallet) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Wallet) GetFrozenBalance() string {
	if x != nil {
		return x.FrozenBalance
	}
	return ""
}

func (x *Wallet) GetStatus() WalletStatus {
	if x != nil {
		return x.Status
	}
	return WalletStatus_WALLET_STATUS_INIT
}

func (x *Wallet) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Wallet) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Wallet) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Payee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PayeeId       string                 `protobuf:"bytes,1,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,3,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	PayeeType     PayeeType              `protobuf:"varint,4,opt,name=payeeType,proto3,enum=wallet.PayeeType" json:"payeeType,omitempty"`
	PayeeName     string                 `protobuf:"bytes,5,opt,name=payeeName,proto3" json:"payeeName,omitempty"`
	PayeeNo       string                 `protobuf:"bytes,6,opt,name=payeeNo,proto3" json:"payeeNo,omitempty"`
	PayeeOrgName  string                 `protobuf:"bytes,7,opt,name=payeeOrgName,proto3" json:"payeeOrgName,omitempty"`
	PayeeOrgNo    string                 `protobuf:"bytes,8,opt,name=payeeOrgNo,proto3" json:"payeeOrgNo,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payee) Reset() {
	*x = Payee{}
	mi := &file_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payee) ProtoMessage() {}

func (x *Payee) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payee.ProtoReflect.Descriptor instead.
func (*Payee) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *Payee) GetPayeeId() string {
	if x != nil {
		return x.PayeeId
	}
	return ""
}

func (x *Payee) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Payee) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *Payee) GetPayeeType() PayeeType {
	if x != nil {
		return x.PayeeType
	}
	return PayeeType_PAYEE_TYPE_BANK_CARD
}

func (x *Payee) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *Payee) GetPayeeNo() string {
	if x != nil {
		return x.PayeeNo
	}
	return ""
}

func (x *Payee) GetPayeeOrgName() string {
	if x != nil {
		return x.PayeeOrgName
	}
	return ""
}

func (x *Payee) GetPayeeOrgNo() string {
	if x != nil {
		return x.PayeeOrgNo
	}
	return ""
}

func (x *Payee) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Payee) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetWalletReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,3,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	WalletId      string                 `protobuf:"bytes,5,opt,name=walletId,proto3" json:"walletId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletReq) Reset() {
	*x = GetWalletReq{}
	mi := &file_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletReq) ProtoMessage() {}

func (x *GetWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletReq.ProtoReflect.Descriptor instead.
func (*GetWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *GetWalletReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetWalletReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *GetWalletReq) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *GetWalletReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetWalletReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type GetWalletResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Wallet        *Wallet                `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletResp) Reset() {
	*x = GetWalletResp{}
	mi := &file_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletResp) ProtoMessage() {}

func (x *GetWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletResp.ProtoReflect.Descriptor instead.
func (*GetWalletResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *GetWalletResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetWalletResp) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type GetWalletListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,3,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletListReq) Reset() {
	*x = GetWalletListReq{}
	mi := &file_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletListReq) ProtoMessage() {}

func (x *GetWalletListReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletListReq.ProtoReflect.Descriptor instead.
func (*GetWalletListReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GetWalletListReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetWalletListReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *GetWalletListReq) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *GetWalletListReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetWalletListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Wallets       []*Wallet              `protobuf:"bytes,2,rep,name=wallets,proto3" json:"wallets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletListResp) Reset() {
	*x = GetWalletListResp{}
	mi := &file_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletListResp) ProtoMessage() {}

func (x *GetWalletListResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletListResp.ProtoReflect.Descriptor instead.
func (*GetWalletListResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *GetWalletListResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetWalletListResp) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type CloseWalletReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseWalletReq) Reset() {
	*x = CloseWalletReq{}
	mi := &file_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletReq) ProtoMessage() {}

func (x *CloseWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletReq.ProtoReflect.Descriptor instead.
func (*CloseWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *CloseWalletReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type CloseWalletResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseWalletResp) Reset() {
	*x = CloseWalletResp{}
	mi := &file_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseWalletResp) ProtoMessage() {}

func (x *CloseWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseWalletResp.ProtoReflect.Descriptor instead.
func (*CloseWalletResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *CloseWalletResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type ActiveWalletReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveWalletReq) Reset() {
	*x = ActiveWalletReq{}
	mi := &file_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveWalletReq) ProtoMessage() {}

func (x *ActiveWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveWalletReq.ProtoReflect.Descriptor instead.
func (*ActiveWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *ActiveWalletReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type ActiveWalletResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveWalletResp) Reset() {
	*x = ActiveWalletResp{}
	mi := &file_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveWalletResp) ProtoMessage() {}

func (x *ActiveWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveWalletResp.ProtoReflect.Descriptor instead.
func (*ActiveWalletResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *ActiveWalletResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type WalletWithdrawReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,3,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	WalletId      string                 `protobuf:"bytes,4,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Remark        string                 `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	TxOrderId     string                 `protobuf:"bytes,8,opt,name=txOrderId,proto3" json:"txOrderId,omitempty"`
	TxTime        int64                  `protobuf:"varint,9,opt,name=txTime,proto3" json:"txTime,omitempty"`
	TxType        WalletTxType           `protobuf:"varint,10,opt,name=txType,proto3,enum=wallet.WalletTxType" json:"txType,omitempty"`
	TxDetail      string                 `protobuf:"bytes,11,opt,name=txDetail,proto3" json:"txDetail,omitempty"`
	CreateBy      string                 `protobuf:"bytes,12,opt,name=createBy,proto3" json:"createBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletWithdrawReq) Reset() {
	*x = WalletWithdrawReq{}
	mi := &file_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletWithdrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletWithdrawReq) ProtoMessage() {}

func (x *WalletWithdrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletWithdrawReq.ProtoReflect.Descriptor instead.
func (*WalletWithdrawReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *WalletWithdrawReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *WalletWithdrawReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *WalletWithdrawReq) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *WalletWithdrawReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WalletWithdrawReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WalletWithdrawReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletWithdrawReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *WalletWithdrawReq) GetTxOrderId() string {
	if x != nil {
		return x.TxOrderId
	}
	return ""
}

func (x *WalletWithdrawReq) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *WalletWithdrawReq) GetTxType() WalletTxType {
	if x != nil {
		return x.TxType
	}
	return WalletTxType_WALLET_TX_TYPE_UNKNOWN
}

func (x *WalletWithdrawReq) GetTxDetail() string {
	if x != nil {
		return x.TxDetail
	}
	return ""
}

func (x *WalletWithdrawReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type WalletWithdrawResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletWithdrawResp) Reset() {
	*x = WalletWithdrawResp{}
	mi := &file_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletWithdrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletWithdrawResp) ProtoMessage() {}

func (x *WalletWithdrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletWithdrawResp.ProtoReflect.Descriptor instead.
func (*WalletWithdrawResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *WalletWithdrawResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type WalletDepositReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletType    WalletType             `protobuf:"varint,3,opt,name=walletType,proto3,enum=wallet.WalletType" json:"walletType,omitempty"`
	WalletId      string                 `protobuf:"bytes,4,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Currency      string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Remark        string                 `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	TxOrderId     string                 `protobuf:"bytes,8,opt,name=txOrderId,proto3" json:"txOrderId,omitempty"`
	TxTime        int64                  `protobuf:"varint,9,opt,name=txTime,proto3" json:"txTime,omitempty"`
	TxType        WalletTxType           `protobuf:"varint,10,opt,name=txType,proto3,enum=wallet.WalletTxType" json:"txType,omitempty"`
	TxDetail      string                 `protobuf:"bytes,11,opt,name=txDetail,proto3" json:"txDetail,omitempty"`
	CreateBy      string                 `protobuf:"bytes,12,opt,name=createBy,proto3" json:"createBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletDepositReq) Reset() {
	*x = WalletDepositReq{}
	mi := &file_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletDepositReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletDepositReq) ProtoMessage() {}

func (x *WalletDepositReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletDepositReq.ProtoReflect.Descriptor instead.
func (*WalletDepositReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *WalletDepositReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *WalletDepositReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *WalletDepositReq) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNKNOWN
}

func (x *WalletDepositReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WalletDepositReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WalletDepositReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletDepositReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *WalletDepositReq) GetTxOrderId() string {
	if x != nil {
		return x.TxOrderId
	}
	return ""
}

func (x *WalletDepositReq) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *WalletDepositReq) GetTxType() WalletTxType {
	if x != nil {
		return x.TxType
	}
	return WalletTxType_WALLET_TX_TYPE_UNKNOWN
}

func (x *WalletDepositReq) GetTxDetail() string {
	if x != nil {
		return x.TxDetail
	}
	return ""
}

func (x *WalletDepositReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type WalletDepositResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletDepositResp) Reset() {
	*x = WalletDepositResp{}
	mi := &file_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletDepositResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletDepositResp) ProtoMessage() {}

func (x *WalletDepositResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletDepositResp.ProtoReflect.Descriptor instead.
func (*WalletDepositResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *WalletDepositResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetWalletByWalletIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	WalletId      string                 `protobuf:"bytes,3,opt,name=walletId,proto3" json:"walletId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByWalletIdReq) Reset() {
	*x = GetWalletByWalletIdReq{}
	mi := &file_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByWalletIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByWalletIdReq) ProtoMessage() {}

func (x *GetWalletByWalletIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByWalletIdReq.ProtoReflect.Descriptor instead.
func (*GetWalletByWalletIdReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *GetWalletByWalletIdReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetWalletByWalletIdReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *GetWalletByWalletIdReq) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

type GetWalletByWalletIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Wallet        *Wallet                `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletByWalletIdResp) Reset() {
	*x = GetWalletByWalletIdResp{}
	mi := &file_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletByWalletIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletByWalletIdResp) ProtoMessage() {}

func (x *GetWalletByWalletIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletByWalletIdResp.ProtoReflect.Descriptor instead.
func (*GetWalletByWalletIdResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *GetWalletByWalletIdResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetWalletByWalletIdResp) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type CreatePayeeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	PayeeType     PayeeType              `protobuf:"varint,3,opt,name=payeeType,proto3,enum=wallet.PayeeType" json:"payeeType,omitempty"`
	PayeeName     string                 `protobuf:"bytes,4,opt,name=payeeName,proto3" json:"payeeName,omitempty"`
	PayeeNo       string                 `protobuf:"bytes,5,opt,name=payeeNo,proto3" json:"payeeNo,omitempty"`
	PayeeOrgName  string                 `protobuf:"bytes,6,opt,name=payeeOrgName,proto3" json:"payeeOrgName,omitempty"`
	PayeeOrgNo    string                 `protobuf:"bytes,7,opt,name=payeeOrgNo,proto3" json:"payeeOrgNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePayeeReq) Reset() {
	*x = CreatePayeeReq{}
	mi := &file_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePayeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayeeReq) ProtoMessage() {}

func (x *CreatePayeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayeeReq.ProtoReflect.Descriptor instead.
func (*CreatePayeeReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePayeeReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreatePayeeReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *CreatePayeeReq) GetPayeeType() PayeeType {
	if x != nil {
		return x.PayeeType
	}
	return PayeeType_PAYEE_TYPE_BANK_CARD
}

func (x *CreatePayeeReq) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *CreatePayeeReq) GetPayeeNo() string {
	if x != nil {
		return x.PayeeNo
	}
	return ""
}

func (x *CreatePayeeReq) GetPayeeOrgName() string {
	if x != nil {
		return x.PayeeOrgName
	}
	return ""
}

func (x *CreatePayeeReq) GetPayeeOrgNo() string {
	if x != nil {
		return x.PayeeOrgNo
	}
	return ""
}

type CreatePayeeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePayeeResp) Reset() {
	*x = CreatePayeeResp{}
	mi := &file_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePayeeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayeeResp) ProtoMessage() {}

func (x *CreatePayeeResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayeeResp.ProtoReflect.Descriptor instead.
func (*CreatePayeeResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePayeeResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetPayeeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPayeeListReq) Reset() {
	*x = GetPayeeListReq{}
	mi := &file_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPayeeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayeeListReq) ProtoMessage() {}

func (x *GetPayeeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayeeListReq.ProtoReflect.Descriptor instead.
func (*GetPayeeListReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *GetPayeeListReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetPayeeListReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

type GetPayeeListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Payees        []*Payee               `protobuf:"bytes,2,rep,name=payees,proto3" json:"payees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPayeeListResp) Reset() {
	*x = GetPayeeListResp{}
	mi := &file_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPayeeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayeeListResp) ProtoMessage() {}

func (x *GetPayeeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayeeListResp.ProtoReflect.Descriptor instead.
func (*GetPayeeListResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *GetPayeeListResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetPayeeListResp) GetPayees() []*Payee {
	if x != nil {
		return x.Payees
	}
	return nil
}

type DeletePayeeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	OwnerType     WalletOwnerType        `protobuf:"varint,2,opt,name=ownerType,proto3,enum=wallet.WalletOwnerType" json:"ownerType,omitempty"`
	PayeeNo       string                 `protobuf:"bytes,3,opt,name=payeeNo,proto3" json:"payeeNo,omitempty"`
	PayeeType     PayeeType              `protobuf:"varint,4,opt,name=payeeType,proto3,enum=wallet.PayeeType" json:"payeeType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePayeeReq) Reset() {
	*x = DeletePayeeReq{}
	mi := &file_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePayeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePayeeReq) ProtoMessage() {}

func (x *DeletePayeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePayeeReq.ProtoReflect.Descriptor instead.
func (*DeletePayeeReq) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *DeletePayeeReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *DeletePayeeReq) GetOwnerType() WalletOwnerType {
	if x != nil {
		return x.OwnerType
	}
	return WalletOwnerType_WALLET_OWNER_TYPE_UNKNOWN
}

func (x *DeletePayeeReq) GetPayeeNo() string {
	if x != nil {
		return x.PayeeNo
	}
	return ""
}

func (x *DeletePayeeReq) GetPayeeType() PayeeType {
	if x != nil {
		return x.PayeeType
	}
	return PayeeType_PAYEE_TYPE_BANK_CARD
}

type DeletePayeeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResult    *BaseResult            `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePayeeResp) Reset() {
	*x = DeletePayeeResp{}
	mi := &file_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePayeeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePayeeResp) ProtoMessage() {}

func (x *DeletePayeeResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePayeeResp.ProtoReflect.Descriptor instead.
func (*DeletePayeeResp) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *DeletePayeeResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

var File_wallet_proto protoreflect.FileDescriptor

const file_wallet_proto_rawDesc = "" +
	"\n" +
	"\fwallet.proto\x12\x06wallet\"L\n" +
	"\n" +
	"BaseResult\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"R\n" +
	"\n" +
	"Pagination\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x05R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\"\xb2\x01\n" +
	"\x0fCreateWalletReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x03 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"b\n" +
	"\x10CreateWalletResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\x12\x1a\n" +
	"\bwalletId\x18\x02 \x01(\tR\bwalletId\"\x89\x03\n" +
	"\x06Wallet\x12\x1a\n" +
	"\bwalletId\x18\x01 \x01(\tR\bwalletId\x12\x18\n" +
	"\aownerId\x18\x02 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x03 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x04 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x18\n" +
	"\abalance\x18\x06 \x01(\tR\abalance\x12$\n" +
	"\rfrozenBalance\x18\a \x01(\tR\rfrozenBalance\x12,\n" +
	"\x06status\x18\b \x01(\x0e2\x14.wallet.WalletStatusR\x06status\x12\x18\n" +
	"\aversion\x18\t \x01(\x03R\aversion\x12\x1c\n" +
	"\tcreatedAt\x18\n" +
	" \x01(\x03R\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\v \x01(\x03R\tupdatedAt\"\xdb\x02\n" +
	"\x05Payee\x12\x18\n" +
	"\apayeeId\x18\x01 \x01(\tR\apayeeId\x12\x18\n" +
	"\aownerId\x18\x02 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x03 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x12/\n" +
	"\tpayeeType\x18\x04 \x01(\x0e2\x11.wallet.PayeeTypeR\tpayeeType\x12\x1c\n" +
	"\tpayeeName\x18\x05 \x01(\tR\tpayeeName\x12\x18\n" +
	"\apayeeNo\x18\x06 \x01(\tR\apayeeNo\x12\"\n" +
	"\fpayeeOrgName\x18\a \x01(\tR\fpayeeOrgName\x12\x1e\n" +
	"\n" +
	"payeeOrgNo\x18\b \x01(\tR\n" +
	"payeeOrgNo\x12\x1c\n" +
	"\tcreatedAt\x18\t \x01(\x03R\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\n" +
	" \x01(\x03R\tupdatedAt\"\xcb\x01\n" +
	"\fGetWalletReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x03 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x1a\n" +
	"\bwalletId\x18\x05 \x01(\tR\bwalletId\"k\n" +
	"\rGetWalletResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\x12&\n" +
	"\x06wallet\x18\x02 \x01(\v2\x0e.wallet.WalletR\x06wallet\"\xb3\x01\n" +
	"\x10GetWalletListReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x03 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"q\n" +
	"\x11GetWalletListResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\x12(\n" +
	"\awallets\x18\x02 \x03(\v2\x0e.wallet.WalletR\awallets\",\n" +
	"\x0eCloseWalletReq\x12\x1a\n" +
	"\bwalletId\x18\x01 \x01(\tR\bwalletId\"E\n" +
	"\x0fCloseWalletResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\"-\n" +
	"\x0fActiveWalletReq\x12\x1a\n" +
	"\bwalletId\x18\x01 \x01(\tR\bwalletId\"F\n" +
	"\x10ActiveWalletResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\"\x9c\x03\n" +
	"\x11WalletWithdrawReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x03 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bwalletId\x18\x04 \x01(\tR\bwalletId\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12\x16\n" +
	"\x06remark\x18\a \x01(\tR\x06remark\x12\x1c\n" +
	"\ttxOrderId\x18\b \x01(\tR\ttxOrderId\x12\x16\n" +
	"\x06txTime\x18\t \x01(\x03R\x06txTime\x12,\n" +
	"\x06txType\x18\n" +
	" \x01(\x0e2\x14.wallet.WalletTxTypeR\x06txType\x12\x1a\n" +
	"\btxDetail\x18\v \x01(\tR\btxDetail\x12\x1a\n" +
	"\bcreateBy\x18\f \x01(\tR\bcreateBy\"H\n" +
	"\x12WalletWithdrawResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\"\x9b\x03\n" +
	"\x10WalletDepositReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x122\n" +
	"\n" +
	"walletType\x18\x03 \x01(\x0e2\x12.wallet.WalletTypeR\n" +
	"walletType\x12\x1a\n" +
	"\bwalletId\x18\x04 \x01(\tR\bwalletId\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12\x16\n" +
	"\x06remark\x18\a \x01(\tR\x06remark\x12\x1c\n" +
	"\ttxOrderId\x18\b \x01(\tR\ttxOrderId\x12\x16\n" +
	"\x06txTime\x18\t \x01(\x03R\x06txTime\x12,\n" +
	"\x06txType\x18\n" +
	" \x01(\x0e2\x14.wallet.WalletTxTypeR\x06txType\x12\x1a\n" +
	"\btxDetail\x18\v \x01(\tR\btxDetail\x12\x1a\n" +
	"\bcreateBy\x18\f \x01(\tR\bcreateBy\"G\n" +
	"\x11WalletDepositResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\"\x85\x01\n" +
	"\x16GetWalletByWalletIdReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x12\x1a\n" +
	"\bwalletId\x18\x03 \x01(\tR\bwalletId\"u\n" +
	"\x17GetWalletByWalletIdResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\x12&\n" +
	"\x06wallet\x18\x02 \x01(\v2\x0e.wallet.WalletR\x06wallet\"\x8e\x02\n" +
	"\x0eCreatePayeeReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x12/\n" +
	"\tpayeeType\x18\x03 \x01(\x0e2\x11.wallet.PayeeTypeR\tpayeeType\x12\x1c\n" +
	"\tpayeeName\x18\x04 \x01(\tR\tpayeeName\x12\x18\n" +
	"\apayeeNo\x18\x05 \x01(\tR\apayeeNo\x12\"\n" +
	"\fpayeeOrgName\x18\x06 \x01(\tR\fpayeeOrgName\x12\x1e\n" +
	"\n" +
	"payeeOrgNo\x18\a \x01(\tR\n" +
	"payeeOrgNo\"E\n" +
	"\x0fCreatePayeeResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\"b\n" +
	"\x0fGetPayeeListReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\"m\n" +
	"\x10GetPayeeListResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult\x12%\n" +
	"\x06payees\x18\x02 \x03(\v2\r.wallet.PayeeR\x06payees\"\xac\x01\n" +
	"\x0eDeletePayeeReq\x12\x18\n" +
	"\aownerId\x18\x01 \x01(\tR\aownerId\x125\n" +
	"\townerType\x18\x02 \x01(\x0e2\x17.wallet.WalletOwnerTypeR\townerType\x12\x18\n" +
	"\apayeeNo\x18\x03 \x01(\tR\apayeeNo\x12/\n" +
	"\tpayeeType\x18\x04 \x01(\x0e2\x11.wallet.PayeeTypeR\tpayeeType\"E\n" +
	"\x0fDeletePayeeResp\x122\n" +
	"\n" +
	"baseResult\x18\x01 \x01(\v2\x12.wallet.BaseResultR\n" +
	"baseResult*\x87\x01\n" +
	"\n" +
	"WalletType\x12\x17\n" +
	"\x13WALLET_TYPE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12WALLET_TYPE_SAVING\x10\x01\x12\x16\n" +
	"\x12WALLET_TYPE_CREDIT\x10\x02\x12\x17\n" +
	"\x13WALLET_TYPE_COLLECT\x10\x03\x12\x17\n" +
	"\x13WALLET_TYPE_SERVICE\x10\x04*w\n" +
	"\fWalletStatus\x12\x16\n" +
	"\x12WALLET_STATUS_INIT\x10\x00\x12\x18\n" +
	"\x14WALLET_STATUS_ACTIVE\x10\x01\x12\x1b\n" +
	"\x17WALLET_STATUS_EXCEPTION\x10\x02\x12\x18\n" +
	"\x14WALLET_STATUS_CLOSED\x10\x03*\xab\x01\n" +
	"\x0fWalletOwnerType\x12\x1d\n" +
	"\x19WALLET_OWNER_TYPE_UNKNOWN\x10\x00\x12\x1e\n" +
	"\x1aWALLET_OWNER_TYPE_PLATFORM\x10\x01\x12\x1e\n" +
	"\x1aWALLET_OWNER_TYPE_MERCHANT\x10\x02\x12\x1b\n" +
	"\x17WALLET_OWNER_TYPE_AGENT\x10\x03\x12\x1c\n" +
	"\x18WALLET_OWNER_TYPE_MEMBER\x10\x04*\xa9\x03\n" +
	"\fWalletTxType\x12\x1a\n" +
	"\x16WALLET_TX_TYPE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16WALLET_TX_TYPE_DEPOSIT\x10\x01\x12\x1b\n" +
	"\x17WALLET_TX_TYPE_WITHDRAW\x10\x02\x12\x1b\n" +
	"\x17WALLET_TX_TYPE_TRANSFER\x10\x03\x12\x19\n" +
	"\x15WALLET_TX_TYPE_FROZEN\x10\x04\x12\x1b\n" +
	"\x17WALLET_TX_TYPE_UNFROZEN\x10\x05\x12\x19\n" +
	"\x15WALLET_TX_TYPE_REFUND\x10\x06\x12\x19\n" +
	"\x15WALLET_TX_TYPE_ADJUST\x10\a\x12\x1a\n" +
	"\x16WALLET_TX_TYPE_EXPENSE\x10\b\x12\x19\n" +
	"\x15WALLET_TX_TYPE_INCOME\x10\t\x12\x1d\n" +
	"\x19WALLET_TX_TYPE_INCOME_FEE\x10\n" +
	"\x12\x1e\n" +
	"\x1aWALLET_TX_TYPE_EXPENSE_FEE\x10\v\x12 \n" +
	"\x1cWALLET_TX_TYPE_INCOME_REWARD\x10\f\x12!\n" +
	"\x1dWALLET_TX_TYPE_EXPENSE_REWARD\x10\r*:\n" +
	"\tPayeeType\x12\x18\n" +
	"\x14PAYEE_TYPE_BANK_CARD\x10\x00\x12\x13\n" +
	"\x0fPAYEE_TYPE_USDT\x10\x012\xff\x05\n" +
	"\rWalletService\x12A\n" +
	"\fCreateWallet\x12\x17.wallet.CreateWalletReq\x1a\x18.wallet.CreateWalletResp\x128\n" +
	"\tGetWallet\x12\x14.wallet.GetWalletReq\x1a\x15.wallet.GetWalletResp\x12V\n" +
	"\x13GetWalletByWalletId\x12\x1e.wallet.GetWalletByWalletIdReq\x1a\x1f.wallet.GetWalletByWalletIdResp\x12D\n" +
	"\rGetWalletList\x12\x18.wallet.GetWalletListReq\x1a\x19.wallet.GetWalletListResp\x12>\n" +
	"\vCloseWallet\x12\x16.wallet.CloseWalletReq\x1a\x17.wallet.CloseWalletResp\x12A\n" +
	"\fActiveWallet\x12\x17.wallet.ActiveWalletReq\x1a\x18.wallet.ActiveWalletResp\x12G\n" +
	"\x0eWalletWithdraw\x12\x19.wallet.WalletWithdrawReq\x1a\x1a.wallet.WalletWithdrawResp\x12D\n" +
	"\rWalletDeposit\x12\x18.wallet.WalletDepositReq\x1a\x19.wallet.WalletDepositResp\x12>\n" +
	"\vCreatePayee\x12\x16.wallet.CreatePayeeReq\x1a\x17.wallet.CreatePayeeResp\x12A\n" +
	"\fGetPayeeList\x12\x17.wallet.GetPayeeListReq\x1a\x18.wallet.GetPayeeListResp\x12>\n" +
	"\vDeletePayee\x12\x16.wallet.DeletePayeeReq\x1a\x17.wallet.DeletePayeeRespB\n" +
	"Z\b./walletb\x06proto3"

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData []byte
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)))
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_wallet_proto_goTypes = []any{
	(WalletType)(0),                 // 0: wallet.WalletType
	(WalletStatus)(0),               // 1: wallet.WalletStatus
	(WalletOwnerType)(0),            // 2: wallet.WalletOwnerType
	(WalletTxType)(0),               // 3: wallet.WalletTxType
	(PayeeType)(0),                  // 4: wallet.PayeeType
	(*BaseResult)(nil),              // 5: wallet.BaseResult
	(*Pagination)(nil),              // 6: wallet.Pagination
	(*CreateWalletReq)(nil),         // 7: wallet.CreateWalletReq
	(*CreateWalletResp)(nil),        // 8: wallet.CreateWalletResp
	(*Wallet)(nil),                  // 9: wallet.Wallet
	(*Payee)(nil),                   // 10: wallet.Payee
	(*GetWalletReq)(nil),            // 11: wallet.GetWalletReq
	(*GetWalletResp)(nil),           // 12: wallet.GetWalletResp
	(*GetWalletListReq)(nil),        // 13: wallet.GetWalletListReq
	(*GetWalletListResp)(nil),       // 14: wallet.GetWalletListResp
	(*CloseWalletReq)(nil),          // 15: wallet.CloseWalletReq
	(*CloseWalletResp)(nil),         // 16: wallet.CloseWalletResp
	(*ActiveWalletReq)(nil),         // 17: wallet.ActiveWalletReq
	(*ActiveWalletResp)(nil),        // 18: wallet.ActiveWalletResp
	(*WalletWithdrawReq)(nil),       // 19: wallet.WalletWithdrawReq
	(*WalletWithdrawResp)(nil),      // 20: wallet.WalletWithdrawResp
	(*WalletDepositReq)(nil),        // 21: wallet.WalletDepositReq
	(*WalletDepositResp)(nil),       // 22: wallet.WalletDepositResp
	(*GetWalletByWalletIdReq)(nil),  // 23: wallet.GetWalletByWalletIdReq
	(*GetWalletByWalletIdResp)(nil), // 24: wallet.GetWalletByWalletIdResp
	(*CreatePayeeReq)(nil),          // 25: wallet.CreatePayeeReq
	(*CreatePayeeResp)(nil),         // 26: wallet.CreatePayeeResp
	(*GetPayeeListReq)(nil),         // 27: wallet.GetPayeeListReq
	(*GetPayeeListResp)(nil),        // 28: wallet.GetPayeeListResp
	(*DeletePayeeReq)(nil),          // 29: wallet.DeletePayeeReq
	(*DeletePayeeResp)(nil),         // 30: wallet.DeletePayeeResp
}
var file_wallet_proto_depIdxs = []int32{
	2,  // 0: wallet.CreateWalletReq.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 1: wallet.CreateWalletReq.walletType:type_name -> wallet.WalletType
	5,  // 2: wallet.CreateWalletResp.baseResult:type_name -> wallet.BaseResult
	2,  // 3: wallet.Wallet.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 4: wallet.Wallet.walletType:type_name -> wallet.WalletType
	1,  // 5: wallet.Wallet.status:type_name -> wallet.WalletStatus
	2,  // 6: wallet.Payee.ownerType:type_name -> wallet.WalletOwnerType
	4,  // 7: wallet.Payee.payeeType:type_name -> wallet.PayeeType
	2,  // 8: wallet.GetWalletReq.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 9: wallet.GetWalletReq.walletType:type_name -> wallet.WalletType
	5,  // 10: wallet.GetWalletResp.baseResult:type_name -> wallet.BaseResult
	9,  // 11: wallet.GetWalletResp.wallet:type_name -> wallet.Wallet
	2,  // 12: wallet.GetWalletListReq.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 13: wallet.GetWalletListReq.walletType:type_name -> wallet.WalletType
	5,  // 14: wallet.GetWalletListResp.baseResult:type_name -> wallet.BaseResult
	9,  // 15: wallet.GetWalletListResp.wallets:type_name -> wallet.Wallet
	5,  // 16: wallet.CloseWalletResp.baseResult:type_name -> wallet.BaseResult
	5,  // 17: wallet.ActiveWalletResp.baseResult:type_name -> wallet.BaseResult
	2,  // 18: wallet.WalletWithdrawReq.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 19: wallet.WalletWithdrawReq.walletType:type_name -> wallet.WalletType
	3,  // 20: wallet.WalletWithdrawReq.txType:type_name -> wallet.WalletTxType
	5,  // 21: wallet.WalletWithdrawResp.baseResult:type_name -> wallet.BaseResult
	2,  // 22: wallet.WalletDepositReq.ownerType:type_name -> wallet.WalletOwnerType
	0,  // 23: wallet.WalletDepositReq.walletType:type_name -> wallet.WalletType
	3,  // 24: wallet.WalletDepositReq.txType:type_name -> wallet.WalletTxType
	5,  // 25: wallet.WalletDepositResp.baseResult:type_name -> wallet.BaseResult
	2,  // 26: wallet.GetWalletByWalletIdReq.ownerType:type_name -> wallet.WalletOwnerType
	5,  // 27: wallet.GetWalletByWalletIdResp.baseResult:type_name -> wallet.BaseResult
	9,  // 28: wallet.GetWalletByWalletIdResp.wallet:type_name -> wallet.Wallet
	2,  // 29: wallet.CreatePayeeReq.ownerType:type_name -> wallet.WalletOwnerType
	4,  // 30: wallet.CreatePayeeReq.payeeType:type_name -> wallet.PayeeType
	5,  // 31: wallet.CreatePayeeResp.baseResult:type_name -> wallet.BaseResult
	2,  // 32: wallet.GetPayeeListReq.ownerType:type_name -> wallet.WalletOwnerType
	5,  // 33: wallet.GetPayeeListResp.baseResult:type_name -> wallet.BaseResult
	10, // 34: wallet.GetPayeeListResp.payees:type_name -> wallet.Payee
	2,  // 35: wallet.DeletePayeeReq.ownerType:type_name -> wallet.WalletOwnerType
	4,  // 36: wallet.DeletePayeeReq.payeeType:type_name -> wallet.PayeeType
	5,  // 37: wallet.DeletePayeeResp.baseResult:type_name -> wallet.BaseResult
	7,  // 38: wallet.WalletService.CreateWallet:input_type -> wallet.CreateWalletReq
	11, // 39: wallet.WalletService.GetWallet:input_type -> wallet.GetWalletReq
	23, // 40: wallet.WalletService.GetWalletByWalletId:input_type -> wallet.GetWalletByWalletIdReq
	13, // 41: wallet.WalletService.GetWalletList:input_type -> wallet.GetWalletListReq
	15, // 42: wallet.WalletService.CloseWallet:input_type -> wallet.CloseWalletReq
	17, // 43: wallet.WalletService.ActiveWallet:input_type -> wallet.ActiveWalletReq
	19, // 44: wallet.WalletService.WalletWithdraw:input_type -> wallet.WalletWithdrawReq
	21, // 45: wallet.WalletService.WalletDeposit:input_type -> wallet.WalletDepositReq
	25, // 46: wallet.WalletService.CreatePayee:input_type -> wallet.CreatePayeeReq
	27, // 47: wallet.WalletService.GetPayeeList:input_type -> wallet.GetPayeeListReq
	29, // 48: wallet.WalletService.DeletePayee:input_type -> wallet.DeletePayeeReq
	8,  // 49: wallet.WalletService.CreateWallet:output_type -> wallet.CreateWalletResp
	12, // 50: wallet.WalletService.GetWallet:output_type -> wallet.GetWalletResp
	24, // 51: wallet.WalletService.GetWalletByWalletId:output_type -> wallet.GetWalletByWalletIdResp
	14, // 52: wallet.WalletService.GetWalletList:output_type -> wallet.GetWalletListResp
	16, // 53: wallet.WalletService.CloseWallet:output_type -> wallet.CloseWalletResp
	18, // 54: wallet.WalletService.ActiveWallet:output_type -> wallet.ActiveWalletResp
	20, // 55: wallet.WalletService.WalletWithdraw:output_type -> wallet.WalletWithdrawResp
	22, // 56: wallet.WalletService.WalletDeposit:output_type -> wallet.WalletDepositResp
	26, // 57: wallet.WalletService.CreatePayee:output_type -> wallet.CreatePayeeResp
	28, // 58: wallet.WalletService.GetPayeeList:output_type -> wallet.GetPayeeListResp
	30, // 59: wallet.WalletService.DeletePayee:output_type -> wallet.DeletePayeeResp
	49, // [49:60] is the sub-list for method output_type
	38, // [38:49] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		EnumInfos:         file_wallet_proto_enumTypes,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}
