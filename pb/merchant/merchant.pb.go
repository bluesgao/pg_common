// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: merchant.proto

package merchant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MerchantType int32

const (
	MerchantType_MerchantType_Self MerchantType = 0 // 自营
	MerchantType_MerchantType_Join MerchantType = 1 // 加盟
)

// Enum value maps for MerchantType.
var (
	MerchantType_name = map[int32]string{
		0: "MerchantType_Self",
		1: "MerchantType_Join",
	}
	MerchantType_value = map[string]int32{
		"MerchantType_Self": 0,
		"MerchantType_Join": 1,
	}
)

func (x MerchantType) Enum() *MerchantType {
	p := new(MerchantType)
	*p = x
	return p
}

func (x MerchantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantType) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[0].Descriptor()
}

func (MerchantType) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[0]
}

func (x MerchantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantType.Descriptor instead.
func (MerchantType) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{0}
}

type MerchantStatus int32

const (
	MerchantStatus_MerchantStatus_Init     MerchantStatus = 0 // 初始化
	MerchantStatus_MerchantStatus_Active   MerchantStatus = 1 // 启用
	MerchantStatus_MerchantStatus_Inactive MerchantStatus = 2 // 停用
)

// Enum value maps for MerchantStatus.
var (
	MerchantStatus_name = map[int32]string{
		0: "MerchantStatus_Init",
		1: "MerchantStatus_Active",
		2: "MerchantStatus_Inactive",
	}
	MerchantStatus_value = map[string]int32{
		"MerchantStatus_Init":     0,
		"MerchantStatus_Active":   1,
		"MerchantStatus_Inactive": 2,
	}
)

func (x MerchantStatus) Enum() *MerchantStatus {
	p := new(MerchantStatus)
	*p = x
	return p
}

func (x MerchantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[1].Descriptor()
}

func (MerchantStatus) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[1]
}

func (x MerchantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantStatus.Descriptor instead.
func (MerchantStatus) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{1}
}

type MerchantPlatformType int32

const (
	MerchantPlatformType_MerchantPlatformType_Web MerchantPlatformType = 0 // 网页
	MerchantPlatformType_MerchantPlatformType_H5  MerchantPlatformType = 1 // H5
	MerchantPlatformType_MerchantPlatformType_App MerchantPlatformType = 2 // APP
)

// Enum value maps for MerchantPlatformType.
var (
	MerchantPlatformType_name = map[int32]string{
		0: "MerchantPlatformType_Web",
		1: "MerchantPlatformType_H5",
		2: "MerchantPlatformType_App",
	}
	MerchantPlatformType_value = map[string]int32{
		"MerchantPlatformType_Web": 0,
		"MerchantPlatformType_H5":  1,
		"MerchantPlatformType_App": 2,
	}
)

func (x MerchantPlatformType) Enum() *MerchantPlatformType {
	p := new(MerchantPlatformType)
	*p = x
	return p
}

func (x MerchantPlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantPlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[2].Descriptor()
}

func (MerchantPlatformType) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[2]
}

func (x MerchantPlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantPlatformType.Descriptor instead.
func (MerchantPlatformType) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{2}
}

type MerchantPlatformStatus int32

const (
	MerchantPlatformStatus_MerchantPlatformStatus_Init    MerchantPlatformStatus = 0 // 初始化
	MerchantPlatformStatus_MerchantPlatformStatus_Enable  MerchantPlatformStatus = 1 // 启用
	MerchantPlatformStatus_MerchantPlatformStatus_Disable MerchantPlatformStatus = 2 // 停用
)

// Enum value maps for MerchantPlatformStatus.
var (
	MerchantPlatformStatus_name = map[int32]string{
		0: "MerchantPlatformStatus_Init",
		1: "MerchantPlatformStatus_Enable",
		2: "MerchantPlatformStatus_Disable",
	}
	MerchantPlatformStatus_value = map[string]int32{
		"MerchantPlatformStatus_Init":    0,
		"MerchantPlatformStatus_Enable":  1,
		"MerchantPlatformStatus_Disable": 2,
	}
)

func (x MerchantPlatformStatus) Enum() *MerchantPlatformStatus {
	p := new(MerchantPlatformStatus)
	*p = x
	return p
}

func (x MerchantPlatformStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantPlatformStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[3].Descriptor()
}

func (MerchantPlatformStatus) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[3]
}

func (x MerchantPlatformStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantPlatformStatus.Descriptor instead.
func (MerchantPlatformStatus) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{3}
}

type MerchantSecurityStatus int32

const (
	MerchantSecurityStatus_MerchantSecurityStatus_Init     MerchantSecurityStatus = 0 // 初始化
	MerchantSecurityStatus_MerchantSecurityStatus_Active   MerchantSecurityStatus = 1 // 启用
	MerchantSecurityStatus_MerchantSecurityStatus_Inactive MerchantSecurityStatus = 2 // 停用
)

// Enum value maps for MerchantSecurityStatus.
var (
	MerchantSecurityStatus_name = map[int32]string{
		0: "MerchantSecurityStatus_Init",
		1: "MerchantSecurityStatus_Active",
		2: "MerchantSecurityStatus_Inactive",
	}
	MerchantSecurityStatus_value = map[string]int32{
		"MerchantSecurityStatus_Init":     0,
		"MerchantSecurityStatus_Active":   1,
		"MerchantSecurityStatus_Inactive": 2,
	}
)

func (x MerchantSecurityStatus) Enum() *MerchantSecurityStatus {
	p := new(MerchantSecurityStatus)
	*p = x
	return p
}

func (x MerchantSecurityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantSecurityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[4].Descriptor()
}

func (MerchantSecurityStatus) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[4]
}

func (x MerchantSecurityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantSecurityStatus.Descriptor instead.
func (MerchantSecurityStatus) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{4}
}

type MerchantDomainStatus int32

const (
	MerchantDomainStatus_MerchantDomainStatus_Init    MerchantDomainStatus = 0 // 初始化
	MerchantDomainStatus_MerchantDomainStatus_Enable  MerchantDomainStatus = 1 // 启用
	MerchantDomainStatus_MerchantDomainStatus_Disable MerchantDomainStatus = 2 // 停用
)

// Enum value maps for MerchantDomainStatus.
var (
	MerchantDomainStatus_name = map[int32]string{
		0: "MerchantDomainStatus_Init",
		1: "MerchantDomainStatus_Enable",
		2: "MerchantDomainStatus_Disable",
	}
	MerchantDomainStatus_value = map[string]int32{
		"MerchantDomainStatus_Init":    0,
		"MerchantDomainStatus_Enable":  1,
		"MerchantDomainStatus_Disable": 2,
	}
)

func (x MerchantDomainStatus) Enum() *MerchantDomainStatus {
	p := new(MerchantDomainStatus)
	*p = x
	return p
}

func (x MerchantDomainStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantDomainStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[5].Descriptor()
}

func (MerchantDomainStatus) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[5]
}

func (x MerchantDomainStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantDomainStatus.Descriptor instead.
func (MerchantDomainStatus) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{5}
}

type MerchantUserType int32

const (
	MerchantUserType_MerchantUserType_System MerchantUserType = 0 // 系统用户
	MerchantUserType_MerchantUserType_Member MerchantUserType = 1 // 会员
)

// Enum value maps for MerchantUserType.
var (
	MerchantUserType_name = map[int32]string{
		0: "MerchantUserType_System",
		1: "MerchantUserType_Member",
	}
	MerchantUserType_value = map[string]int32{
		"MerchantUserType_System": 0,
		"MerchantUserType_Member": 1,
	}
)

func (x MerchantUserType) Enum() *MerchantUserType {
	p := new(MerchantUserType)
	*p = x
	return p
}

func (x MerchantUserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantUserType) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[6].Descriptor()
}

func (MerchantUserType) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[6]
}

func (x MerchantUserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantUserType.Descriptor instead.
func (MerchantUserType) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{6}
}

type MerchantUserAccessRestrictionType int32

const (
	MerchantUserAccessRestrictionType_MerchantUserAccessRestrictionType_Access MerchantUserAccessRestrictionType = 0 // 访问限制
	MerchantUserAccessRestrictionType_MerchantUserAccessRestrictionType_Block  MerchantUserAccessRestrictionType = 1 // 访问阻止
)

// Enum value maps for MerchantUserAccessRestrictionType.
var (
	MerchantUserAccessRestrictionType_name = map[int32]string{
		0: "MerchantUserAccessRestrictionType_Access",
		1: "MerchantUserAccessRestrictionType_Block",
	}
	MerchantUserAccessRestrictionType_value = map[string]int32{
		"MerchantUserAccessRestrictionType_Access": 0,
		"MerchantUserAccessRestrictionType_Block":  1,
	}
)

func (x MerchantUserAccessRestrictionType) Enum() *MerchantUserAccessRestrictionType {
	p := new(MerchantUserAccessRestrictionType)
	*p = x
	return p
}

func (x MerchantUserAccessRestrictionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantUserAccessRestrictionType) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[7].Descriptor()
}

func (MerchantUserAccessRestrictionType) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[7]
}

func (x MerchantUserAccessRestrictionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantUserAccessRestrictionType.Descriptor instead.
func (MerchantUserAccessRestrictionType) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{7}
}

type AgentType int32

const (
	AgentType_AgentType_Default  AgentType = 0 // 商户默认代理
	AgentType_AgentType_Direct   AgentType = 1 // 直属代理
	AgentType_AgentType_Indirect AgentType = 2 // 间接代理
)

// Enum value maps for AgentType.
var (
	AgentType_name = map[int32]string{
		0: "AgentType_Default",
		1: "AgentType_Direct",
		2: "AgentType_Indirect",
	}
	AgentType_value = map[string]int32{
		"AgentType_Default":  0,
		"AgentType_Direct":   1,
		"AgentType_Indirect": 2,
	}
)

func (x AgentType) Enum() *AgentType {
	p := new(AgentType)
	*p = x
	return p
}

func (x AgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[8].Descriptor()
}

func (AgentType) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[8]
}

func (x AgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentType.Descriptor instead.
func (AgentType) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{8}
}

type AgentStatus int32

const (
	AgentStatus_AgentStatus_Init     AgentStatus = 0 // 初始化
	AgentStatus_AgentStatus_Active   AgentStatus = 1 // 启用
	AgentStatus_AgentStatus_Inactive AgentStatus = 2 // 停用
)

// Enum value maps for AgentStatus.
var (
	AgentStatus_name = map[int32]string{
		0: "AgentStatus_Init",
		1: "AgentStatus_Active",
		2: "AgentStatus_Inactive",
	}
	AgentStatus_value = map[string]int32{
		"AgentStatus_Init":     0,
		"AgentStatus_Active":   1,
		"AgentStatus_Inactive": 2,
	}
)

func (x AgentStatus) Enum() *AgentStatus {
	p := new(AgentStatus)
	*p = x
	return p
}

func (x AgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_merchant_proto_enumTypes[9].Descriptor()
}

func (AgentStatus) Type() protoreflect.EnumType {
	return &file_merchant_proto_enumTypes[9]
}

func (x AgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus.Descriptor instead.
func (AgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{9}
}

type BaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BaseResult) Reset() {
	*x = BaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResult) ProtoMessage() {}

func (x *BaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResult.ProtoReflect.Descriptor instead.
func (*BaseResult) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BaseResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// 分页请求
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         // 当前页
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 每页大小
	Total    int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`       // 总数
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 分页请求
type CommonModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //自增加ID
	CreatedBy string `protobuf:"bytes,2,opt,name=createdBy,proto3" json:"createdBy,omitempty"` // 创建者
	UpdatedBy string `protobuf:"bytes,3,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"` // 更新者
	CreatedAt string `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 创建时间
	UpdatedAt string `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` // 最后更新时间
	DeletedAt string `protobuf:"bytes,6,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` // 删除时间
}

func (x *CommonModel) Reset() {
	*x = CommonModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonModel) ProtoMessage() {}

func (x *CommonModel) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonModel.ProtoReflect.Descriptor instead.
func (*CommonModel) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{2}
}

func (x *CommonModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommonModel) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CommonModel) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *CommonModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CommonModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CommonModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

// Merchant
type Merchant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string         `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                 // 商家ID
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                             // 商家名称
	MerchantType MerchantType   `protobuf:"varint,3,opt,name=merchantType,proto3,enum=merchant.MerchantType" json:"merchantType,omitempty"` //  商家类型 0自营 1加盟
	Status       MerchantStatus `protobuf:"varint,4,opt,name=status,proto3,enum=merchant.MerchantStatus" json:"status,omitempty"`           //  0初始化 1启用 2停用
	Avatar       string         `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                                         // 头像
	Phone        string         `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                           // 负责人手机号
	Email        string         `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`                                           // 负责人邮箱
}

func (x *Merchant) Reset() {
	*x = Merchant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Merchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant) ProtoMessage() {}

func (x *Merchant) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant.ProtoReflect.Descriptor instead.
func (*Merchant) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{3}
}

func (x *Merchant) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Merchant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Merchant) GetMerchantType() MerchantType {
	if x != nil {
		return x.MerchantType
	}
	return MerchantType_MerchantType_Self
}

func (x *Merchant) GetStatus() MerchantStatus {
	if x != nil {
		return x.Status
	}
	return MerchantStatus_MerchantStatus_Init
}

func (x *Merchant) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Merchant) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Merchant) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type MerchantBaseSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId      string   `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`           // 商家ID
	SupportCurrency []string `protobuf:"bytes,2,rep,name=supportCurrency,proto3" json:"supportCurrency,omitempty"` // 支持币种
	SupportRegion   []string `protobuf:"bytes,3,rep,name=supportRegion,proto3" json:"supportRegion,omitempty"`     // 支持地域
	SupportLanguage []string `protobuf:"bytes,4,rep,name=supportLanguage,proto3" json:"supportLanguage,omitempty"` // 支持语言
	DefaultLanguage string   `protobuf:"bytes,5,opt,name=defaultLanguage,proto3" json:"defaultLanguage,omitempty"` // 默认语言
	DefaultCurrency string   `protobuf:"bytes,6,opt,name=defaultCurrency,proto3" json:"defaultCurrency,omitempty"` // 默认币种
	DefaultRegion   string   `protobuf:"bytes,7,opt,name=defaultRegion,proto3" json:"defaultRegion,omitempty"`     // 默认地域
}

func (x *MerchantBaseSettings) Reset() {
	*x = MerchantBaseSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantBaseSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantBaseSettings) ProtoMessage() {}

func (x *MerchantBaseSettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantBaseSettings.ProtoReflect.Descriptor instead.
func (*MerchantBaseSettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{4}
}

func (x *MerchantBaseSettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantBaseSettings) GetSupportCurrency() []string {
	if x != nil {
		return x.SupportCurrency
	}
	return nil
}

func (x *MerchantBaseSettings) GetSupportRegion() []string {
	if x != nil {
		return x.SupportRegion
	}
	return nil
}

func (x *MerchantBaseSettings) GetSupportLanguage() []string {
	if x != nil {
		return x.SupportLanguage
	}
	return nil
}

func (x *MerchantBaseSettings) GetDefaultLanguage() string {
	if x != nil {
		return x.DefaultLanguage
	}
	return ""
}

func (x *MerchantBaseSettings) GetDefaultCurrency() string {
	if x != nil {
		return x.DefaultCurrency
	}
	return ""
}

func (x *MerchantBaseSettings) GetDefaultRegion() string {
	if x != nil {
		return x.DefaultRegion
	}
	return ""
}

type CreateMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                             // 商家名称
	MerchantType MerchantType `protobuf:"varint,2,opt,name=merchantType,proto3,enum=merchant.MerchantType" json:"merchantType,omitempty"` //  商家类型 0自营 1加盟
	Avatar       string       `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                         // 头像
	Phone        string       `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                           // 负责人手机号
	Email        string       `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`                                           // 负责人邮箱
}

func (x *CreateMerchantReq) Reset() {
	*x = CreateMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantReq) ProtoMessage() {}

func (x *CreateMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantReq.ProtoReflect.Descriptor instead.
func (*CreateMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMerchantReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMerchantReq) GetMerchantType() MerchantType {
	if x != nil {
		return x.MerchantType
	}
	return MerchantType_MerchantType_Self
}

func (x *CreateMerchantReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateMerchantReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateMerchantReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 商家名称
	Avatar     string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`         // 头像
	Phone      string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`           // 负责人手机号
	Email      string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`           // 负责人邮箱
}

func (x *UpdateMerchantReq) Reset() {
	*x = UpdateMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMerchantReq) ProtoMessage() {}

func (x *UpdateMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMerchantReq.ProtoReflect.Descriptor instead.
func (*UpdateMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMerchantReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateMerchantReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMerchantReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateMerchantReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateMerchantReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateMerchantStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string         `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                             // 商家ID
	PreStatus  MerchantStatus `protobuf:"varint,2,opt,name=preStatus,proto3,enum=merchant.MerchantStatus" json:"preStatus,omitempty"` //前置状态  0初始化 1启用 2停用
	Status     MerchantStatus `protobuf:"varint,3,opt,name=status,proto3,enum=merchant.MerchantStatus" json:"status,omitempty"`       //目标状态  0初始化 1启用 2停用
}

func (x *UpdateMerchantStatusReq) Reset() {
	*x = UpdateMerchantStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMerchantStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMerchantStatusReq) ProtoMessage() {}

func (x *UpdateMerchantStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMerchantStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMerchantStatusReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMerchantStatusReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateMerchantStatusReq) GetPreStatus() MerchantStatus {
	if x != nil {
		return x.PreStatus
	}
	return MerchantStatus_MerchantStatus_Init
}

func (x *UpdateMerchantStatusReq) GetStatus() MerchantStatus {
	if x != nil {
		return x.Status
	}
	return MerchantStatus_MerchantStatus_Init
}

type GetMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
}

func (x *GetMerchantReq) Reset() {
	*x = GetMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantReq) ProtoMessage() {}

func (x *GetMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantReq.ProtoReflect.Descriptor instead.
func (*GetMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{8}
}

func (x *GetMerchantReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

type MerchantListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string         `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                 // 商家ID
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                             // 商家名称
	MerchantType MerchantType   `protobuf:"varint,3,opt,name=merchantType,proto3,enum=merchant.MerchantType" json:"merchantType,omitempty"` //  商家类型 0自营 1加盟
	Status       MerchantStatus `protobuf:"varint,4,opt,name=status,proto3,enum=merchant.MerchantStatus" json:"status,omitempty"`           //  0初始化 1启用 2停用
}

func (x *MerchantListReq) Reset() {
	*x = MerchantListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantListReq) ProtoMessage() {}

func (x *MerchantListReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantListReq.ProtoReflect.Descriptor instead.
func (*MerchantListReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{9}
}

func (x *MerchantListReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantListReq) GetMerchantType() MerchantType {
	if x != nil {
		return x.MerchantType
	}
	return MerchantType_MerchantType_Self
}

func (x *MerchantListReq) GetStatus() MerchantStatus {
	if x != nil {
		return x.Status
	}
	return MerchantStatus_MerchantStatus_Init
}

type PageMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination   *Pagination    `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                             // 商家名称
	MerchantType MerchantType   `protobuf:"varint,3,opt,name=merchantType,proto3,enum=merchant.MerchantType" json:"merchantType,omitempty"` //  商家类型 0自营 1加盟
	Status       MerchantStatus `protobuf:"varint,4,opt,name=status,proto3,enum=merchant.MerchantStatus" json:"status,omitempty"`           //  0初始化 1启用 2停用
}

func (x *PageMerchantReq) Reset() {
	*x = PageMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMerchantReq) ProtoMessage() {}

func (x *PageMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMerchantReq.ProtoReflect.Descriptor instead.
func (*PageMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{10}
}

func (x *PageMerchantReq) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *PageMerchantReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PageMerchantReq) GetMerchantType() MerchantType {
	if x != nil {
		return x.MerchantType
	}
	return MerchantType_MerchantType_Self
}

func (x *PageMerchantReq) GetStatus() MerchantStatus {
	if x != nil {
		return x.Status
	}
	return MerchantStatus_MerchantStatus_Init
}

type MerchantResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Merchant   *Merchant   `protobuf:"bytes,2,opt,name=merchant,proto3" json:"merchant,omitempty"`
}

func (x *MerchantResp) Reset() {
	*x = MerchantResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResp) ProtoMessage() {}

func (x *MerchantResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResp.ProtoReflect.Descriptor instead.
func (*MerchantResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{11}
}

func (x *MerchantResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *MerchantResp) GetMerchant() *Merchant {
	if x != nil {
		return x.Merchant
	}
	return nil
}

type MerchantListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*Merchant `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MerchantListResp) Reset() {
	*x = MerchantListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantListResp) ProtoMessage() {}

func (x *MerchantListResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantListResp.ProtoReflect.Descriptor instead.
func (*MerchantListResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{12}
}

func (x *MerchantListResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *MerchantListResp) GetList() []*Merchant {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MerchantListResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ActivateMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
}

func (x *ActivateMerchantReq) Reset() {
	*x = ActivateMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateMerchantReq) ProtoMessage() {}

func (x *ActivateMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateMerchantReq.ProtoReflect.Descriptor instead.
func (*ActivateMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{13}
}

func (x *ActivateMerchantReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

type ActivateMerchantResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *ActivateMerchantResp) Reset() {
	*x = ActivateMerchantResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateMerchantResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateMerchantResp) ProtoMessage() {}

func (x *ActivateMerchantResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateMerchantResp.ProtoReflect.Descriptor instead.
func (*ActivateMerchantResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{14}
}

func (x *ActivateMerchantResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type InactivateMerchantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
}

func (x *InactivateMerchantReq) Reset() {
	*x = InactivateMerchantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateMerchantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateMerchantReq) ProtoMessage() {}

func (x *InactivateMerchantReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateMerchantReq.ProtoReflect.Descriptor instead.
func (*InactivateMerchantReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{15}
}

func (x *InactivateMerchantReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

type InactivateMerchantResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *InactivateMerchantResp) Reset() {
	*x = InactivateMerchantResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateMerchantResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateMerchantResp) ProtoMessage() {}

func (x *InactivateMerchantResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateMerchantResp.ProtoReflect.Descriptor instead.
func (*InactivateMerchantResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{16}
}

func (x *InactivateMerchantResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type GetMerchantBaseSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
}

func (x *GetMerchantBaseSettingsReq) Reset() {
	*x = GetMerchantBaseSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantBaseSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBaseSettingsReq) ProtoMessage() {}

func (x *GetMerchantBaseSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBaseSettingsReq.ProtoReflect.Descriptor instead.
func (*GetMerchantBaseSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{17}
}

func (x *GetMerchantBaseSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

type GetMerchantBaseSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult           `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantBaseSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetMerchantBaseSettingsResp) Reset() {
	*x = GetMerchantBaseSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantBaseSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBaseSettingsResp) ProtoMessage() {}

func (x *GetMerchantBaseSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBaseSettingsResp.ProtoReflect.Descriptor instead.
func (*GetMerchantBaseSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{18}
}

func (x *GetMerchantBaseSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetMerchantBaseSettingsResp) GetSettings() *MerchantBaseSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CreateMerchantBaseSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId      string   `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`           // 商家ID
	SupportCurrency []string `protobuf:"bytes,2,rep,name=supportCurrency,proto3" json:"supportCurrency,omitempty"` // 支持币种
	SupportRegion   []string `protobuf:"bytes,3,rep,name=supportRegion,proto3" json:"supportRegion,omitempty"`     // 支持地域
	SupportLanguage []string `protobuf:"bytes,4,rep,name=supportLanguage,proto3" json:"supportLanguage,omitempty"` // 支持语言
	DefaultLanguage string   `protobuf:"bytes,5,opt,name=defaultLanguage,proto3" json:"defaultLanguage,omitempty"` // 默认语言
	DefaultCurrency string   `protobuf:"bytes,6,opt,name=defaultCurrency,proto3" json:"defaultCurrency,omitempty"` // 默认币种
	DefaultRegion   string   `protobuf:"bytes,7,opt,name=defaultRegion,proto3" json:"defaultRegion,omitempty"`     // 默认地域
}

func (x *CreateMerchantBaseSettingsReq) Reset() {
	*x = CreateMerchantBaseSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantBaseSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantBaseSettingsReq) ProtoMessage() {}

func (x *CreateMerchantBaseSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantBaseSettingsReq.ProtoReflect.Descriptor instead.
func (*CreateMerchantBaseSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{19}
}

func (x *CreateMerchantBaseSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateMerchantBaseSettingsReq) GetSupportCurrency() []string {
	if x != nil {
		return x.SupportCurrency
	}
	return nil
}

func (x *CreateMerchantBaseSettingsReq) GetSupportRegion() []string {
	if x != nil {
		return x.SupportRegion
	}
	return nil
}

func (x *CreateMerchantBaseSettingsReq) GetSupportLanguage() []string {
	if x != nil {
		return x.SupportLanguage
	}
	return nil
}

func (x *CreateMerchantBaseSettingsReq) GetDefaultLanguage() string {
	if x != nil {
		return x.DefaultLanguage
	}
	return ""
}

func (x *CreateMerchantBaseSettingsReq) GetDefaultCurrency() string {
	if x != nil {
		return x.DefaultCurrency
	}
	return ""
}

func (x *CreateMerchantBaseSettingsReq) GetDefaultRegion() string {
	if x != nil {
		return x.DefaultRegion
	}
	return ""
}

type CreateMerchantBaseSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreateMerchantBaseSettingsResp) Reset() {
	*x = CreateMerchantBaseSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantBaseSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantBaseSettingsResp) ProtoMessage() {}

func (x *CreateMerchantBaseSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantBaseSettingsResp.ProtoReflect.Descriptor instead.
func (*CreateMerchantBaseSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{20}
}

func (x *CreateMerchantBaseSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type MerchantPlatformSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId   string                 `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	PlatformType MerchantPlatformType   `protobuf:"varint,3,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	AppId        string                 `protobuf:"bytes,4,opt,name=appId,proto3" json:"appId,omitempty"`                                                   // APPID
	AppSecret    string                 `protobuf:"bytes,5,opt,name=appSecret,proto3" json:"appSecret,omitempty"`                                           // APP秘钥
	Status       MerchantPlatformStatus `protobuf:"varint,6,opt,name=status,proto3,enum=merchant.MerchantPlatformStatus" json:"status,omitempty"`           //  0初始化 1启用 2停用
	CreatedBy    string                 `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                           // 创建者
	UpdatedBy    string                 `protobuf:"bytes,8,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`                                           // 更新者
	CreatedAt    string                 `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                           // 创建时间
	UpdatedAt    string                 `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                          // 最后更新时间
	DeletedAt    string                 `protobuf:"bytes,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                                          // 删除时间
}

func (x *MerchantPlatformSettings) Reset() {
	*x = MerchantPlatformSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantPlatformSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantPlatformSettings) ProtoMessage() {}

func (x *MerchantPlatformSettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantPlatformSettings.ProtoReflect.Descriptor instead.
func (*MerchantPlatformSettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{21}
}

func (x *MerchantPlatformSettings) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantPlatformSettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantPlatformSettings) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *MerchantPlatformSettings) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *MerchantPlatformSettings) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *MerchantPlatformSettings) GetStatus() MerchantPlatformStatus {
	if x != nil {
		return x.Status
	}
	return MerchantPlatformStatus_MerchantPlatformStatus_Init
}

func (x *MerchantPlatformSettings) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MerchantPlatformSettings) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MerchantPlatformSettings) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantPlatformSettings) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MerchantPlatformSettings) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CreatePlatformSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string                 `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	PlatformType MerchantPlatformType   `protobuf:"varint,3,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	AppId        string                 `protobuf:"bytes,4,opt,name=appId,proto3" json:"appId,omitempty"`                                                   // APPID
	AppSecret    string                 `protobuf:"bytes,5,opt,name=appSecret,proto3" json:"appSecret,omitempty"`                                           // APP秘钥
	Status       MerchantPlatformStatus `protobuf:"varint,6,opt,name=status,proto3,enum=merchant.MerchantPlatformStatus" json:"status,omitempty"`           //  0初始化 1启用 2停用
	CreatedBy    string                 `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                           // 创建者
	UpdatedBy    string                 `protobuf:"bytes,8,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`                                           // 更新者
	CreatedAt    string                 `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                           // 创建时间
	UpdatedAt    string                 `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                          // 最后更新时间
	DeletedAt    string                 `protobuf:"bytes,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                                          // 删除时间
}

func (x *CreatePlatformSettingsReq) Reset() {
	*x = CreatePlatformSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformSettingsReq) ProtoMessage() {}

func (x *CreatePlatformSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformSettingsReq.ProtoReflect.Descriptor instead.
func (*CreatePlatformSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{22}
}

func (x *CreatePlatformSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *CreatePlatformSettingsReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetStatus() MerchantPlatformStatus {
	if x != nil {
		return x.Status
	}
	return MerchantPlatformStatus_MerchantPlatformStatus_Init
}

func (x *CreatePlatformSettingsReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CreatePlatformSettingsReq) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CreatePlatformSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantPlatformSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *CreatePlatformSettingsResp) Reset() {
	*x = CreatePlatformSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlatformSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlatformSettingsResp) ProtoMessage() {}

func (x *CreatePlatformSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlatformSettingsResp.ProtoReflect.Descriptor instead.
func (*CreatePlatformSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{23}
}

func (x *CreatePlatformSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreatePlatformSettingsResp) GetSettings() *MerchantPlatformSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdatePlatformSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId   string               `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	PlatformType MerchantPlatformType `protobuf:"varint,3,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	AppId        string               `protobuf:"bytes,4,opt,name=appId,proto3" json:"appId,omitempty"`                                                   // APPID
	AppSecret    string               `protobuf:"bytes,5,opt,name=appSecret,proto3" json:"appSecret,omitempty"`                                           // APP秘钥
}

func (x *UpdatePlatformSettingsReq) Reset() {
	*x = UpdatePlatformSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlatformSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformSettingsReq) ProtoMessage() {}

func (x *UpdatePlatformSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdatePlatformSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{24}
}

func (x *UpdatePlatformSettingsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePlatformSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdatePlatformSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *UpdatePlatformSettingsReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdatePlatformSettingsReq) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

type UpdatePlatformSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Info       *MerchantPlatformSettings `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdatePlatformSettingsResp) Reset() {
	*x = UpdatePlatformSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlatformSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformSettingsResp) ProtoMessage() {}

func (x *UpdatePlatformSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformSettingsResp.ProtoReflect.Descriptor instead.
func (*UpdatePlatformSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{25}
}

func (x *UpdatePlatformSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdatePlatformSettingsResp) GetInfo() *MerchantPlatformSettings {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListPlatformSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string               `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	PlatformType MerchantPlatformType `protobuf:"varint,2,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
}

func (x *ListPlatformSettingsReq) Reset() {
	*x = ListPlatformSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformSettingsReq) ProtoMessage() {}

func (x *ListPlatformSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformSettingsReq.ProtoReflect.Descriptor instead.
func (*ListPlatformSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{26}
}

func (x *ListPlatformSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ListPlatformSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

type ListPlatformSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult                 `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*MerchantPlatformSettings `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination                 `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListPlatformSettingsResp) Reset() {
	*x = ListPlatformSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformSettingsResp) ProtoMessage() {}

func (x *ListPlatformSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformSettingsResp.ProtoReflect.Descriptor instead.
func (*ListPlatformSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{27}
}

func (x *ListPlatformSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListPlatformSettingsResp) GetList() []*MerchantPlatformSettings {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListPlatformSettingsResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MerchantDomainSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId   string               `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	Host         string               `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`                                                     // 访问域名
	Port         int32                `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                                                    // 端口
	PlatformType MerchantPlatformType `protobuf:"varint,5,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	Priority     int32                `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`                                            // 优先级（0-100，优先级越大，使用几率越大）
	Status       MerchantDomainStatus `protobuf:"varint,7,opt,name=status,proto3,enum=merchant.MerchantDomainStatus" json:"status,omitempty"`             //  0初始化 1启用 2停用
	CreatedBy    string               `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                           // 创建者
	UpdatedBy    string               `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`                                           // 更新者
	CreatedAt    string               `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                          // 创建时间
	UpdatedAt    string               `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                          // 最后更新时间
	DeletedAt    string               `protobuf:"bytes,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                                          // 删除时间
}

func (x *MerchantDomainSettings) Reset() {
	*x = MerchantDomainSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDomainSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDomainSettings) ProtoMessage() {}

func (x *MerchantDomainSettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDomainSettings.ProtoReflect.Descriptor instead.
func (*MerchantDomainSettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{28}
}

func (x *MerchantDomainSettings) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantDomainSettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantDomainSettings) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MerchantDomainSettings) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MerchantDomainSettings) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *MerchantDomainSettings) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *MerchantDomainSettings) GetStatus() MerchantDomainStatus {
	if x != nil {
		return x.Status
	}
	return MerchantDomainStatus_MerchantDomainStatus_Init
}

func (x *MerchantDomainSettings) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MerchantDomainSettings) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MerchantDomainSettings) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantDomainSettings) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MerchantDomainSettings) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CreateDomainSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string               `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	Host         string               `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`                                                     // 访问域名
	Port         int32                `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`                                                    // 端口
	PlatformType MerchantPlatformType `protobuf:"varint,4,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	Priority     int32                `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`                                            // 优先级（0-100，优先级越大，使用几率越大）
	Status       MerchantDomainStatus `protobuf:"varint,6,opt,name=status,proto3,enum=merchant.MerchantDomainStatus" json:"status,omitempty"`             //  0初始化 1启用 2停用
	CreatedBy    string               `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                           // 创建者
}

func (x *CreateDomainSettingsReq) Reset() {
	*x = CreateDomainSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainSettingsReq) ProtoMessage() {}

func (x *CreateDomainSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainSettingsReq.ProtoReflect.Descriptor instead.
func (*CreateDomainSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{29}
}

func (x *CreateDomainSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateDomainSettingsReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateDomainSettingsReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateDomainSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *CreateDomainSettingsReq) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateDomainSettingsReq) GetStatus() MerchantDomainStatus {
	if x != nil {
		return x.Status
	}
	return MerchantDomainStatus_MerchantDomainStatus_Init
}

func (x *CreateDomainSettingsReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateDomainSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantDomainSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *CreateDomainSettingsResp) Reset() {
	*x = CreateDomainSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainSettingsResp) ProtoMessage() {}

func (x *CreateDomainSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainSettingsResp.ProtoReflect.Descriptor instead.
func (*CreateDomainSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{30}
}

func (x *CreateDomainSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreateDomainSettingsResp) GetSettings() *MerchantDomainSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateDomainSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId   string               `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	Host         string               `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`                                                     // 访问域名
	Port         int32                `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                                                    // 端口
	PlatformType MerchantPlatformType `protobuf:"varint,5,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
	Priority     int32                `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`                                            // 优先级（0-100，优先级越大，使用几率越大）
	Status       MerchantDomainStatus `protobuf:"varint,7,opt,name=status,proto3,enum=merchant.MerchantDomainStatus" json:"status,omitempty"`             //  0初始化 1启用 2停用
}

func (x *UpdateDomainSettingsReq) Reset() {
	*x = UpdateDomainSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainSettingsReq) ProtoMessage() {}

func (x *UpdateDomainSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateDomainSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateDomainSettingsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDomainSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateDomainSettingsReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateDomainSettingsReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateDomainSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *UpdateDomainSettingsReq) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateDomainSettingsReq) GetStatus() MerchantDomainStatus {
	if x != nil {
		return x.Status
	}
	return MerchantDomainStatus_MerchantDomainStatus_Init
}

type UpdateDomainSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantDomainSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateDomainSettingsResp) Reset() {
	*x = UpdateDomainSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainSettingsResp) ProtoMessage() {}

func (x *UpdateDomainSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainSettingsResp.ProtoReflect.Descriptor instead.
func (*UpdateDomainSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateDomainSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdateDomainSettingsResp) GetSettings() *MerchantDomainSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ListDomainSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   string               `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                         // 商家id
	PlatformType MerchantPlatformType `protobuf:"varint,2,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"` // 平台类型 类型 0-web 1-h5 2-app
}

func (x *ListDomainSettingsReq) Reset() {
	*x = ListDomainSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainSettingsReq) ProtoMessage() {}

func (x *ListDomainSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainSettingsReq.ProtoReflect.Descriptor instead.
func (*ListDomainSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{33}
}

func (x *ListDomainSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ListDomainSettingsReq) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

type ListDomainSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*MerchantDomainSettings `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination               `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListDomainSettingsResp) Reset() {
	*x = ListDomainSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainSettingsResp) ProtoMessage() {}

func (x *ListDomainSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainSettingsResp.ProtoReflect.Descriptor instead.
func (*ListDomainSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{34}
}

func (x *ListDomainSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListDomainSettingsResp) GetList() []*MerchantDomainSettings {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListDomainSettingsResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetDomainSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // 访问域名
	Port   int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`    // 端口
}

func (x *GetDomainSettingsReq) Reset() {
	*x = GetDomainSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomainSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomainSettingsReq) ProtoMessage() {}

func (x *GetDomainSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomainSettingsReq.ProtoReflect.Descriptor instead.
func (*GetDomainSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{35}
}

func (x *GetDomainSettingsReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetDomainSettingsReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetDomainSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantDomainSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetDomainSettingsResp) Reset() {
	*x = GetDomainSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomainSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomainSettingsResp) ProtoMessage() {}

func (x *GetDomainSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomainSettingsResp.ProtoReflect.Descriptor instead.
func (*GetDomainSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{36}
}

func (x *GetDomainSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetDomainSettingsResp) GetSettings() *MerchantDomainSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetMerchantByDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"` // 访问域名
	Port   int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`    // 端口
}

func (x *GetMerchantByDomainReq) Reset() {
	*x = GetMerchantByDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantByDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantByDomainReq) ProtoMessage() {}

func (x *GetMerchantByDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantByDomainReq.ProtoReflect.Descriptor instead.
func (*GetMerchantByDomainReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{37}
}

func (x *GetMerchantByDomainReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetMerchantByDomainReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetMerchantByDomainResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	MerchantId string      `protobuf:"bytes,2,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	AgentId    string      `protobuf:"bytes,3,opt,name=AgentId,proto3" json:"AgentId,omitempty"`
}

func (x *GetMerchantByDomainResp) Reset() {
	*x = GetMerchantByDomainResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantByDomainResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantByDomainResp) ProtoMessage() {}

func (x *GetMerchantByDomainResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantByDomainResp.ProtoReflect.Descriptor instead.
func (*GetMerchantByDomainResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{38}
}

func (x *GetMerchantByDomainResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetMerchantByDomainResp) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *GetMerchantByDomainResp) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type MerchantSecuritySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId                 string                 `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                  // 商家id
	UserType                   MerchantUserType       `protobuf:"varint,3,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"`      // 用户类型 0-系统用户，1-会员
	MaxLoginAttempt            int32                  `protobuf:"varint,4,opt,name=maxLoginAttempt,proto3" json:"maxLoginAttempt,omitempty"`                       // 最大登录尝试次数(用于限制密码错误登录尝试次数)
	LockDuration               int32                  `protobuf:"varint,5,opt,name=lockDuration,proto3" json:"lockDuration,omitempty"`                             // 账户锁定时长（秒）锁定后需要等待多久才能再次尝试登录
	PasswordMinLength          int32                  `protobuf:"varint,6,opt,name=passwordMinLength,proto3" json:"passwordMinLength,omitempty"`                   // 密码最小长度要求
	PasswordComplexity         int32                  `protobuf:"varint,7,opt,name=passwordComplexity,proto3" json:"passwordComplexity,omitempty"`                 // 密码强度（低：无特殊字符，中：包含字母和数字，高：包含特殊字符、大小写字母、数字等）
	EnableCaptcha              int32                  `protobuf:"varint,8,opt,name=enableCaptcha,proto3" json:"enableCaptcha,omitempty"`                           // 是否启用验证码（0：不启用，1：启用）
	CaptchaActivationThreshold int32                  `protobuf:"varint,9,opt,name=captchaActivationThreshold,proto3" json:"captchaActivationThreshold,omitempty"` // 验证码触发阈值，登录失败的次数达到该限制时，启动验证码
	EnableTwoFactor            int32                  `protobuf:"varint,10,opt,name=enableTwoFactor,proto3" json:"enableTwoFactor,omitempty"`                      // 是否启用双因素认证（0：不启用，1：启用）
	Status                     MerchantSecurityStatus `protobuf:"varint,11,opt,name=status,proto3,enum=merchant.MerchantSecurityStatus" json:"status,omitempty"`   //  0初始化 1启用 2停用
	CreatedBy                  string                 `protobuf:"bytes,12,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                   // 创建者
	UpdatedBy                  string                 `protobuf:"bytes,13,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`                                   // 更新者
	CreatedAt                  string                 `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                   // 创建时间
	UpdatedAt                  string                 `protobuf:"bytes,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                   // 最后更新时间
	DeletedAt                  string                 `protobuf:"bytes,16,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                                   // 删除时间
}

func (x *MerchantSecuritySettings) Reset() {
	*x = MerchantSecuritySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantSecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantSecuritySettings) ProtoMessage() {}

func (x *MerchantSecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantSecuritySettings.ProtoReflect.Descriptor instead.
func (*MerchantSecuritySettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{39}
}

func (x *MerchantSecuritySettings) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantSecuritySettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantSecuritySettings) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

func (x *MerchantSecuritySettings) GetMaxLoginAttempt() int32 {
	if x != nil {
		return x.MaxLoginAttempt
	}
	return 0
}

func (x *MerchantSecuritySettings) GetLockDuration() int32 {
	if x != nil {
		return x.LockDuration
	}
	return 0
}

func (x *MerchantSecuritySettings) GetPasswordMinLength() int32 {
	if x != nil {
		return x.PasswordMinLength
	}
	return 0
}

func (x *MerchantSecuritySettings) GetPasswordComplexity() int32 {
	if x != nil {
		return x.PasswordComplexity
	}
	return 0
}

func (x *MerchantSecuritySettings) GetEnableCaptcha() int32 {
	if x != nil {
		return x.EnableCaptcha
	}
	return 0
}

func (x *MerchantSecuritySettings) GetCaptchaActivationThreshold() int32 {
	if x != nil {
		return x.CaptchaActivationThreshold
	}
	return 0
}

func (x *MerchantSecuritySettings) GetEnableTwoFactor() int32 {
	if x != nil {
		return x.EnableTwoFactor
	}
	return 0
}

func (x *MerchantSecuritySettings) GetStatus() MerchantSecurityStatus {
	if x != nil {
		return x.Status
	}
	return MerchantSecurityStatus_MerchantSecurityStatus_Init
}

func (x *MerchantSecuritySettings) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MerchantSecuritySettings) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MerchantSecuritySettings) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantSecuritySettings) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MerchantSecuritySettings) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CreateSecuritySettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId                 string                 `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                  // 商家id
	UserType                   MerchantUserType       `protobuf:"varint,2,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"`      // 用户类型 0-系统用户，1-会员
	MaxLoginAttempt            int32                  `protobuf:"varint,3,opt,name=maxLoginAttempt,proto3" json:"maxLoginAttempt,omitempty"`                       // 最大登录尝试次数(用于限制密码错误登录尝试次数)
	LockDuration               int32                  `protobuf:"varint,4,opt,name=lockDuration,proto3" json:"lockDuration,omitempty"`                             // 账户锁定时长（秒）锁定后需要等待多久才能再次尝试登录
	PasswordMinLength          int32                  `protobuf:"varint,5,opt,name=passwordMinLength,proto3" json:"passwordMinLength,omitempty"`                   // 密码最小长度要求
	PasswordComplexity         int32                  `protobuf:"varint,7,opt,name=passwordComplexity,proto3" json:"passwordComplexity,omitempty"`                 // 密码强度（低：无特殊字符，中：包含字母和数字，高：包含特殊字符、大小写字母、数字等）
	EnableCaptcha              int32                  `protobuf:"varint,8,opt,name=enableCaptcha,proto3" json:"enableCaptcha,omitempty"`                           // 是否启用验证码（0：不启用，1：启用）
	CaptchaActivationThreshold int32                  `protobuf:"varint,9,opt,name=captchaActivationThreshold,proto3" json:"captchaActivationThreshold,omitempty"` // 验证码触发阈值，登录失败的次数达到该限制时，启动验证码
	EnableTwoFactor            int32                  `protobuf:"varint,10,opt,name=enableTwoFactor,proto3" json:"enableTwoFactor,omitempty"`                      // 是否启用双因素认证（0：不启用，1：启用）
	Status                     MerchantSecurityStatus `protobuf:"varint,11,opt,name=status,proto3,enum=merchant.MerchantSecurityStatus" json:"status,omitempty"`   //  0初始化 1启用 2停用
	CreatedBy                  string                 `protobuf:"bytes,12,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                   // 创建者
}

func (x *CreateSecuritySettingsReq) Reset() {
	*x = CreateSecuritySettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecuritySettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecuritySettingsReq) ProtoMessage() {}

func (x *CreateSecuritySettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecuritySettingsReq.ProtoReflect.Descriptor instead.
func (*CreateSecuritySettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{40}
}

func (x *CreateSecuritySettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateSecuritySettingsReq) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

func (x *CreateSecuritySettingsReq) GetMaxLoginAttempt() int32 {
	if x != nil {
		return x.MaxLoginAttempt
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetLockDuration() int32 {
	if x != nil {
		return x.LockDuration
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetPasswordMinLength() int32 {
	if x != nil {
		return x.PasswordMinLength
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetPasswordComplexity() int32 {
	if x != nil {
		return x.PasswordComplexity
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetEnableCaptcha() int32 {
	if x != nil {
		return x.EnableCaptcha
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetCaptchaActivationThreshold() int32 {
	if x != nil {
		return x.CaptchaActivationThreshold
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetEnableTwoFactor() int32 {
	if x != nil {
		return x.EnableTwoFactor
	}
	return 0
}

func (x *CreateSecuritySettingsReq) GetStatus() MerchantSecurityStatus {
	if x != nil {
		return x.Status
	}
	return MerchantSecurityStatus_MerchantSecurityStatus_Init
}

func (x *CreateSecuritySettingsReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateSecuritySettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantSecuritySettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *CreateSecuritySettingsResp) Reset() {
	*x = CreateSecuritySettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecuritySettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecuritySettingsResp) ProtoMessage() {}

func (x *CreateSecuritySettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecuritySettingsResp.ProtoReflect.Descriptor instead.
func (*CreateSecuritySettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{41}
}

func (x *CreateSecuritySettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreateSecuritySettingsResp) GetSettings() *MerchantSecuritySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ListSecuritySettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string           `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                             // 商家id
	UserType   MerchantUserType `protobuf:"varint,2,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"` // 用户类型 0-系统用户，1-会员
}

func (x *ListSecuritySettingsReq) Reset() {
	*x = ListSecuritySettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecuritySettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecuritySettingsReq) ProtoMessage() {}

func (x *ListSecuritySettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecuritySettingsReq.ProtoReflect.Descriptor instead.
func (*ListSecuritySettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{42}
}

func (x *ListSecuritySettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ListSecuritySettingsReq) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

type ListSecuritySettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult                 `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*MerchantSecuritySettings `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination                 `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListSecuritySettingsResp) Reset() {
	*x = ListSecuritySettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecuritySettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecuritySettingsResp) ProtoMessage() {}

func (x *ListSecuritySettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecuritySettingsResp.ProtoReflect.Descriptor instead.
func (*ListSecuritySettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{43}
}

func (x *ListSecuritySettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListSecuritySettingsResp) GetList() []*MerchantSecuritySettings {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListSecuritySettingsResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type UpdateSecuritySettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId                 string                 `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                  // 商家id
	UserType                   MerchantUserType       `protobuf:"varint,3,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"`      // 用户类型 0-系统用户，1-会员
	MaxLoginAttempt            int32                  `protobuf:"varint,4,opt,name=maxLoginAttempt,proto3" json:"maxLoginAttempt,omitempty"`                       // 最大登录尝试次数(用于限制密码错误登录尝试次数)
	LockDuration               int32                  `protobuf:"varint,5,opt,name=lockDuration,proto3" json:"lockDuration,omitempty"`                             // 账户锁定时长（秒）锁定后需要等待多久才能再次尝试登录
	PasswordMinLength          int32                  `protobuf:"varint,6,opt,name=passwordMinLength,proto3" json:"passwordMinLength,omitempty"`                   // 密码最小长度要求
	PasswordComplexity         int32                  `protobuf:"varint,7,opt,name=passwordComplexity,proto3" json:"passwordComplexity,omitempty"`                 // 密码强度（低：无特殊字符，中：包含字母和数字，高：包含特殊字符、大小写字母、数字等）
	EnableCaptcha              int32                  `protobuf:"varint,8,opt,name=enableCaptcha,proto3" json:"enableCaptcha,omitempty"`                           // 是否启用验证码（0：不启用，1：启用）
	CaptchaActivationThreshold int32                  `protobuf:"varint,9,opt,name=captchaActivationThreshold,proto3" json:"captchaActivationThreshold,omitempty"` // 验证码触发阈值，登录失败的次数达到该限制时，启动验证码
	EnableTwoFactor            int32                  `protobuf:"varint,10,opt,name=enableTwoFactor,proto3" json:"enableTwoFactor,omitempty"`                      // 是否启用双因素认证（0：不启用，1：启用）
	Status                     MerchantSecurityStatus `protobuf:"varint,11,opt,name=status,proto3,enum=merchant.MerchantSecurityStatus" json:"status,omitempty"`   //  0初始化 1启用 2停用
}

func (x *UpdateSecuritySettingsReq) Reset() {
	*x = UpdateSecuritySettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecuritySettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecuritySettingsReq) ProtoMessage() {}

func (x *UpdateSecuritySettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecuritySettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateSecuritySettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateSecuritySettingsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateSecuritySettingsReq) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

func (x *UpdateSecuritySettingsReq) GetMaxLoginAttempt() int32 {
	if x != nil {
		return x.MaxLoginAttempt
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetLockDuration() int32 {
	if x != nil {
		return x.LockDuration
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetPasswordMinLength() int32 {
	if x != nil {
		return x.PasswordMinLength
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetPasswordComplexity() int32 {
	if x != nil {
		return x.PasswordComplexity
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetEnableCaptcha() int32 {
	if x != nil {
		return x.EnableCaptcha
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetCaptchaActivationThreshold() int32 {
	if x != nil {
		return x.CaptchaActivationThreshold
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetEnableTwoFactor() int32 {
	if x != nil {
		return x.EnableTwoFactor
	}
	return 0
}

func (x *UpdateSecuritySettingsReq) GetStatus() MerchantSecurityStatus {
	if x != nil {
		return x.Status
	}
	return MerchantSecurityStatus_MerchantSecurityStatus_Init
}

type UpdateSecuritySettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantSecuritySettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateSecuritySettingsResp) Reset() {
	*x = UpdateSecuritySettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecuritySettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecuritySettingsResp) ProtoMessage() {}

func (x *UpdateSecuritySettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecuritySettingsResp.ProtoReflect.Descriptor instead.
func (*UpdateSecuritySettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateSecuritySettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdateSecuritySettingsResp) GetSettings() *MerchantSecuritySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type MerchantAccessSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId      string                            `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                                                             // 商家id
	UserType        MerchantUserType                  `protobuf:"varint,3,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"`                                 // 用户类型 0-系统用户，1-会员
	UserId          int64                             `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`                                                                    // 用户id
	MemberGroups    string                            `protobuf:"bytes,5,opt,name=memberGroups,proto3" json:"memberGroups,omitempty"`                                                         // 会员组列表
	MemberTags      string                            `protobuf:"bytes,6,opt,name=memberTags,proto3" json:"memberTags,omitempty"`                                                             // 会员标签列表
	IpAddress       string                            `protobuf:"bytes,7,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`                                                               // 限制的IP地址
	DeviceType      string                            `protobuf:"bytes,8,opt,name=deviceType,proto3" json:"deviceType,omitempty"`                                                             // 设备类型，限制某种设备的访问
	PlatformType    MerchantPlatformType              `protobuf:"varint,9,opt,name=platformType,proto3,enum=merchant.MerchantPlatformType" json:"platformType,omitempty"`                     // 限制平台类型 类型 0-web 1-h5 2-app
	RestrictionType MerchantUserAccessRestrictionType `protobuf:"varint,10,opt,name=restrictionType,proto3,enum=merchant.MerchantUserAccessRestrictionType" json:"restrictionType,omitempty"` // 限制类型 0-访问限制，1-访问阻止
	Reason          string                            `protobuf:"bytes,11,opt,name=reason,proto3" json:"reason,omitempty"`                                                                    // 限制的原因
	StartTime       string                            `protobuf:"bytes,12,opt,name=startTime,proto3" json:"startTime,omitempty"`                                                              // 限制开始时间
	EndTime         string                            `protobuf:"bytes,13,opt,name=endTime,proto3" json:"endTime,omitempty"`                                                                  // 限制结束时间
	Status          int32                             `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`                                                                   //  0初始化 1启用 2停用
	CreatedBy       string                            `protobuf:"bytes,15,opt,name=createdBy,proto3" json:"createdBy,omitempty"`                                                              // 创建者
}

func (x *MerchantAccessSettings) Reset() {
	*x = MerchantAccessSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantAccessSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantAccessSettings) ProtoMessage() {}

func (x *MerchantAccessSettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantAccessSettings.ProtoReflect.Descriptor instead.
func (*MerchantAccessSettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{46}
}

func (x *MerchantAccessSettings) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantAccessSettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantAccessSettings) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

func (x *MerchantAccessSettings) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantAccessSettings) GetMemberGroups() string {
	if x != nil {
		return x.MemberGroups
	}
	return ""
}

func (x *MerchantAccessSettings) GetMemberTags() string {
	if x != nil {
		return x.MemberTags
	}
	return ""
}

func (x *MerchantAccessSettings) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *MerchantAccessSettings) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *MerchantAccessSettings) GetPlatformType() MerchantPlatformType {
	if x != nil {
		return x.PlatformType
	}
	return MerchantPlatformType_MerchantPlatformType_Web
}

func (x *MerchantAccessSettings) GetRestrictionType() MerchantUserAccessRestrictionType {
	if x != nil {
		return x.RestrictionType
	}
	return MerchantUserAccessRestrictionType_MerchantUserAccessRestrictionType_Access
}

func (x *MerchantAccessSettings) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MerchantAccessSettings) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MerchantAccessSettings) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MerchantAccessSettings) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MerchantAccessSettings) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateAccessSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId      string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`             // 商家id
	UserType        int32  `protobuf:"varint,3,opt,name=userType,proto3" json:"userType,omitempty"`                // 用户类型 0-系统用户，1-会员
	UserId          string `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`                     // 用户id
	MemberGroups    string `protobuf:"bytes,5,opt,name=memberGroups,proto3" json:"memberGroups,omitempty"`         // 会员组列表
	MemberTags      string `protobuf:"bytes,6,opt,name=memberTags,proto3" json:"memberTags,omitempty"`             // 会员标签列表
	IpAddress       string `protobuf:"bytes,7,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`               // 限制的IP地址
	DeviceType      string `protobuf:"bytes,8,opt,name=deviceType,proto3" json:"deviceType,omitempty"`             // 设备类型，限制某种设备的访问
	PlatformType    int32  `protobuf:"varint,9,opt,name=platformType,proto3" json:"platformType,omitempty"`        // 限制平台类型 类型 0-web 1-h5 2-app
	RestrictionType int32  `protobuf:"varint,10,opt,name=restrictionType,proto3" json:"restrictionType,omitempty"` // 限制类型 0-访问限制，1-访问阻止
	Reason          string `protobuf:"bytes,11,opt,name=reason,proto3" json:"reason,omitempty"`                    // 限制的原因
	StartTime       string `protobuf:"bytes,12,opt,name=startTime,proto3" json:"startTime,omitempty"`              // 限制开始时间
	EndTime         string `protobuf:"bytes,13,opt,name=endTime,proto3" json:"endTime,omitempty"`                  // 限制结束时间
	Status          int32  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`                   //  0初始化 1启用 2停用
	CreatedBy       string `protobuf:"bytes,15,opt,name=createdBy,proto3" json:"createdBy,omitempty"`              // 创建者
	UpdatedBy       string `protobuf:"bytes,16,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`              // 更新者
	CreatedAt       string `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`              // 创建时间
	UpdatedAt       string `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`              // 最后更新时间
	DeletedAt       string `protobuf:"bytes,19,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`              // 删除时间
}

func (x *CreateAccessSettingsReq) Reset() {
	*x = CreateAccessSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessSettingsReq) ProtoMessage() {}

func (x *CreateAccessSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessSettingsReq.ProtoReflect.Descriptor instead.
func (*CreateAccessSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{47}
}

func (x *CreateAccessSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *CreateAccessSettingsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetMemberGroups() string {
	if x != nil {
		return x.MemberGroups
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetMemberTags() string {
	if x != nil {
		return x.MemberTags
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetPlatformType() int32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *CreateAccessSettingsReq) GetRestrictionType() int32 {
	if x != nil {
		return x.RestrictionType
	}
	return 0
}

func (x *CreateAccessSettingsReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateAccessSettingsReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CreateAccessSettingsReq) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CreateAccessSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Settings   *MerchantAccessSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *CreateAccessSettingsResp) Reset() {
	*x = CreateAccessSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessSettingsResp) ProtoMessage() {}

func (x *CreateAccessSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessSettingsResp.ProtoReflect.Descriptor instead.
func (*CreateAccessSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{48}
}

func (x *CreateAccessSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreateAccessSettingsResp) GetSettings() *MerchantAccessSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateAccessSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId      string           `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                             // 商家id
	UserType        MerchantUserType `protobuf:"varint,3,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"` // 用户类型 0-系统用户，1-会员
	UserId          string           `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`                                     // 用户id
	MemberGroups    string           `protobuf:"bytes,5,opt,name=memberGroups,proto3" json:"memberGroups,omitempty"`                         // 会员组列表
	MemberTags      string           `protobuf:"bytes,6,opt,name=memberTags,proto3" json:"memberTags,omitempty"`                             // 会员标签列表
	IpAddress       string           `protobuf:"bytes,7,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`                               // 限制的IP地址
	DeviceType      string           `protobuf:"bytes,8,opt,name=deviceType,proto3" json:"deviceType,omitempty"`                             // 设备类型，限制某种设备的访问
	PlatformType    int32            `protobuf:"varint,9,opt,name=platformType,proto3" json:"platformType,omitempty"`                        // 限制平台类型 类型 0-web 1-h5 2-app
	RestrictionType int32            `protobuf:"varint,10,opt,name=restrictionType,proto3" json:"restrictionType,omitempty"`                 // 限制类型 0-访问限制，1-访问阻止
	Reason          string           `protobuf:"bytes,11,opt,name=reason,proto3" json:"reason,omitempty"`                                    // 限制的原因
	StartTime       string           `protobuf:"bytes,12,opt,name=startTime,proto3" json:"startTime,omitempty"`                              // 限制开始时间
	EndTime         string           `protobuf:"bytes,13,opt,name=endTime,proto3" json:"endTime,omitempty"`                                  // 限制结束时间
	Status          int32            `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`                                   //  0初始化 1启用 2停用
}

func (x *UpdateAccessSettingsReq) Reset() {
	*x = UpdateAccessSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccessSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessSettingsReq) ProtoMessage() {}

func (x *UpdateAccessSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateAccessSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateAccessSettingsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAccessSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

func (x *UpdateAccessSettingsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetMemberGroups() string {
	if x != nil {
		return x.MemberGroups
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetMemberTags() string {
	if x != nil {
		return x.MemberTags
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetPlatformType() int32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *UpdateAccessSettingsReq) GetRestrictionType() int32 {
	if x != nil {
		return x.RestrictionType
	}
	return 0
}

func (x *UpdateAccessSettingsReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateAccessSettingsReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateAccessSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Info       *MerchantAccessSettings `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateAccessSettingsResp) Reset() {
	*x = UpdateAccessSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccessSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessSettingsResp) ProtoMessage() {}

func (x *UpdateAccessSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessSettingsResp.ProtoReflect.Descriptor instead.
func (*UpdateAccessSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateAccessSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdateAccessSettingsResp) GetInfo() *MerchantAccessSettings {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListAccessSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64            `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                            // 商家id
	UserType   MerchantUserType `protobuf:"varint,2,opt,name=userType,proto3,enum=merchant.MerchantUserType" json:"userType,omitempty"` // 用户类型 0-系统用户，1-会员
}

func (x *ListAccessSettingsReq) Reset() {
	*x = ListAccessSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessSettingsReq) ProtoMessage() {}

func (x *ListAccessSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessSettingsReq.ProtoReflect.Descriptor instead.
func (*ListAccessSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{51}
}

func (x *ListAccessSettingsReq) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *ListAccessSettingsReq) GetUserType() MerchantUserType {
	if x != nil {
		return x.UserType
	}
	return MerchantUserType_MerchantUserType_System
}

type ListAccessSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult               `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*MerchantAccessSettings `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination               `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccessSettingsResp) Reset() {
	*x = ListAccessSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccessSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessSettingsResp) ProtoMessage() {}

func (x *ListAccessSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessSettingsResp.ProtoReflect.Descriptor instead.
func (*ListAccessSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{52}
}

func (x *ListAccessSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListAccessSettingsResp) GetList() []*MerchantAccessSettings {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListAccessSettingsResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MerchantGameSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId     string `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`          // 商家ID
	GameCategoryId int64  `protobuf:"varint,3,opt,name=gameCategoryId,proto3" json:"gameCategoryId,omitempty"` // 游戏分类id
	GameTypeId     int64  `protobuf:"varint,4,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`         // 游戏类型id
	GameId         int64  `protobuf:"varint,5,opt,name=gameId,proto3" json:"gameId,omitempty"`                 // 游戏id
	Status         int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                 //  0停用 1启用
	Weight         int32  `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`                 //权重
	CreatedBy      string `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`            // 创建者
	UpdatedBy      string `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`            // 更新者
	CreatedAt      string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`           // 创建时间
	UpdatedAt      string `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`           // 最后更新时间
}

func (x *MerchantGameSettings) Reset() {
	*x = MerchantGameSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantGameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantGameSettings) ProtoMessage() {}

func (x *MerchantGameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantGameSettings.ProtoReflect.Descriptor instead.
func (*MerchantGameSettings) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{53}
}

func (x *MerchantGameSettings) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantGameSettings) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *MerchantGameSettings) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *MerchantGameSettings) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *MerchantGameSettings) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MerchantGameSettings) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MerchantGameSettings) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *MerchantGameSettings) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MerchantGameSettings) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *MerchantGameSettings) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantGameSettings) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateGameSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId     string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`          // 商家ID
	GameCategoryId int64  `protobuf:"varint,2,opt,name=gameCategoryId,proto3" json:"gameCategoryId,omitempty"` // 游戏分类id
	GameTypeId     int64  `protobuf:"varint,3,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`         // 游戏类型id
	GameId         int64  `protobuf:"varint,4,opt,name=gameId,proto3" json:"gameId,omitempty"`                 // 游戏id
	Status         int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                 //  0停用 1启用
	Weight         int32  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`                 //权重
	CreatedBy      string `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`            // 创建者
}

func (x *CreateGameSettingsReq) Reset() {
	*x = CreateGameSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameSettingsReq) ProtoMessage() {}

func (x *CreateGameSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameSettingsReq.ProtoReflect.Descriptor instead.
func (*CreateGameSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{54}
}

func (x *CreateGameSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateGameSettingsReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *CreateGameSettingsReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

func (x *CreateGameSettingsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *CreateGameSettingsReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateGameSettingsReq) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateGameSettingsReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateGameSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
}

func (x *CreateGameSettingsResp) Reset() {
	*x = CreateGameSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameSettingsResp) ProtoMessage() {}

func (x *CreateGameSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameSettingsResp.ProtoReflect.Descriptor instead.
func (*CreateGameSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{55}
}

func (x *CreateGameSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

type ListGameSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId     string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`          // 商家ID
	GameCategoryId int64  `protobuf:"varint,2,opt,name=gameCategoryId,proto3" json:"gameCategoryId,omitempty"` // 游戏分类id
	GameTypeId     int64  `protobuf:"varint,3,opt,name=gameTypeId,proto3" json:"gameTypeId,omitempty"`         // 游戏类型id
}

func (x *ListGameSettingsReq) Reset() {
	*x = ListGameSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameSettingsReq) ProtoMessage() {}

func (x *ListGameSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameSettingsReq.ProtoReflect.Descriptor instead.
func (*ListGameSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{56}
}

func (x *ListGameSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ListGameSettingsReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *ListGameSettingsReq) GetGameTypeId() int64 {
	if x != nil {
		return x.GameTypeId
	}
	return 0
}

type ListGameSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult             `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*MerchantGameSettings `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListGameSettingsResp) Reset() {
	*x = ListGameSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameSettingsResp) ProtoMessage() {}

func (x *ListGameSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameSettingsResp.ProtoReflect.Descriptor instead.
func (*ListGameSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{57}
}

func (x *ListGameSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListGameSettingsResp) GetList() []*MerchantGameSettings {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateGameSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId     string `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"`          // 商家ID
	GameCategoryId int64  `protobuf:"varint,3,opt,name=gameCategoryId,proto3" json:"gameCategoryId,omitempty"` // 游戏分类id
}

func (x *UpdateGameSettingsReq) Reset() {
	*x = UpdateGameSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameSettingsReq) ProtoMessage() {}

func (x *UpdateGameSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateGameSettingsReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateGameSettingsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGameSettingsReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateGameSettingsReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

type UpdateGameSettingsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult           `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Info       *MerchantGameSettings `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateGameSettingsResp) Reset() {
	*x = UpdateGameSettingsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameSettingsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameSettingsResp) ProtoMessage() {}

func (x *UpdateGameSettingsResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameSettingsResp.ProtoReflect.Descriptor instead.
func (*UpdateGameSettingsResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateGameSettingsResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdateGameSettingsResp) GetInfo() *MerchantGameSettings {
	if x != nil {
		return x.Info
	}
	return nil
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string      `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`                    // 商家ID
	AgentId    string      `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`                          // 代理ID
	Name       string      `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                                // 代理名称
	Avatar     string      `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`                            // 头像
	Phone      string      `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                              // 手机号
	Email      string      `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                              // 邮箱
	Status     AgentStatus `protobuf:"varint,7,opt,name=status,proto3,enum=merchant.AgentStatus" json:"status,omitempty"` // 状态 0初始化 1启用 2停用
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{60}
}

func (x *Agent) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Agent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Agent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Agent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Agent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AgentStatus_Init
}

type CreateAgentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId    string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"`       // 商家ID
	DirectAgentId string `protobuf:"bytes,2,opt,name=directAgentId,proto3" json:"directAgentId,omitempty"` // 直属代理ID
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                   // 代理名称
	Avatar        string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`               // 头像
	Phone         string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                 // 手机号
	Email         string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                 // 邮箱
}

func (x *CreateAgentReq) Reset() {
	*x = CreateAgentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentReq) ProtoMessage() {}

func (x *CreateAgentReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentReq.ProtoReflect.Descriptor instead.
func (*CreateAgentReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{61}
}

func (x *CreateAgentReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateAgentReq) GetDirectAgentId() string {
	if x != nil {
		return x.DirectAgentId
	}
	return ""
}

func (x *CreateAgentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAgentReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateAgentReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAgentReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateAgentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Info       *Agent      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateAgentResp) Reset() {
	*x = CreateAgentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentResp) ProtoMessage() {}

func (x *CreateAgentResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentResp.ProtoReflect.Descriptor instead.
func (*CreateAgentResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{62}
}

func (x *CreateAgentResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *CreateAgentResp) GetInfo() *Agent {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAgentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    string `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`       // 代理ID
	MerchantId string `protobuf:"bytes,2,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`             // 代理名称
	Avatar     string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`         // 头像
	Phone      string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号
	Email      string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`           // 邮箱
}

func (x *UpdateAgentReq) Reset() {
	*x = UpdateAgentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentReq) ProtoMessage() {}

func (x *UpdateAgentReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentReq.ProtoReflect.Descriptor instead.
func (*UpdateAgentReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateAgentReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UpdateAgentReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UpdateAgentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAgentReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateAgentReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateAgentReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateAgentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Info       *Agent      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateAgentResp) Reset() {
	*x = UpdateAgentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentResp) ProtoMessage() {}

func (x *UpdateAgentResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentResp.ProtoReflect.Descriptor instead.
func (*UpdateAgentResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateAgentResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *UpdateAgentResp) GetInfo() *Agent {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListAgentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
	AgentId    string `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`       // 代理ID
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`             // 代理名称
	Avatar     string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`         // 头像
	Phone      string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号
	Email      string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`           // 邮箱
}

func (x *ListAgentReq) Reset() {
	*x = ListAgentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentReq) ProtoMessage() {}

func (x *ListAgentReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentReq.ProtoReflect.Descriptor instead.
func (*ListAgentReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{65}
}

func (x *ListAgentReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ListAgentReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListAgentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAgentReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ListAgentReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ListAgentReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ListAgentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	List       []*Agent    `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Pagination *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAgentResp) Reset() {
	*x = ListAgentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentResp) ProtoMessage() {}

func (x *ListAgentResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentResp.ProtoReflect.Descriptor instead.
func (*ListAgentResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{66}
}

func (x *ListAgentResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *ListAgentResp) GetList() []*Agent {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListAgentResp) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAgentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
	AgentId    string `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`       // 代理ID
}

func (x *GetAgentReq) Reset() {
	*x = GetAgentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentReq) ProtoMessage() {}

func (x *GetAgentReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentReq.ProtoReflect.Descriptor instead.
func (*GetAgentReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{67}
}

func (x *GetAgentReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *GetAgentReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type GetAgentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Agent      *Agent      `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *GetAgentResp) Reset() {
	*x = GetAgentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResp) ProtoMessage() {}

func (x *GetAgentResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResp.ProtoReflect.Descriptor instead.
func (*GetAgentResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{68}
}

func (x *GetAgentResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetAgentResp) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type CreateAgentDividendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAgentDividendReq) Reset() {
	*x = CreateAgentDividendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDividendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDividendReq) ProtoMessage() {}

func (x *CreateAgentDividendReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDividendReq.ProtoReflect.Descriptor instead.
func (*CreateAgentDividendReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{69}
}

type CreateAgentDividendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAgentDividendResp) Reset() {
	*x = CreateAgentDividendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDividendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDividendResp) ProtoMessage() {}

func (x *CreateAgentDividendResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDividendResp.ProtoReflect.Descriptor instead.
func (*CreateAgentDividendResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{70}
}

type UpdateAgentDividendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAgentDividendReq) Reset() {
	*x = UpdateAgentDividendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentDividendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentDividendReq) ProtoMessage() {}

func (x *UpdateAgentDividendReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentDividendReq.ProtoReflect.Descriptor instead.
func (*UpdateAgentDividendReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{71}
}

type UpdateAgentDividendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAgentDividendResp) Reset() {
	*x = UpdateAgentDividendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentDividendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentDividendResp) ProtoMessage() {}

func (x *UpdateAgentDividendResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentDividendResp.ProtoReflect.Descriptor instead.
func (*UpdateAgentDividendResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{72}
}

type ListAgentDividendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAgentDividendReq) Reset() {
	*x = ListAgentDividendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDividendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDividendReq) ProtoMessage() {}

func (x *ListAgentDividendReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDividendReq.ProtoReflect.Descriptor instead.
func (*ListAgentDividendReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{73}
}

type ListAgentDividendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAgentDividendResp) Reset() {
	*x = ListAgentDividendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDividendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDividendResp) ProtoMessage() {}

func (x *ListAgentDividendResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDividendResp.ProtoReflect.Descriptor instead.
func (*ListAgentDividendResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{74}
}

type GetAgentDividendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentDividendReq) Reset() {
	*x = GetAgentDividendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentDividendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentDividendReq) ProtoMessage() {}

func (x *GetAgentDividendReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentDividendReq.ProtoReflect.Descriptor instead.
func (*GetAgentDividendReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{75}
}

type GetAgentDividendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentDividendResp) Reset() {
	*x = GetAgentDividendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentDividendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentDividendResp) ProtoMessage() {}

func (x *GetAgentDividendResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentDividendResp.ProtoReflect.Descriptor instead.
func (*GetAgentDividendResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{76}
}

type CreateAgentSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAgentSettlementReq) Reset() {
	*x = CreateAgentSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentSettlementReq) ProtoMessage() {}

func (x *CreateAgentSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentSettlementReq.ProtoReflect.Descriptor instead.
func (*CreateAgentSettlementReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{77}
}

type CreateAgentSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAgentSettlementResp) Reset() {
	*x = CreateAgentSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentSettlementResp) ProtoMessage() {}

func (x *CreateAgentSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentSettlementResp.ProtoReflect.Descriptor instead.
func (*CreateAgentSettlementResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{78}
}

type UpdateAgentSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAgentSettlementReq) Reset() {
	*x = UpdateAgentSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentSettlementReq) ProtoMessage() {}

func (x *UpdateAgentSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentSettlementReq.ProtoReflect.Descriptor instead.
func (*UpdateAgentSettlementReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{79}
}

type UpdateAgentSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAgentSettlementResp) Reset() {
	*x = UpdateAgentSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentSettlementResp) ProtoMessage() {}

func (x *UpdateAgentSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentSettlementResp.ProtoReflect.Descriptor instead.
func (*UpdateAgentSettlementResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{80}
}

type ListAgentSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAgentSettlementReq) Reset() {
	*x = ListAgentSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentSettlementReq) ProtoMessage() {}

func (x *ListAgentSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentSettlementReq.ProtoReflect.Descriptor instead.
func (*ListAgentSettlementReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{81}
}

type ListAgentSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAgentSettlementResp) Reset() {
	*x = ListAgentSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentSettlementResp) ProtoMessage() {}

func (x *ListAgentSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentSettlementResp.ProtoReflect.Descriptor instead.
func (*ListAgentSettlementResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{82}
}

type GetAgentSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentSettlementReq) Reset() {
	*x = GetAgentSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentSettlementReq) ProtoMessage() {}

func (x *GetAgentSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentSettlementReq.ProtoReflect.Descriptor instead.
func (*GetAgentSettlementReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{83}
}

type GetAgentSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentSettlementResp) Reset() {
	*x = GetAgentSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentSettlementResp) ProtoMessage() {}

func (x *GetAgentSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentSettlementResp.ProtoReflect.Descriptor instead.
func (*GetAgentSettlementResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{84}
}

type MemberMigrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MemberMigrationReq) Reset() {
	*x = MemberMigrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberMigrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberMigrationReq) ProtoMessage() {}

func (x *MemberMigrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberMigrationReq.ProtoReflect.Descriptor instead.
func (*MemberMigrationReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{85}
}

type MemberMigrationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MemberMigrationResp) Reset() {
	*x = MemberMigrationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberMigrationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberMigrationResp) ProtoMessage() {}

func (x *MemberMigrationResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberMigrationResp.ProtoReflect.Descriptor instead.
func (*MemberMigrationResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{86}
}

type MemberMigrationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MemberMigrationListReq) Reset() {
	*x = MemberMigrationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberMigrationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberMigrationListReq) ProtoMessage() {}

func (x *MemberMigrationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberMigrationListReq.ProtoReflect.Descriptor instead.
func (*MemberMigrationListReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{87}
}

type MemberMigrationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MemberMigrationListResp) Reset() {
	*x = MemberMigrationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberMigrationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberMigrationListResp) ProtoMessage() {}

func (x *MemberMigrationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberMigrationListResp.ProtoReflect.Descriptor instead.
func (*MemberMigrationListResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{88}
}

type GetAgentByInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchantId,proto3" json:"merchantId,omitempty"` // 商家ID
	InviteCode string `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"` // 邀请码
}

func (x *GetAgentByInviteCodeReq) Reset() {
	*x = GetAgentByInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentByInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentByInviteCodeReq) ProtoMessage() {}

func (x *GetAgentByInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentByInviteCodeReq.ProtoReflect.Descriptor instead.
func (*GetAgentByInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{89}
}

func (x *GetAgentByInviteCodeReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *GetAgentByInviteCodeReq) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type GetAgentByInviteCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResult *BaseResult `protobuf:"bytes,1,opt,name=baseResult,proto3" json:"baseResult,omitempty"`
	Agent      *Agent      `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *GetAgentByInviteCodeResp) Reset() {
	*x = GetAgentByInviteCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentByInviteCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentByInviteCodeResp) ProtoMessage() {}

func (x *GetAgentByInviteCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentByInviteCodeResp.ProtoReflect.Descriptor instead.
func (*GetAgentByInviteCodeResp) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{90}
}

func (x *GetAgentByInviteCodeResp) GetBaseResult() *BaseResult {
	if x != nil {
		return x.BaseResult
	}
	return nil
}

func (x *GetAgentByInviteCodeResp) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

var File_merchant_proto protoreflect.FileDescriptor

var file_merchant_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x0a, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb3, 0x01, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xaa, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x8b, 0x01, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x49, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x4e, 0x0a, 0x16, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x3c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x8f, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0xb3, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x92, 0x03, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x83, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xc3, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x7d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x9e, 0x03, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x8e, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x89,
	0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x7b, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x89, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x05, 0x0a, 0x18, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x12, 0x3e, 0x0a, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x87, 0x04, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x12, 0x3e, 0x0a, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x77, 0x6f, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf9, 0x03,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61,
	0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x69, 0x6e,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x2e, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x3e, 0x0a, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xbb,
	0x04, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x55, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xbb, 0x04, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xd1, 0x03, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x86, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x4e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x7d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x6f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xc8, 0x01, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x6c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x6c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22,
	0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x19, 0x0a, 0x17, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2a, 0x3c, 0x0a, 0x0c, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x65, 0x6c, 0x66, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x01, 0x2a, 0x61, 0x0a, 0x0e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x69,
	0x74, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x2a, 0x6f, 0x0a, 0x14, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x57, 0x65, 0x62, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x48, 0x35, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x70, 0x70, 0x10, 0x02, 0x2a, 0x80, 0x01, 0x0a,
	0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x2a,
	0x81, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x23,
	0x0a, 0x1f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x10, 0x02, 0x2a, 0x78, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x4c, 0x0a,
	0x10, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x7e, 0x0a, 0x21, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2c, 0x0a, 0x28, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x2b,
	0x0a, 0x27, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x01, 0x2a, 0x50, 0x0a, 0x09, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x02, 0x2a, 0x55, 0x0a,
	0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x69, 0x74,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x02, 0x32, 0xf3, 0x1c, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x49, 0x6e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12,
	0x1f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0c, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x6f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x66, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x63, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x51, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_merchant_proto_rawDescOnce sync.Once
	file_merchant_proto_rawDescData = file_merchant_proto_rawDesc
)

func file_merchant_proto_rawDescGZIP() []byte {
	file_merchant_proto_rawDescOnce.Do(func() {
		file_merchant_proto_rawDescData = protoimpl.X.CompressGZIP(file_merchant_proto_rawDescData)
	})
	return file_merchant_proto_rawDescData
}

var file_merchant_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_merchant_proto_msgTypes = make([]protoimpl.MessageInfo, 91)
var file_merchant_proto_goTypes = []any{
	(MerchantType)(0),                      // 0: merchant.MerchantType
	(MerchantStatus)(0),                    // 1: merchant.MerchantStatus
	(MerchantPlatformType)(0),              // 2: merchant.MerchantPlatformType
	(MerchantPlatformStatus)(0),            // 3: merchant.MerchantPlatformStatus
	(MerchantSecurityStatus)(0),            // 4: merchant.MerchantSecurityStatus
	(MerchantDomainStatus)(0),              // 5: merchant.MerchantDomainStatus
	(MerchantUserType)(0),                  // 6: merchant.MerchantUserType
	(MerchantUserAccessRestrictionType)(0), // 7: merchant.MerchantUserAccessRestrictionType
	(AgentType)(0),                         // 8: merchant.AgentType
	(AgentStatus)(0),                       // 9: merchant.AgentStatus
	(*BaseResult)(nil),                     // 10: merchant.BaseResult
	(*Pagination)(nil),                     // 11: merchant.Pagination
	(*CommonModel)(nil),                    // 12: merchant.CommonModel
	(*Merchant)(nil),                       // 13: merchant.Merchant
	(*MerchantBaseSettings)(nil),           // 14: merchant.MerchantBaseSettings
	(*CreateMerchantReq)(nil),              // 15: merchant.CreateMerchantReq
	(*UpdateMerchantReq)(nil),              // 16: merchant.UpdateMerchantReq
	(*UpdateMerchantStatusReq)(nil),        // 17: merchant.UpdateMerchantStatusReq
	(*GetMerchantReq)(nil),                 // 18: merchant.GetMerchantReq
	(*MerchantListReq)(nil),                // 19: merchant.MerchantListReq
	(*PageMerchantReq)(nil),                // 20: merchant.PageMerchantReq
	(*MerchantResp)(nil),                   // 21: merchant.MerchantResp
	(*MerchantListResp)(nil),               // 22: merchant.MerchantListResp
	(*ActivateMerchantReq)(nil),            // 23: merchant.ActivateMerchantReq
	(*ActivateMerchantResp)(nil),           // 24: merchant.ActivateMerchantResp
	(*InactivateMerchantReq)(nil),          // 25: merchant.InactivateMerchantReq
	(*InactivateMerchantResp)(nil),         // 26: merchant.InactivateMerchantResp
	(*GetMerchantBaseSettingsReq)(nil),     // 27: merchant.GetMerchantBaseSettingsReq
	(*GetMerchantBaseSettingsResp)(nil),    // 28: merchant.GetMerchantBaseSettingsResp
	(*CreateMerchantBaseSettingsReq)(nil),  // 29: merchant.CreateMerchantBaseSettingsReq
	(*CreateMerchantBaseSettingsResp)(nil), // 30: merchant.CreateMerchantBaseSettingsResp
	(*MerchantPlatformSettings)(nil),       // 31: merchant.MerchantPlatformSettings
	(*CreatePlatformSettingsReq)(nil),      // 32: merchant.CreatePlatformSettingsReq
	(*CreatePlatformSettingsResp)(nil),     // 33: merchant.CreatePlatformSettingsResp
	(*UpdatePlatformSettingsReq)(nil),      // 34: merchant.UpdatePlatformSettingsReq
	(*UpdatePlatformSettingsResp)(nil),     // 35: merchant.UpdatePlatformSettingsResp
	(*ListPlatformSettingsReq)(nil),        // 36: merchant.ListPlatformSettingsReq
	(*ListPlatformSettingsResp)(nil),       // 37: merchant.ListPlatformSettingsResp
	(*MerchantDomainSettings)(nil),         // 38: merchant.MerchantDomainSettings
	(*CreateDomainSettingsReq)(nil),        // 39: merchant.CreateDomainSettingsReq
	(*CreateDomainSettingsResp)(nil),       // 40: merchant.CreateDomainSettingsResp
	(*UpdateDomainSettingsReq)(nil),        // 41: merchant.UpdateDomainSettingsReq
	(*UpdateDomainSettingsResp)(nil),       // 42: merchant.UpdateDomainSettingsResp
	(*ListDomainSettingsReq)(nil),          // 43: merchant.ListDomainSettingsReq
	(*ListDomainSettingsResp)(nil),         // 44: merchant.ListDomainSettingsResp
	(*GetDomainSettingsReq)(nil),           // 45: merchant.GetDomainSettingsReq
	(*GetDomainSettingsResp)(nil),          // 46: merchant.GetDomainSettingsResp
	(*GetMerchantByDomainReq)(nil),         // 47: merchant.GetMerchantByDomainReq
	(*GetMerchantByDomainResp)(nil),        // 48: merchant.GetMerchantByDomainResp
	(*MerchantSecuritySettings)(nil),       // 49: merchant.MerchantSecuritySettings
	(*CreateSecuritySettingsReq)(nil),      // 50: merchant.CreateSecuritySettingsReq
	(*CreateSecuritySettingsResp)(nil),     // 51: merchant.CreateSecuritySettingsResp
	(*ListSecuritySettingsReq)(nil),        // 52: merchant.ListSecuritySettingsReq
	(*ListSecuritySettingsResp)(nil),       // 53: merchant.ListSecuritySettingsResp
	(*UpdateSecuritySettingsReq)(nil),      // 54: merchant.UpdateSecuritySettingsReq
	(*UpdateSecuritySettingsResp)(nil),     // 55: merchant.UpdateSecuritySettingsResp
	(*MerchantAccessSettings)(nil),         // 56: merchant.MerchantAccessSettings
	(*CreateAccessSettingsReq)(nil),        // 57: merchant.CreateAccessSettingsReq
	(*CreateAccessSettingsResp)(nil),       // 58: merchant.CreateAccessSettingsResp
	(*UpdateAccessSettingsReq)(nil),        // 59: merchant.UpdateAccessSettingsReq
	(*UpdateAccessSettingsResp)(nil),       // 60: merchant.UpdateAccessSettingsResp
	(*ListAccessSettingsReq)(nil),          // 61: merchant.ListAccessSettingsReq
	(*ListAccessSettingsResp)(nil),         // 62: merchant.ListAccessSettingsResp
	(*MerchantGameSettings)(nil),           // 63: merchant.MerchantGameSettings
	(*CreateGameSettingsReq)(nil),          // 64: merchant.CreateGameSettingsReq
	(*CreateGameSettingsResp)(nil),         // 65: merchant.CreateGameSettingsResp
	(*ListGameSettingsReq)(nil),            // 66: merchant.ListGameSettingsReq
	(*ListGameSettingsResp)(nil),           // 67: merchant.ListGameSettingsResp
	(*UpdateGameSettingsReq)(nil),          // 68: merchant.UpdateGameSettingsReq
	(*UpdateGameSettingsResp)(nil),         // 69: merchant.UpdateGameSettingsResp
	(*Agent)(nil),                          // 70: merchant.Agent
	(*CreateAgentReq)(nil),                 // 71: merchant.CreateAgentReq
	(*CreateAgentResp)(nil),                // 72: merchant.CreateAgentResp
	(*UpdateAgentReq)(nil),                 // 73: merchant.UpdateAgentReq
	(*UpdateAgentResp)(nil),                // 74: merchant.UpdateAgentResp
	(*ListAgentReq)(nil),                   // 75: merchant.ListAgentReq
	(*ListAgentResp)(nil),                  // 76: merchant.ListAgentResp
	(*GetAgentReq)(nil),                    // 77: merchant.GetAgentReq
	(*GetAgentResp)(nil),                   // 78: merchant.GetAgentResp
	(*CreateAgentDividendReq)(nil),         // 79: merchant.CreateAgentDividendReq
	(*CreateAgentDividendResp)(nil),        // 80: merchant.CreateAgentDividendResp
	(*UpdateAgentDividendReq)(nil),         // 81: merchant.UpdateAgentDividendReq
	(*UpdateAgentDividendResp)(nil),        // 82: merchant.UpdateAgentDividendResp
	(*ListAgentDividendReq)(nil),           // 83: merchant.ListAgentDividendReq
	(*ListAgentDividendResp)(nil),          // 84: merchant.ListAgentDividendResp
	(*GetAgentDividendReq)(nil),            // 85: merchant.GetAgentDividendReq
	(*GetAgentDividendResp)(nil),           // 86: merchant.GetAgentDividendResp
	(*CreateAgentSettlementReq)(nil),       // 87: merchant.CreateAgentSettlementReq
	(*CreateAgentSettlementResp)(nil),      // 88: merchant.CreateAgentSettlementResp
	(*UpdateAgentSettlementReq)(nil),       // 89: merchant.UpdateAgentSettlementReq
	(*UpdateAgentSettlementResp)(nil),      // 90: merchant.UpdateAgentSettlementResp
	(*ListAgentSettlementReq)(nil),         // 91: merchant.ListAgentSettlementReq
	(*ListAgentSettlementResp)(nil),        // 92: merchant.ListAgentSettlementResp
	(*GetAgentSettlementReq)(nil),          // 93: merchant.GetAgentSettlementReq
	(*GetAgentSettlementResp)(nil),         // 94: merchant.GetAgentSettlementResp
	(*MemberMigrationReq)(nil),             // 95: merchant.MemberMigrationReq
	(*MemberMigrationResp)(nil),            // 96: merchant.MemberMigrationResp
	(*MemberMigrationListReq)(nil),         // 97: merchant.MemberMigrationListReq
	(*MemberMigrationListResp)(nil),        // 98: merchant.MemberMigrationListResp
	(*GetAgentByInviteCodeReq)(nil),        // 99: merchant.GetAgentByInviteCodeReq
	(*GetAgentByInviteCodeResp)(nil),       // 100: merchant.GetAgentByInviteCodeResp
}
var file_merchant_proto_depIdxs = []int32{
	0,   // 0: merchant.Merchant.merchantType:type_name -> merchant.MerchantType
	1,   // 1: merchant.Merchant.status:type_name -> merchant.MerchantStatus
	0,   // 2: merchant.CreateMerchantReq.merchantType:type_name -> merchant.MerchantType
	1,   // 3: merchant.UpdateMerchantStatusReq.preStatus:type_name -> merchant.MerchantStatus
	1,   // 4: merchant.UpdateMerchantStatusReq.status:type_name -> merchant.MerchantStatus
	0,   // 5: merchant.MerchantListReq.merchantType:type_name -> merchant.MerchantType
	1,   // 6: merchant.MerchantListReq.status:type_name -> merchant.MerchantStatus
	11,  // 7: merchant.PageMerchantReq.pagination:type_name -> merchant.Pagination
	0,   // 8: merchant.PageMerchantReq.merchantType:type_name -> merchant.MerchantType
	1,   // 9: merchant.PageMerchantReq.status:type_name -> merchant.MerchantStatus
	10,  // 10: merchant.MerchantResp.baseResult:type_name -> merchant.BaseResult
	13,  // 11: merchant.MerchantResp.merchant:type_name -> merchant.Merchant
	10,  // 12: merchant.MerchantListResp.baseResult:type_name -> merchant.BaseResult
	13,  // 13: merchant.MerchantListResp.list:type_name -> merchant.Merchant
	11,  // 14: merchant.MerchantListResp.pagination:type_name -> merchant.Pagination
	10,  // 15: merchant.ActivateMerchantResp.baseResult:type_name -> merchant.BaseResult
	10,  // 16: merchant.InactivateMerchantResp.baseResult:type_name -> merchant.BaseResult
	10,  // 17: merchant.GetMerchantBaseSettingsResp.baseResult:type_name -> merchant.BaseResult
	14,  // 18: merchant.GetMerchantBaseSettingsResp.settings:type_name -> merchant.MerchantBaseSettings
	10,  // 19: merchant.CreateMerchantBaseSettingsResp.baseResult:type_name -> merchant.BaseResult
	2,   // 20: merchant.MerchantPlatformSettings.platformType:type_name -> merchant.MerchantPlatformType
	3,   // 21: merchant.MerchantPlatformSettings.status:type_name -> merchant.MerchantPlatformStatus
	2,   // 22: merchant.CreatePlatformSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	3,   // 23: merchant.CreatePlatformSettingsReq.status:type_name -> merchant.MerchantPlatformStatus
	10,  // 24: merchant.CreatePlatformSettingsResp.baseResult:type_name -> merchant.BaseResult
	31,  // 25: merchant.CreatePlatformSettingsResp.settings:type_name -> merchant.MerchantPlatformSettings
	2,   // 26: merchant.UpdatePlatformSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	10,  // 27: merchant.UpdatePlatformSettingsResp.baseResult:type_name -> merchant.BaseResult
	31,  // 28: merchant.UpdatePlatformSettingsResp.info:type_name -> merchant.MerchantPlatformSettings
	2,   // 29: merchant.ListPlatformSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	10,  // 30: merchant.ListPlatformSettingsResp.baseResult:type_name -> merchant.BaseResult
	31,  // 31: merchant.ListPlatformSettingsResp.list:type_name -> merchant.MerchantPlatformSettings
	11,  // 32: merchant.ListPlatformSettingsResp.pagination:type_name -> merchant.Pagination
	2,   // 33: merchant.MerchantDomainSettings.platformType:type_name -> merchant.MerchantPlatformType
	5,   // 34: merchant.MerchantDomainSettings.status:type_name -> merchant.MerchantDomainStatus
	2,   // 35: merchant.CreateDomainSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	5,   // 36: merchant.CreateDomainSettingsReq.status:type_name -> merchant.MerchantDomainStatus
	10,  // 37: merchant.CreateDomainSettingsResp.baseResult:type_name -> merchant.BaseResult
	38,  // 38: merchant.CreateDomainSettingsResp.settings:type_name -> merchant.MerchantDomainSettings
	2,   // 39: merchant.UpdateDomainSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	5,   // 40: merchant.UpdateDomainSettingsReq.status:type_name -> merchant.MerchantDomainStatus
	10,  // 41: merchant.UpdateDomainSettingsResp.baseResult:type_name -> merchant.BaseResult
	38,  // 42: merchant.UpdateDomainSettingsResp.settings:type_name -> merchant.MerchantDomainSettings
	2,   // 43: merchant.ListDomainSettingsReq.platformType:type_name -> merchant.MerchantPlatformType
	10,  // 44: merchant.ListDomainSettingsResp.baseResult:type_name -> merchant.BaseResult
	38,  // 45: merchant.ListDomainSettingsResp.list:type_name -> merchant.MerchantDomainSettings
	11,  // 46: merchant.ListDomainSettingsResp.pagination:type_name -> merchant.Pagination
	10,  // 47: merchant.GetDomainSettingsResp.baseResult:type_name -> merchant.BaseResult
	38,  // 48: merchant.GetDomainSettingsResp.settings:type_name -> merchant.MerchantDomainSettings
	10,  // 49: merchant.GetMerchantByDomainResp.baseResult:type_name -> merchant.BaseResult
	6,   // 50: merchant.MerchantSecuritySettings.userType:type_name -> merchant.MerchantUserType
	4,   // 51: merchant.MerchantSecuritySettings.status:type_name -> merchant.MerchantSecurityStatus
	6,   // 52: merchant.CreateSecuritySettingsReq.userType:type_name -> merchant.MerchantUserType
	4,   // 53: merchant.CreateSecuritySettingsReq.status:type_name -> merchant.MerchantSecurityStatus
	10,  // 54: merchant.CreateSecuritySettingsResp.baseResult:type_name -> merchant.BaseResult
	49,  // 55: merchant.CreateSecuritySettingsResp.settings:type_name -> merchant.MerchantSecuritySettings
	6,   // 56: merchant.ListSecuritySettingsReq.userType:type_name -> merchant.MerchantUserType
	10,  // 57: merchant.ListSecuritySettingsResp.baseResult:type_name -> merchant.BaseResult
	49,  // 58: merchant.ListSecuritySettingsResp.list:type_name -> merchant.MerchantSecuritySettings
	11,  // 59: merchant.ListSecuritySettingsResp.pagination:type_name -> merchant.Pagination
	6,   // 60: merchant.UpdateSecuritySettingsReq.userType:type_name -> merchant.MerchantUserType
	4,   // 61: merchant.UpdateSecuritySettingsReq.status:type_name -> merchant.MerchantSecurityStatus
	10,  // 62: merchant.UpdateSecuritySettingsResp.baseResult:type_name -> merchant.BaseResult
	49,  // 63: merchant.UpdateSecuritySettingsResp.settings:type_name -> merchant.MerchantSecuritySettings
	6,   // 64: merchant.MerchantAccessSettings.userType:type_name -> merchant.MerchantUserType
	2,   // 65: merchant.MerchantAccessSettings.platformType:type_name -> merchant.MerchantPlatformType
	7,   // 66: merchant.MerchantAccessSettings.restrictionType:type_name -> merchant.MerchantUserAccessRestrictionType
	10,  // 67: merchant.CreateAccessSettingsResp.baseResult:type_name -> merchant.BaseResult
	56,  // 68: merchant.CreateAccessSettingsResp.settings:type_name -> merchant.MerchantAccessSettings
	6,   // 69: merchant.UpdateAccessSettingsReq.userType:type_name -> merchant.MerchantUserType
	10,  // 70: merchant.UpdateAccessSettingsResp.baseResult:type_name -> merchant.BaseResult
	56,  // 71: merchant.UpdateAccessSettingsResp.info:type_name -> merchant.MerchantAccessSettings
	6,   // 72: merchant.ListAccessSettingsReq.userType:type_name -> merchant.MerchantUserType
	10,  // 73: merchant.ListAccessSettingsResp.baseResult:type_name -> merchant.BaseResult
	56,  // 74: merchant.ListAccessSettingsResp.list:type_name -> merchant.MerchantAccessSettings
	11,  // 75: merchant.ListAccessSettingsResp.pagination:type_name -> merchant.Pagination
	10,  // 76: merchant.CreateGameSettingsResp.baseResult:type_name -> merchant.BaseResult
	10,  // 77: merchant.ListGameSettingsResp.baseResult:type_name -> merchant.BaseResult
	63,  // 78: merchant.ListGameSettingsResp.list:type_name -> merchant.MerchantGameSettings
	10,  // 79: merchant.UpdateGameSettingsResp.baseResult:type_name -> merchant.BaseResult
	63,  // 80: merchant.UpdateGameSettingsResp.info:type_name -> merchant.MerchantGameSettings
	9,   // 81: merchant.Agent.status:type_name -> merchant.AgentStatus
	10,  // 82: merchant.CreateAgentResp.baseResult:type_name -> merchant.BaseResult
	70,  // 83: merchant.CreateAgentResp.info:type_name -> merchant.Agent
	10,  // 84: merchant.UpdateAgentResp.baseResult:type_name -> merchant.BaseResult
	70,  // 85: merchant.UpdateAgentResp.info:type_name -> merchant.Agent
	10,  // 86: merchant.ListAgentResp.baseResult:type_name -> merchant.BaseResult
	70,  // 87: merchant.ListAgentResp.list:type_name -> merchant.Agent
	11,  // 88: merchant.ListAgentResp.pagination:type_name -> merchant.Pagination
	10,  // 89: merchant.GetAgentResp.baseResult:type_name -> merchant.BaseResult
	70,  // 90: merchant.GetAgentResp.agent:type_name -> merchant.Agent
	10,  // 91: merchant.GetAgentByInviteCodeResp.baseResult:type_name -> merchant.BaseResult
	70,  // 92: merchant.GetAgentByInviteCodeResp.agent:type_name -> merchant.Agent
	15,  // 93: merchant.MerchantService.CreateMerchant:input_type -> merchant.CreateMerchantReq
	16,  // 94: merchant.MerchantService.UpdateMerchant:input_type -> merchant.UpdateMerchantReq
	23,  // 95: merchant.MerchantService.ActivateMerchant:input_type -> merchant.ActivateMerchantReq
	25,  // 96: merchant.MerchantService.InactivateMerchant:input_type -> merchant.InactivateMerchantReq
	17,  // 97: merchant.MerchantService.UpdateMerchantStatus:input_type -> merchant.UpdateMerchantStatusReq
	18,  // 98: merchant.MerchantService.GetMerchant:input_type -> merchant.GetMerchantReq
	19,  // 99: merchant.MerchantService.ListMerchant:input_type -> merchant.MerchantListReq
	20,  // 100: merchant.MerchantService.PageMerchant:input_type -> merchant.PageMerchantReq
	47,  // 101: merchant.MerchantService.GetMerchantByDomain:input_type -> merchant.GetMerchantByDomainReq
	29,  // 102: merchant.MerchantService.CreateMerchantBaseSettings:input_type -> merchant.CreateMerchantBaseSettingsReq
	27,  // 103: merchant.MerchantService.GetMerchantBaseSettings:input_type -> merchant.GetMerchantBaseSettingsReq
	32,  // 104: merchant.MerchantService.CreatePlatformSettings:input_type -> merchant.CreatePlatformSettingsReq
	34,  // 105: merchant.MerchantService.UpdatePlatformSettings:input_type -> merchant.UpdatePlatformSettingsReq
	36,  // 106: merchant.MerchantService.ListPlatformSettings:input_type -> merchant.ListPlatformSettingsReq
	39,  // 107: merchant.MerchantService.CreateDomainSettings:input_type -> merchant.CreateDomainSettingsReq
	41,  // 108: merchant.MerchantService.UpdateDomainSettings:input_type -> merchant.UpdateDomainSettingsReq
	43,  // 109: merchant.MerchantService.ListDomainSettings:input_type -> merchant.ListDomainSettingsReq
	45,  // 110: merchant.MerchantService.GetDomainSettings:input_type -> merchant.GetDomainSettingsReq
	50,  // 111: merchant.MerchantService.CreateSecuritySettings:input_type -> merchant.CreateSecuritySettingsReq
	54,  // 112: merchant.MerchantService.UpdateSecuritySettings:input_type -> merchant.UpdateSecuritySettingsReq
	52,  // 113: merchant.MerchantService.ListSecuritySettings:input_type -> merchant.ListSecuritySettingsReq
	57,  // 114: merchant.MerchantService.CreateAccessSettings:input_type -> merchant.CreateAccessSettingsReq
	59,  // 115: merchant.MerchantService.UpdateAccessSettings:input_type -> merchant.UpdateAccessSettingsReq
	61,  // 116: merchant.MerchantService.ListAccessSettings:input_type -> merchant.ListAccessSettingsReq
	64,  // 117: merchant.MerchantService.CreateGameSettings:input_type -> merchant.CreateGameSettingsReq
	68,  // 118: merchant.MerchantService.UpdateGameSettings:input_type -> merchant.UpdateGameSettingsReq
	66,  // 119: merchant.MerchantService.ListGameSettings:input_type -> merchant.ListGameSettingsReq
	71,  // 120: merchant.MerchantService.CreateAgent:input_type -> merchant.CreateAgentReq
	73,  // 121: merchant.MerchantService.UpdateAgent:input_type -> merchant.UpdateAgentReq
	75,  // 122: merchant.MerchantService.ListAgent:input_type -> merchant.ListAgentReq
	77,  // 123: merchant.MerchantService.GetAgent:input_type -> merchant.GetAgentReq
	99,  // 124: merchant.MerchantService.GetAgentByInviteCode:input_type -> merchant.GetAgentByInviteCodeReq
	79,  // 125: merchant.MerchantService.CreateAgentDividend:input_type -> merchant.CreateAgentDividendReq
	81,  // 126: merchant.MerchantService.UpdateAgentDividend:input_type -> merchant.UpdateAgentDividendReq
	83,  // 127: merchant.MerchantService.ListAgentDividend:input_type -> merchant.ListAgentDividendReq
	85,  // 128: merchant.MerchantService.GetAgentDividend:input_type -> merchant.GetAgentDividendReq
	87,  // 129: merchant.MerchantService.CreateAgentSettlement:input_type -> merchant.CreateAgentSettlementReq
	89,  // 130: merchant.MerchantService.UpdateAgentSettlement:input_type -> merchant.UpdateAgentSettlementReq
	91,  // 131: merchant.MerchantService.ListAgentSettlement:input_type -> merchant.ListAgentSettlementReq
	93,  // 132: merchant.MerchantService.GetAgentSettlement:input_type -> merchant.GetAgentSettlementReq
	95,  // 133: merchant.MerchantService.AgentMemberMigration:input_type -> merchant.MemberMigrationReq
	97,  // 134: merchant.MerchantService.ListAgentMemberMigrationRecord:input_type -> merchant.MemberMigrationListReq
	21,  // 135: merchant.MerchantService.CreateMerchant:output_type -> merchant.MerchantResp
	21,  // 136: merchant.MerchantService.UpdateMerchant:output_type -> merchant.MerchantResp
	24,  // 137: merchant.MerchantService.ActivateMerchant:output_type -> merchant.ActivateMerchantResp
	26,  // 138: merchant.MerchantService.InactivateMerchant:output_type -> merchant.InactivateMerchantResp
	21,  // 139: merchant.MerchantService.UpdateMerchantStatus:output_type -> merchant.MerchantResp
	21,  // 140: merchant.MerchantService.GetMerchant:output_type -> merchant.MerchantResp
	22,  // 141: merchant.MerchantService.ListMerchant:output_type -> merchant.MerchantListResp
	22,  // 142: merchant.MerchantService.PageMerchant:output_type -> merchant.MerchantListResp
	48,  // 143: merchant.MerchantService.GetMerchantByDomain:output_type -> merchant.GetMerchantByDomainResp
	30,  // 144: merchant.MerchantService.CreateMerchantBaseSettings:output_type -> merchant.CreateMerchantBaseSettingsResp
	28,  // 145: merchant.MerchantService.GetMerchantBaseSettings:output_type -> merchant.GetMerchantBaseSettingsResp
	33,  // 146: merchant.MerchantService.CreatePlatformSettings:output_type -> merchant.CreatePlatformSettingsResp
	35,  // 147: merchant.MerchantService.UpdatePlatformSettings:output_type -> merchant.UpdatePlatformSettingsResp
	37,  // 148: merchant.MerchantService.ListPlatformSettings:output_type -> merchant.ListPlatformSettingsResp
	40,  // 149: merchant.MerchantService.CreateDomainSettings:output_type -> merchant.CreateDomainSettingsResp
	42,  // 150: merchant.MerchantService.UpdateDomainSettings:output_type -> merchant.UpdateDomainSettingsResp
	44,  // 151: merchant.MerchantService.ListDomainSettings:output_type -> merchant.ListDomainSettingsResp
	46,  // 152: merchant.MerchantService.GetDomainSettings:output_type -> merchant.GetDomainSettingsResp
	51,  // 153: merchant.MerchantService.CreateSecuritySettings:output_type -> merchant.CreateSecuritySettingsResp
	55,  // 154: merchant.MerchantService.UpdateSecuritySettings:output_type -> merchant.UpdateSecuritySettingsResp
	53,  // 155: merchant.MerchantService.ListSecuritySettings:output_type -> merchant.ListSecuritySettingsResp
	58,  // 156: merchant.MerchantService.CreateAccessSettings:output_type -> merchant.CreateAccessSettingsResp
	60,  // 157: merchant.MerchantService.UpdateAccessSettings:output_type -> merchant.UpdateAccessSettingsResp
	62,  // 158: merchant.MerchantService.ListAccessSettings:output_type -> merchant.ListAccessSettingsResp
	65,  // 159: merchant.MerchantService.CreateGameSettings:output_type -> merchant.CreateGameSettingsResp
	69,  // 160: merchant.MerchantService.UpdateGameSettings:output_type -> merchant.UpdateGameSettingsResp
	67,  // 161: merchant.MerchantService.ListGameSettings:output_type -> merchant.ListGameSettingsResp
	72,  // 162: merchant.MerchantService.CreateAgent:output_type -> merchant.CreateAgentResp
	74,  // 163: merchant.MerchantService.UpdateAgent:output_type -> merchant.UpdateAgentResp
	76,  // 164: merchant.MerchantService.ListAgent:output_type -> merchant.ListAgentResp
	78,  // 165: merchant.MerchantService.GetAgent:output_type -> merchant.GetAgentResp
	100, // 166: merchant.MerchantService.GetAgentByInviteCode:output_type -> merchant.GetAgentByInviteCodeResp
	80,  // 167: merchant.MerchantService.CreateAgentDividend:output_type -> merchant.CreateAgentDividendResp
	82,  // 168: merchant.MerchantService.UpdateAgentDividend:output_type -> merchant.UpdateAgentDividendResp
	84,  // 169: merchant.MerchantService.ListAgentDividend:output_type -> merchant.ListAgentDividendResp
	86,  // 170: merchant.MerchantService.GetAgentDividend:output_type -> merchant.GetAgentDividendResp
	88,  // 171: merchant.MerchantService.CreateAgentSettlement:output_type -> merchant.CreateAgentSettlementResp
	90,  // 172: merchant.MerchantService.UpdateAgentSettlement:output_type -> merchant.UpdateAgentSettlementResp
	92,  // 173: merchant.MerchantService.ListAgentSettlement:output_type -> merchant.ListAgentSettlementResp
	94,  // 174: merchant.MerchantService.GetAgentSettlement:output_type -> merchant.GetAgentSettlementResp
	96,  // 175: merchant.MerchantService.AgentMemberMigration:output_type -> merchant.MemberMigrationResp
	98,  // 176: merchant.MerchantService.ListAgentMemberMigrationRecord:output_type -> merchant.MemberMigrationListResp
	135, // [135:177] is the sub-list for method output_type
	93,  // [93:135] is the sub-list for method input_type
	93,  // [93:93] is the sub-list for extension type_name
	93,  // [93:93] is the sub-list for extension extendee
	0,   // [0:93] is the sub-list for field type_name
}

func init() { file_merchant_proto_init() }
func file_merchant_proto_init() {
	if File_merchant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_merchant_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CommonModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Merchant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantBaseSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMerchantStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PageMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ActivateMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ActivateMerchantResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*InactivateMerchantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*InactivateMerchantResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetMerchantBaseSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetMerchantBaseSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMerchantBaseSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMerchantBaseSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantPlatformSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePlatformSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePlatformSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePlatformSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePlatformSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ListPlatformSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ListPlatformSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantDomainSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDomainSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDomainSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDomainSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDomainSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ListDomainSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ListDomainSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetDomainSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetDomainSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetMerchantByDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetMerchantByDomainResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantSecuritySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSecuritySettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSecuritySettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ListSecuritySettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*ListSecuritySettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSecuritySettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSecuritySettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantAccessSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAccessSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAccessSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAccessSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAccessSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ListAccessSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*ListAccessSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*MerchantGameSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGameSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGameSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ListGameSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*ListGameSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGameSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGameSettingsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentDividendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentDividendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentDividendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentDividendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentDividendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentDividendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentDividendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentDividendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAgentSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAgentSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ListAgentSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*MemberMigrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*MemberMigrationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*MemberMigrationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*MemberMigrationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentByInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*GetAgentByInviteCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_merchant_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   91,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_merchant_proto_goTypes,
		DependencyIndexes: file_merchant_proto_depIdxs,
		EnumInfos:         file_merchant_proto_enumTypes,
		MessageInfos:      file_merchant_proto_msgTypes,
	}.Build()
	File_merchant_proto = out.File
	file_merchant_proto_rawDesc = nil
	file_merchant_proto_goTypes = nil
	file_merchant_proto_depIdxs = nil
}
